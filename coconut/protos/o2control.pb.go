// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: protos/o2control.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusUpdate_Level int32

const (
	StatusUpdate_DEBUG   StatusUpdate_Level = 0
	StatusUpdate_INFO    StatusUpdate_Level = 1
	StatusUpdate_WARNING StatusUpdate_Level = 2
	StatusUpdate_ERROR   StatusUpdate_Level = 3
)

var StatusUpdate_Level_name = map[int32]string{
	0: "DEBUG",
	1: "INFO",
	2: "WARNING",
	3: "ERROR",
}

var StatusUpdate_Level_value = map[string]int32{
	"DEBUG":   0,
	"INFO":    1,
	"WARNING": 2,
	"ERROR":   3,
}

func (x StatusUpdate_Level) String() string {
	return proto.EnumName(StatusUpdate_Level_name, int32(x))
}

func (StatusUpdate_Level) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{3, 0}
}

type ControlEnvironmentRequest_Optype int32

const (
	ControlEnvironmentRequest_NOOP           ControlEnvironmentRequest_Optype = 0
	ControlEnvironmentRequest_START_ACTIVITY ControlEnvironmentRequest_Optype = 1
	ControlEnvironmentRequest_STOP_ACTIVITY  ControlEnvironmentRequest_Optype = 2
	ControlEnvironmentRequest_CONFIGURE      ControlEnvironmentRequest_Optype = 3
	ControlEnvironmentRequest_RESET          ControlEnvironmentRequest_Optype = 4
	ControlEnvironmentRequest_GO_ERROR       ControlEnvironmentRequest_Optype = 5
)

var ControlEnvironmentRequest_Optype_name = map[int32]string{
	0: "NOOP",
	1: "START_ACTIVITY",
	2: "STOP_ACTIVITY",
	3: "CONFIGURE",
	4: "RESET",
	5: "GO_ERROR",
}

var ControlEnvironmentRequest_Optype_value = map[string]int32{
	"NOOP":           0,
	"START_ACTIVITY": 1,
	"STOP_ACTIVITY":  2,
	"CONFIGURE":      3,
	"RESET":          4,
	"GO_ERROR":       5,
}

func (x ControlEnvironmentRequest_Optype) String() string {
	return proto.EnumName(ControlEnvironmentRequest_Optype_name, int32(x))
}

func (ControlEnvironmentRequest_Optype) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{16, 0}
}

type EnvironmentOperation_Optype int32

const (
	EnvironmentOperation_NOOP        EnvironmentOperation_Optype = 0
	EnvironmentOperation_REMOVE_ROLE EnvironmentOperation_Optype = 3
	EnvironmentOperation_ADD_ROLE    EnvironmentOperation_Optype = 4
)

var EnvironmentOperation_Optype_name = map[int32]string{
	0: "NOOP",
	3: "REMOVE_ROLE",
	4: "ADD_ROLE",
}

var EnvironmentOperation_Optype_value = map[string]int32{
	"NOOP":        0,
	"REMOVE_ROLE": 3,
	"ADD_ROLE":    4,
}

func (x EnvironmentOperation_Optype) String() string {
	return proto.EnumName(EnvironmentOperation_Optype_name, int32(x))
}

func (EnvironmentOperation_Optype) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{19, 0}
}

type Event_MesosHeartbeat struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event_MesosHeartbeat) Reset()         { *m = Event_MesosHeartbeat{} }
func (m *Event_MesosHeartbeat) String() string { return proto.CompactTextString(m) }
func (*Event_MesosHeartbeat) ProtoMessage()    {}
func (*Event_MesosHeartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{0}
}
func (m *Event_MesosHeartbeat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Event_MesosHeartbeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Event_MesosHeartbeat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Event_MesosHeartbeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event_MesosHeartbeat.Merge(m, src)
}
func (m *Event_MesosHeartbeat) XXX_Size() int {
	return m.Size()
}
func (m *Event_MesosHeartbeat) XXX_DiscardUnknown() {
	xxx_messageInfo_Event_MesosHeartbeat.DiscardUnknown(m)
}

var xxx_messageInfo_Event_MesosHeartbeat proto.InternalMessageInfo

////////////////////////////////////////
// Global status
////////////////////////////////////////
type StatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusRequest) Reset()         { *m = StatusRequest{} }
func (m *StatusRequest) String() string { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()    {}
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{1}
}
func (m *StatusRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatusRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusRequest.Merge(m, src)
}
func (m *StatusRequest) XXX_Size() int {
	return m.Size()
}
func (m *StatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusRequest proto.InternalMessageInfo

type StatusReply struct {
	State                string          `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	StatusUpdates        []*StatusUpdate `protobuf:"bytes,2,rep,name=statusUpdates,proto3" json:"statusUpdates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StatusReply) Reset()         { *m = StatusReply{} }
func (m *StatusReply) String() string { return proto.CompactTextString(m) }
func (*StatusReply) ProtoMessage()    {}
func (*StatusReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{2}
}
func (m *StatusReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatusReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatusReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatusReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusReply.Merge(m, src)
}
func (m *StatusReply) XXX_Size() int {
	return m.Size()
}
func (m *StatusReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusReply.DiscardUnknown(m)
}

var xxx_messageInfo_StatusReply proto.InternalMessageInfo

func (m *StatusReply) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *StatusReply) GetStatusUpdates() []*StatusUpdate {
	if m != nil {
		return m.StatusUpdates
	}
	return nil
}

type StatusUpdate struct {
	Level StatusUpdate_Level `protobuf:"varint,1,opt,name=level,proto3,enum=o2control.StatusUpdate_Level" json:"level,omitempty"`
	// Types that are valid to be assigned to Event:
	//	*StatusUpdate_MesosHeartbeat
	Event                isStatusUpdate_Event `protobuf_oneof:"Event"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StatusUpdate) Reset()         { *m = StatusUpdate{} }
func (m *StatusUpdate) String() string { return proto.CompactTextString(m) }
func (*StatusUpdate) ProtoMessage()    {}
func (*StatusUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{3}
}
func (m *StatusUpdate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatusUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatusUpdate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatusUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusUpdate.Merge(m, src)
}
func (m *StatusUpdate) XXX_Size() int {
	return m.Size()
}
func (m *StatusUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_StatusUpdate proto.InternalMessageInfo

type isStatusUpdate_Event interface {
	isStatusUpdate_Event()
	MarshalTo([]byte) (int, error)
	Size() int
}

type StatusUpdate_MesosHeartbeat struct {
	MesosHeartbeat *Event_MesosHeartbeat `protobuf:"bytes,2,opt,name=mesosHeartbeat,proto3,oneof"`
}

func (*StatusUpdate_MesosHeartbeat) isStatusUpdate_Event() {}

func (m *StatusUpdate) GetEvent() isStatusUpdate_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *StatusUpdate) GetLevel() StatusUpdate_Level {
	if m != nil {
		return m.Level
	}
	return StatusUpdate_DEBUG
}

func (m *StatusUpdate) GetMesosHeartbeat() *Event_MesosHeartbeat {
	if x, ok := m.GetEvent().(*StatusUpdate_MesosHeartbeat); ok {
		return x.MesosHeartbeat
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*StatusUpdate) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _StatusUpdate_OneofMarshaler, _StatusUpdate_OneofUnmarshaler, _StatusUpdate_OneofSizer, []interface{}{
		(*StatusUpdate_MesosHeartbeat)(nil),
	}
}

func _StatusUpdate_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*StatusUpdate)
	// Event
	switch x := m.Event.(type) {
	case *StatusUpdate_MesosHeartbeat:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MesosHeartbeat); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("StatusUpdate.Event has unexpected type %T", x)
	}
	return nil
}

func _StatusUpdate_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*StatusUpdate)
	switch tag {
	case 2: // Event.mesosHeartbeat
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_MesosHeartbeat)
		err := b.DecodeMessage(msg)
		m.Event = &StatusUpdate_MesosHeartbeat{msg}
		return true, err
	default:
		return false, nil
	}
}

func _StatusUpdate_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*StatusUpdate)
	// Event
	switch x := m.Event.(type) {
	case *StatusUpdate_MesosHeartbeat:
		s := proto.Size(x.MesosHeartbeat)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

////////////////////////////////////////
// Framework
////////////////////////////////////////
type GetFrameworkInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFrameworkInfoRequest) Reset()         { *m = GetFrameworkInfoRequest{} }
func (m *GetFrameworkInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetFrameworkInfoRequest) ProtoMessage()    {}
func (*GetFrameworkInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{4}
}
func (m *GetFrameworkInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetFrameworkInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetFrameworkInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetFrameworkInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFrameworkInfoRequest.Merge(m, src)
}
func (m *GetFrameworkInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetFrameworkInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFrameworkInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFrameworkInfoRequest proto.InternalMessageInfo

type Version struct {
	Major                int32    `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor                int32    `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	Patch                int32    `protobuf:"varint,3,opt,name=patch,proto3" json:"patch,omitempty"`
	Build                string   `protobuf:"bytes,4,opt,name=build,proto3" json:"build,omitempty"`
	ProductName          string   `protobuf:"bytes,5,opt,name=productName,proto3" json:"productName,omitempty"`
	VersionStr           string   `protobuf:"bytes,6,opt,name=versionStr,proto3" json:"versionStr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{5}
}
func (m *Version) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Version.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return m.Size()
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetMajor() int32 {
	if m != nil {
		return m.Major
	}
	return 0
}

func (m *Version) GetMinor() int32 {
	if m != nil {
		return m.Minor
	}
	return 0
}

func (m *Version) GetPatch() int32 {
	if m != nil {
		return m.Patch
	}
	return 0
}

func (m *Version) GetBuild() string {
	if m != nil {
		return m.Build
	}
	return ""
}

func (m *Version) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

func (m *Version) GetVersionStr() string {
	if m != nil {
		return m.VersionStr
	}
	return ""
}

type GetFrameworkInfoReply struct {
	FrameworkId          string   `protobuf:"bytes,1,opt,name=frameworkId,proto3" json:"frameworkId,omitempty"`
	EnvironmentsCount    int32    `protobuf:"varint,2,opt,name=environmentsCount,proto3" json:"environmentsCount,omitempty"`
	TasksCount           int32    `protobuf:"varint,3,opt,name=tasksCount,proto3" json:"tasksCount,omitempty"`
	State                string   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	HostsCount           int32    `protobuf:"varint,5,opt,name=hostsCount,proto3" json:"hostsCount,omitempty"`
	InstanceName         string   `protobuf:"bytes,6,opt,name=instanceName,proto3" json:"instanceName,omitempty"`
	Version              *Version `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFrameworkInfoReply) Reset()         { *m = GetFrameworkInfoReply{} }
func (m *GetFrameworkInfoReply) String() string { return proto.CompactTextString(m) }
func (*GetFrameworkInfoReply) ProtoMessage()    {}
func (*GetFrameworkInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{6}
}
func (m *GetFrameworkInfoReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetFrameworkInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetFrameworkInfoReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetFrameworkInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFrameworkInfoReply.Merge(m, src)
}
func (m *GetFrameworkInfoReply) XXX_Size() int {
	return m.Size()
}
func (m *GetFrameworkInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFrameworkInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetFrameworkInfoReply proto.InternalMessageInfo

func (m *GetFrameworkInfoReply) GetFrameworkId() string {
	if m != nil {
		return m.FrameworkId
	}
	return ""
}

func (m *GetFrameworkInfoReply) GetEnvironmentsCount() int32 {
	if m != nil {
		return m.EnvironmentsCount
	}
	return 0
}

func (m *GetFrameworkInfoReply) GetTasksCount() int32 {
	if m != nil {
		return m.TasksCount
	}
	return 0
}

func (m *GetFrameworkInfoReply) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *GetFrameworkInfoReply) GetHostsCount() int32 {
	if m != nil {
		return m.HostsCount
	}
	return 0
}

func (m *GetFrameworkInfoReply) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *GetFrameworkInfoReply) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

// Not implemented yet
type TeardownRequest struct {
	Reason               string   `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeardownRequest) Reset()         { *m = TeardownRequest{} }
func (m *TeardownRequest) String() string { return proto.CompactTextString(m) }
func (*TeardownRequest) ProtoMessage()    {}
func (*TeardownRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{7}
}
func (m *TeardownRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TeardownRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TeardownRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TeardownRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeardownRequest.Merge(m, src)
}
func (m *TeardownRequest) XXX_Size() int {
	return m.Size()
}
func (m *TeardownRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TeardownRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TeardownRequest proto.InternalMessageInfo

func (m *TeardownRequest) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type TeardownReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeardownReply) Reset()         { *m = TeardownReply{} }
func (m *TeardownReply) String() string { return proto.CompactTextString(m) }
func (*TeardownReply) ProtoMessage()    {}
func (*TeardownReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{8}
}
func (m *TeardownReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TeardownReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TeardownReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TeardownReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeardownReply.Merge(m, src)
}
func (m *TeardownReply) XXX_Size() int {
	return m.Size()
}
func (m *TeardownReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TeardownReply.DiscardUnknown(m)
}

var xxx_messageInfo_TeardownReply proto.InternalMessageInfo

////////////////////////////////////////
// Environment
////////////////////////////////////////
type GetEnvironmentsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEnvironmentsRequest) Reset()         { *m = GetEnvironmentsRequest{} }
func (m *GetEnvironmentsRequest) String() string { return proto.CompactTextString(m) }
func (*GetEnvironmentsRequest) ProtoMessage()    {}
func (*GetEnvironmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{9}
}
func (m *GetEnvironmentsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetEnvironmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetEnvironmentsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetEnvironmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEnvironmentsRequest.Merge(m, src)
}
func (m *GetEnvironmentsRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetEnvironmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEnvironmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEnvironmentsRequest proto.InternalMessageInfo

type GetEnvironmentsReply struct {
	FrameworkId          string             `protobuf:"bytes,1,opt,name=frameworkId,proto3" json:"frameworkId,omitempty"`
	Environments         []*EnvironmentInfo `protobuf:"bytes,2,rep,name=environments,proto3" json:"environments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetEnvironmentsReply) Reset()         { *m = GetEnvironmentsReply{} }
func (m *GetEnvironmentsReply) String() string { return proto.CompactTextString(m) }
func (*GetEnvironmentsReply) ProtoMessage()    {}
func (*GetEnvironmentsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{10}
}
func (m *GetEnvironmentsReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetEnvironmentsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetEnvironmentsReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetEnvironmentsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEnvironmentsReply.Merge(m, src)
}
func (m *GetEnvironmentsReply) XXX_Size() int {
	return m.Size()
}
func (m *GetEnvironmentsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEnvironmentsReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetEnvironmentsReply proto.InternalMessageInfo

func (m *GetEnvironmentsReply) GetFrameworkId() string {
	if m != nil {
		return m.FrameworkId
	}
	return ""
}

func (m *GetEnvironmentsReply) GetEnvironments() []*EnvironmentInfo {
	if m != nil {
		return m.Environments
	}
	return nil
}

type EnvironmentInfo struct {
	Id                   string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedWhen          string           `protobuf:"bytes,2,opt,name=createdWhen,proto3" json:"createdWhen,omitempty"`
	State                string           `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Tasks                []*ShortTaskInfo `protobuf:"bytes,4,rep,name=tasks,proto3" json:"tasks,omitempty"`
	RootRole             string           `protobuf:"bytes,5,opt,name=rootRole,proto3" json:"rootRole,omitempty"`
	CurrentRunNumber     uint32           `protobuf:"varint,6,opt,name=currentRunNumber,proto3" json:"currentRunNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EnvironmentInfo) Reset()         { *m = EnvironmentInfo{} }
func (m *EnvironmentInfo) String() string { return proto.CompactTextString(m) }
func (*EnvironmentInfo) ProtoMessage()    {}
func (*EnvironmentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{11}
}
func (m *EnvironmentInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EnvironmentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EnvironmentInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EnvironmentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvironmentInfo.Merge(m, src)
}
func (m *EnvironmentInfo) XXX_Size() int {
	return m.Size()
}
func (m *EnvironmentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvironmentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EnvironmentInfo proto.InternalMessageInfo

func (m *EnvironmentInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EnvironmentInfo) GetCreatedWhen() string {
	if m != nil {
		return m.CreatedWhen
	}
	return ""
}

func (m *EnvironmentInfo) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *EnvironmentInfo) GetTasks() []*ShortTaskInfo {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *EnvironmentInfo) GetRootRole() string {
	if m != nil {
		return m.RootRole
	}
	return ""
}

func (m *EnvironmentInfo) GetCurrentRunNumber() uint32 {
	if m != nil {
		return m.CurrentRunNumber
	}
	return 0
}

type NewEnvironmentRequest struct {
	WorkflowTemplate     string   `protobuf:"bytes,1,opt,name=workflowTemplate,proto3" json:"workflowTemplate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewEnvironmentRequest) Reset()         { *m = NewEnvironmentRequest{} }
func (m *NewEnvironmentRequest) String() string { return proto.CompactTextString(m) }
func (*NewEnvironmentRequest) ProtoMessage()    {}
func (*NewEnvironmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{12}
}
func (m *NewEnvironmentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NewEnvironmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NewEnvironmentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NewEnvironmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewEnvironmentRequest.Merge(m, src)
}
func (m *NewEnvironmentRequest) XXX_Size() int {
	return m.Size()
}
func (m *NewEnvironmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewEnvironmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewEnvironmentRequest proto.InternalMessageInfo

func (m *NewEnvironmentRequest) GetWorkflowTemplate() string {
	if m != nil {
		return m.WorkflowTemplate
	}
	return ""
}

type NewEnvironmentReply struct {
	Environment          *EnvironmentInfo `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *NewEnvironmentReply) Reset()         { *m = NewEnvironmentReply{} }
func (m *NewEnvironmentReply) String() string { return proto.CompactTextString(m) }
func (*NewEnvironmentReply) ProtoMessage()    {}
func (*NewEnvironmentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{13}
}
func (m *NewEnvironmentReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NewEnvironmentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NewEnvironmentReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NewEnvironmentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewEnvironmentReply.Merge(m, src)
}
func (m *NewEnvironmentReply) XXX_Size() int {
	return m.Size()
}
func (m *NewEnvironmentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NewEnvironmentReply.DiscardUnknown(m)
}

var xxx_messageInfo_NewEnvironmentReply proto.InternalMessageInfo

func (m *NewEnvironmentReply) GetEnvironment() *EnvironmentInfo {
	if m != nil {
		return m.Environment
	}
	return nil
}

type GetEnvironmentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEnvironmentRequest) Reset()         { *m = GetEnvironmentRequest{} }
func (m *GetEnvironmentRequest) String() string { return proto.CompactTextString(m) }
func (*GetEnvironmentRequest) ProtoMessage()    {}
func (*GetEnvironmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{14}
}
func (m *GetEnvironmentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetEnvironmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetEnvironmentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetEnvironmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEnvironmentRequest.Merge(m, src)
}
func (m *GetEnvironmentRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetEnvironmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEnvironmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEnvironmentRequest proto.InternalMessageInfo

func (m *GetEnvironmentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetEnvironmentReply struct {
	Environment          *EnvironmentInfo `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	Workflow             *RoleInfo        `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetEnvironmentReply) Reset()         { *m = GetEnvironmentReply{} }
func (m *GetEnvironmentReply) String() string { return proto.CompactTextString(m) }
func (*GetEnvironmentReply) ProtoMessage()    {}
func (*GetEnvironmentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{15}
}
func (m *GetEnvironmentReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetEnvironmentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetEnvironmentReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetEnvironmentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEnvironmentReply.Merge(m, src)
}
func (m *GetEnvironmentReply) XXX_Size() int {
	return m.Size()
}
func (m *GetEnvironmentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEnvironmentReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetEnvironmentReply proto.InternalMessageInfo

func (m *GetEnvironmentReply) GetEnvironment() *EnvironmentInfo {
	if m != nil {
		return m.Environment
	}
	return nil
}

func (m *GetEnvironmentReply) GetWorkflow() *RoleInfo {
	if m != nil {
		return m.Workflow
	}
	return nil
}

type ControlEnvironmentRequest struct {
	Id                   string                           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 ControlEnvironmentRequest_Optype `protobuf:"varint,2,opt,name=type,proto3,enum=o2control.ControlEnvironmentRequest_Optype" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ControlEnvironmentRequest) Reset()         { *m = ControlEnvironmentRequest{} }
func (m *ControlEnvironmentRequest) String() string { return proto.CompactTextString(m) }
func (*ControlEnvironmentRequest) ProtoMessage()    {}
func (*ControlEnvironmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{16}
}
func (m *ControlEnvironmentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControlEnvironmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ControlEnvironmentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ControlEnvironmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlEnvironmentRequest.Merge(m, src)
}
func (m *ControlEnvironmentRequest) XXX_Size() int {
	return m.Size()
}
func (m *ControlEnvironmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlEnvironmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ControlEnvironmentRequest proto.InternalMessageInfo

func (m *ControlEnvironmentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ControlEnvironmentRequest) GetType() ControlEnvironmentRequest_Optype {
	if m != nil {
		return m.Type
	}
	return ControlEnvironmentRequest_NOOP
}

type ControlEnvironmentReply struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State                string   `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	CurrentRunNumber     uint32   `protobuf:"varint,3,opt,name=currentRunNumber,proto3" json:"currentRunNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlEnvironmentReply) Reset()         { *m = ControlEnvironmentReply{} }
func (m *ControlEnvironmentReply) String() string { return proto.CompactTextString(m) }
func (*ControlEnvironmentReply) ProtoMessage()    {}
func (*ControlEnvironmentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{17}
}
func (m *ControlEnvironmentReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControlEnvironmentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ControlEnvironmentReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ControlEnvironmentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlEnvironmentReply.Merge(m, src)
}
func (m *ControlEnvironmentReply) XXX_Size() int {
	return m.Size()
}
func (m *ControlEnvironmentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlEnvironmentReply.DiscardUnknown(m)
}

var xxx_messageInfo_ControlEnvironmentReply proto.InternalMessageInfo

func (m *ControlEnvironmentReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ControlEnvironmentReply) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *ControlEnvironmentReply) GetCurrentRunNumber() uint32 {
	if m != nil {
		return m.CurrentRunNumber
	}
	return 0
}

type ModifyEnvironmentRequest struct {
	Id                   string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Operations           []*EnvironmentOperation `protobuf:"bytes,2,rep,name=operations,proto3" json:"operations,omitempty"`
	ReconfigureAll       bool                    `protobuf:"varint,3,opt,name=reconfigureAll,proto3" json:"reconfigureAll,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ModifyEnvironmentRequest) Reset()         { *m = ModifyEnvironmentRequest{} }
func (m *ModifyEnvironmentRequest) String() string { return proto.CompactTextString(m) }
func (*ModifyEnvironmentRequest) ProtoMessage()    {}
func (*ModifyEnvironmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{18}
}
func (m *ModifyEnvironmentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModifyEnvironmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModifyEnvironmentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModifyEnvironmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModifyEnvironmentRequest.Merge(m, src)
}
func (m *ModifyEnvironmentRequest) XXX_Size() int {
	return m.Size()
}
func (m *ModifyEnvironmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModifyEnvironmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModifyEnvironmentRequest proto.InternalMessageInfo

func (m *ModifyEnvironmentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ModifyEnvironmentRequest) GetOperations() []*EnvironmentOperation {
	if m != nil {
		return m.Operations
	}
	return nil
}

func (m *ModifyEnvironmentRequest) GetReconfigureAll() bool {
	if m != nil {
		return m.ReconfigureAll
	}
	return false
}

type EnvironmentOperation struct {
	Type                 EnvironmentOperation_Optype `protobuf:"varint,1,opt,name=type,proto3,enum=o2control.EnvironmentOperation_Optype" json:"type,omitempty"`
	RoleName             string                      `protobuf:"bytes,2,opt,name=roleName,proto3" json:"roleName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *EnvironmentOperation) Reset()         { *m = EnvironmentOperation{} }
func (m *EnvironmentOperation) String() string { return proto.CompactTextString(m) }
func (*EnvironmentOperation) ProtoMessage()    {}
func (*EnvironmentOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{19}
}
func (m *EnvironmentOperation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EnvironmentOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EnvironmentOperation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EnvironmentOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvironmentOperation.Merge(m, src)
}
func (m *EnvironmentOperation) XXX_Size() int {
	return m.Size()
}
func (m *EnvironmentOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvironmentOperation.DiscardUnknown(m)
}

var xxx_messageInfo_EnvironmentOperation proto.InternalMessageInfo

func (m *EnvironmentOperation) GetType() EnvironmentOperation_Optype {
	if m != nil {
		return m.Type
	}
	return EnvironmentOperation_NOOP
}

func (m *EnvironmentOperation) GetRoleName() string {
	if m != nil {
		return m.RoleName
	}
	return ""
}

type ModifyEnvironmentReply struct {
	FailedOperations     []*EnvironmentOperation `protobuf:"bytes,1,rep,name=failedOperations,proto3" json:"failedOperations,omitempty"`
	Id                   string                  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	State                string                  `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ModifyEnvironmentReply) Reset()         { *m = ModifyEnvironmentReply{} }
func (m *ModifyEnvironmentReply) String() string { return proto.CompactTextString(m) }
func (*ModifyEnvironmentReply) ProtoMessage()    {}
func (*ModifyEnvironmentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{20}
}
func (m *ModifyEnvironmentReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModifyEnvironmentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModifyEnvironmentReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModifyEnvironmentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModifyEnvironmentReply.Merge(m, src)
}
func (m *ModifyEnvironmentReply) XXX_Size() int {
	return m.Size()
}
func (m *ModifyEnvironmentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ModifyEnvironmentReply.DiscardUnknown(m)
}

var xxx_messageInfo_ModifyEnvironmentReply proto.InternalMessageInfo

func (m *ModifyEnvironmentReply) GetFailedOperations() []*EnvironmentOperation {
	if m != nil {
		return m.FailedOperations
	}
	return nil
}

func (m *ModifyEnvironmentReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ModifyEnvironmentReply) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type DestroyEnvironmentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DestroyEnvironmentRequest) Reset()         { *m = DestroyEnvironmentRequest{} }
func (m *DestroyEnvironmentRequest) String() string { return proto.CompactTextString(m) }
func (*DestroyEnvironmentRequest) ProtoMessage()    {}
func (*DestroyEnvironmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{21}
}
func (m *DestroyEnvironmentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DestroyEnvironmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DestroyEnvironmentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DestroyEnvironmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DestroyEnvironmentRequest.Merge(m, src)
}
func (m *DestroyEnvironmentRequest) XXX_Size() int {
	return m.Size()
}
func (m *DestroyEnvironmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DestroyEnvironmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DestroyEnvironmentRequest proto.InternalMessageInfo

func (m *DestroyEnvironmentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DestroyEnvironmentReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DestroyEnvironmentReply) Reset()         { *m = DestroyEnvironmentReply{} }
func (m *DestroyEnvironmentReply) String() string { return proto.CompactTextString(m) }
func (*DestroyEnvironmentReply) ProtoMessage()    {}
func (*DestroyEnvironmentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{22}
}
func (m *DestroyEnvironmentReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DestroyEnvironmentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DestroyEnvironmentReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DestroyEnvironmentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DestroyEnvironmentReply.Merge(m, src)
}
func (m *DestroyEnvironmentReply) XXX_Size() int {
	return m.Size()
}
func (m *DestroyEnvironmentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DestroyEnvironmentReply.DiscardUnknown(m)
}

var xxx_messageInfo_DestroyEnvironmentReply proto.InternalMessageInfo

////////////////////////////////////////
// Tasks
////////////////////////////////////////
type ShortTaskInfo struct {
	Name                 string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Locked               bool                `protobuf:"varint,2,opt,name=locked,proto3" json:"locked,omitempty"`
	TaskId               string              `protobuf:"bytes,3,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Status               string              `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	State                string              `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	ClassName            string              `protobuf:"bytes,6,opt,name=className,proto3" json:"className,omitempty"`
	DeploymentInfo       *TaskDeploymentInfo `protobuf:"bytes,7,opt,name=deploymentInfo,proto3" json:"deploymentInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ShortTaskInfo) Reset()         { *m = ShortTaskInfo{} }
func (m *ShortTaskInfo) String() string { return proto.CompactTextString(m) }
func (*ShortTaskInfo) ProtoMessage()    {}
func (*ShortTaskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{23}
}
func (m *ShortTaskInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShortTaskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShortTaskInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShortTaskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShortTaskInfo.Merge(m, src)
}
func (m *ShortTaskInfo) XXX_Size() int {
	return m.Size()
}
func (m *ShortTaskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ShortTaskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ShortTaskInfo proto.InternalMessageInfo

func (m *ShortTaskInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShortTaskInfo) GetLocked() bool {
	if m != nil {
		return m.Locked
	}
	return false
}

func (m *ShortTaskInfo) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *ShortTaskInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ShortTaskInfo) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *ShortTaskInfo) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *ShortTaskInfo) GetDeploymentInfo() *TaskDeploymentInfo {
	if m != nil {
		return m.DeploymentInfo
	}
	return nil
}

type TaskDeploymentInfo struct {
	Hostname             string   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	AgentId              string   `protobuf:"bytes,2,opt,name=agentId,proto3" json:"agentId,omitempty"`
	OfferId              string   `protobuf:"bytes,3,opt,name=offerId,proto3" json:"offerId,omitempty"`
	ExecutorId           string   `protobuf:"bytes,4,opt,name=executorId,proto3" json:"executorId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskDeploymentInfo) Reset()         { *m = TaskDeploymentInfo{} }
func (m *TaskDeploymentInfo) String() string { return proto.CompactTextString(m) }
func (*TaskDeploymentInfo) ProtoMessage()    {}
func (*TaskDeploymentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{24}
}
func (m *TaskDeploymentInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TaskDeploymentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TaskDeploymentInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TaskDeploymentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskDeploymentInfo.Merge(m, src)
}
func (m *TaskDeploymentInfo) XXX_Size() int {
	return m.Size()
}
func (m *TaskDeploymentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskDeploymentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TaskDeploymentInfo proto.InternalMessageInfo

func (m *TaskDeploymentInfo) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *TaskDeploymentInfo) GetAgentId() string {
	if m != nil {
		return m.AgentId
	}
	return ""
}

func (m *TaskDeploymentInfo) GetOfferId() string {
	if m != nil {
		return m.OfferId
	}
	return ""
}

func (m *TaskDeploymentInfo) GetExecutorId() string {
	if m != nil {
		return m.ExecutorId
	}
	return ""
}

type GetTasksRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTasksRequest) Reset()         { *m = GetTasksRequest{} }
func (m *GetTasksRequest) String() string { return proto.CompactTextString(m) }
func (*GetTasksRequest) ProtoMessage()    {}
func (*GetTasksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{25}
}
func (m *GetTasksRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTasksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetTasksRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetTasksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTasksRequest.Merge(m, src)
}
func (m *GetTasksRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetTasksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTasksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTasksRequest proto.InternalMessageInfo

type GetTasksReply struct {
	Tasks                []*ShortTaskInfo `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetTasksReply) Reset()         { *m = GetTasksReply{} }
func (m *GetTasksReply) String() string { return proto.CompactTextString(m) }
func (*GetTasksReply) ProtoMessage()    {}
func (*GetTasksReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{26}
}
func (m *GetTasksReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTasksReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetTasksReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetTasksReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTasksReply.Merge(m, src)
}
func (m *GetTasksReply) XXX_Size() int {
	return m.Size()
}
func (m *GetTasksReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTasksReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetTasksReply proto.InternalMessageInfo

func (m *GetTasksReply) GetTasks() []*ShortTaskInfo {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type GetTaskRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTaskRequest) Reset()         { *m = GetTaskRequest{} }
func (m *GetTaskRequest) String() string { return proto.CompactTextString(m) }
func (*GetTaskRequest) ProtoMessage()    {}
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{27}
}
func (m *GetTaskRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetTaskRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskRequest.Merge(m, src)
}
func (m *GetTaskRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskRequest proto.InternalMessageInfo

func (m *GetTaskRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type GetTaskReply struct {
	Task                 *TaskInfo `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetTaskReply) Reset()         { *m = GetTaskReply{} }
func (m *GetTaskReply) String() string { return proto.CompactTextString(m) }
func (*GetTaskReply) ProtoMessage()    {}
func (*GetTaskReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{28}
}
func (m *GetTaskReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTaskReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetTaskReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetTaskReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskReply.Merge(m, src)
}
func (m *GetTaskReply) XXX_Size() int {
	return m.Size()
}
func (m *GetTaskReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskReply proto.InternalMessageInfo

func (m *GetTaskReply) GetTask() *TaskInfo {
	if m != nil {
		return m.Task
	}
	return nil
}

type TaskClassInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ControlMode          string   `protobuf:"bytes,2,opt,name=controlMode,proto3" json:"controlMode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskClassInfo) Reset()         { *m = TaskClassInfo{} }
func (m *TaskClassInfo) String() string { return proto.CompactTextString(m) }
func (*TaskClassInfo) ProtoMessage()    {}
func (*TaskClassInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{29}
}
func (m *TaskClassInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TaskClassInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TaskClassInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TaskClassInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskClassInfo.Merge(m, src)
}
func (m *TaskClassInfo) XXX_Size() int {
	return m.Size()
}
func (m *TaskClassInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskClassInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TaskClassInfo proto.InternalMessageInfo

func (m *TaskClassInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TaskClassInfo) GetControlMode() string {
	if m != nil {
		return m.ControlMode
	}
	return ""
}

type CommandInfo struct {
	Env                  []string `protobuf:"bytes,1,rep,name=env,proto3" json:"env,omitempty"`
	Shell                bool     `protobuf:"varint,2,opt,name=shell,proto3" json:"shell,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Arguments            []string `protobuf:"bytes,4,rep,name=arguments,proto3" json:"arguments,omitempty"`
	User                 string   `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandInfo) Reset()         { *m = CommandInfo{} }
func (m *CommandInfo) String() string { return proto.CompactTextString(m) }
func (*CommandInfo) ProtoMessage()    {}
func (*CommandInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{30}
}
func (m *CommandInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CommandInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CommandInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CommandInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandInfo.Merge(m, src)
}
func (m *CommandInfo) XXX_Size() int {
	return m.Size()
}
func (m *CommandInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CommandInfo proto.InternalMessageInfo

func (m *CommandInfo) GetEnv() []string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *CommandInfo) GetShell() bool {
	if m != nil {
		return m.Shell
	}
	return false
}

func (m *CommandInfo) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *CommandInfo) GetArguments() []string {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (m *CommandInfo) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type ChannelInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Target               string   `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelInfo) Reset()         { *m = ChannelInfo{} }
func (m *ChannelInfo) String() string { return proto.CompactTextString(m) }
func (*ChannelInfo) ProtoMessage()    {}
func (*ChannelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{31}
}
func (m *ChannelInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ChannelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ChannelInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ChannelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelInfo.Merge(m, src)
}
func (m *ChannelInfo) XXX_Size() int {
	return m.Size()
}
func (m *ChannelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelInfo proto.InternalMessageInfo

func (m *ChannelInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ChannelInfo) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ChannelInfo) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type TaskInfo struct {
	ShortInfo            *ShortTaskInfo `protobuf:"bytes,1,opt,name=shortInfo,proto3" json:"shortInfo,omitempty"`
	ClassInfo            *TaskClassInfo `protobuf:"bytes,2,opt,name=classInfo,proto3" json:"classInfo,omitempty"`
	InboundChannels      []*ChannelInfo `protobuf:"bytes,3,rep,name=inboundChannels,proto3" json:"inboundChannels,omitempty"`
	OutboundChannels     []*ChannelInfo `protobuf:"bytes,4,rep,name=outboundChannels,proto3" json:"outboundChannels,omitempty"`
	CommandInfo          *CommandInfo   `protobuf:"bytes,5,opt,name=commandInfo,proto3" json:"commandInfo,omitempty"`
	TaskPath             string         `protobuf:"bytes,6,opt,name=taskPath,proto3" json:"taskPath,omitempty"`
	EnvId                string         `protobuf:"bytes,7,opt,name=envId,proto3" json:"envId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TaskInfo) Reset()         { *m = TaskInfo{} }
func (m *TaskInfo) String() string { return proto.CompactTextString(m) }
func (*TaskInfo) ProtoMessage()    {}
func (*TaskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{32}
}
func (m *TaskInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TaskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TaskInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TaskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskInfo.Merge(m, src)
}
func (m *TaskInfo) XXX_Size() int {
	return m.Size()
}
func (m *TaskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TaskInfo proto.InternalMessageInfo

func (m *TaskInfo) GetShortInfo() *ShortTaskInfo {
	if m != nil {
		return m.ShortInfo
	}
	return nil
}

func (m *TaskInfo) GetClassInfo() *TaskClassInfo {
	if m != nil {
		return m.ClassInfo
	}
	return nil
}

func (m *TaskInfo) GetInboundChannels() []*ChannelInfo {
	if m != nil {
		return m.InboundChannels
	}
	return nil
}

func (m *TaskInfo) GetOutboundChannels() []*ChannelInfo {
	if m != nil {
		return m.OutboundChannels
	}
	return nil
}

func (m *TaskInfo) GetCommandInfo() *CommandInfo {
	if m != nil {
		return m.CommandInfo
	}
	return nil
}

func (m *TaskInfo) GetTaskPath() string {
	if m != nil {
		return m.TaskPath
	}
	return ""
}

func (m *TaskInfo) GetEnvId() string {
	if m != nil {
		return m.EnvId
	}
	return ""
}

type CleanupTasksRequest struct {
	TaskIds              []string `protobuf:"bytes,1,rep,name=taskIds,proto3" json:"taskIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CleanupTasksRequest) Reset()         { *m = CleanupTasksRequest{} }
func (m *CleanupTasksRequest) String() string { return proto.CompactTextString(m) }
func (*CleanupTasksRequest) ProtoMessage()    {}
func (*CleanupTasksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{33}
}
func (m *CleanupTasksRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CleanupTasksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CleanupTasksRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CleanupTasksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanupTasksRequest.Merge(m, src)
}
func (m *CleanupTasksRequest) XXX_Size() int {
	return m.Size()
}
func (m *CleanupTasksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanupTasksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CleanupTasksRequest proto.InternalMessageInfo

func (m *CleanupTasksRequest) GetTaskIds() []string {
	if m != nil {
		return m.TaskIds
	}
	return nil
}

type CleanupTasksReply struct {
	KilledTasks          []*ShortTaskInfo `protobuf:"bytes,1,rep,name=killedTasks,proto3" json:"killedTasks,omitempty"`
	RunningTasks         []*ShortTaskInfo `protobuf:"bytes,2,rep,name=runningTasks,proto3" json:"runningTasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CleanupTasksReply) Reset()         { *m = CleanupTasksReply{} }
func (m *CleanupTasksReply) String() string { return proto.CompactTextString(m) }
func (*CleanupTasksReply) ProtoMessage()    {}
func (*CleanupTasksReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{34}
}
func (m *CleanupTasksReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CleanupTasksReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CleanupTasksReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CleanupTasksReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanupTasksReply.Merge(m, src)
}
func (m *CleanupTasksReply) XXX_Size() int {
	return m.Size()
}
func (m *CleanupTasksReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanupTasksReply.DiscardUnknown(m)
}

var xxx_messageInfo_CleanupTasksReply proto.InternalMessageInfo

func (m *CleanupTasksReply) GetKilledTasks() []*ShortTaskInfo {
	if m != nil {
		return m.KilledTasks
	}
	return nil
}

func (m *CleanupTasksReply) GetRunningTasks() []*ShortTaskInfo {
	if m != nil {
		return m.RunningTasks
	}
	return nil
}

////////////////////////////////////////
// Roles
////////////////////////////////////////
type GetRolesRequest struct {
	EnvId                string   `protobuf:"bytes,1,opt,name=envId,proto3" json:"envId,omitempty"`
	PathSpec             string   `protobuf:"bytes,2,opt,name=pathSpec,proto3" json:"pathSpec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRolesRequest) Reset()         { *m = GetRolesRequest{} }
func (m *GetRolesRequest) String() string { return proto.CompactTextString(m) }
func (*GetRolesRequest) ProtoMessage()    {}
func (*GetRolesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{35}
}
func (m *GetRolesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetRolesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetRolesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetRolesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRolesRequest.Merge(m, src)
}
func (m *GetRolesRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetRolesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRolesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRolesRequest proto.InternalMessageInfo

func (m *GetRolesRequest) GetEnvId() string {
	if m != nil {
		return m.EnvId
	}
	return ""
}

func (m *GetRolesRequest) GetPathSpec() string {
	if m != nil {
		return m.PathSpec
	}
	return ""
}

type RoleInfo struct {
	Name                 string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status               string      `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	State                string      `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	FullPath             string      `protobuf:"bytes,4,opt,name=fullPath,proto3" json:"fullPath,omitempty"`
	TaskIds              []string    `protobuf:"bytes,5,rep,name=taskIds,proto3" json:"taskIds,omitempty"`
	Roles                []*RoleInfo `protobuf:"bytes,6,rep,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RoleInfo) Reset()         { *m = RoleInfo{} }
func (m *RoleInfo) String() string { return proto.CompactTextString(m) }
func (*RoleInfo) ProtoMessage()    {}
func (*RoleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{36}
}
func (m *RoleInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoleInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RoleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleInfo.Merge(m, src)
}
func (m *RoleInfo) XXX_Size() int {
	return m.Size()
}
func (m *RoleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RoleInfo proto.InternalMessageInfo

func (m *RoleInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RoleInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *RoleInfo) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *RoleInfo) GetFullPath() string {
	if m != nil {
		return m.FullPath
	}
	return ""
}

func (m *RoleInfo) GetTaskIds() []string {
	if m != nil {
		return m.TaskIds
	}
	return nil
}

func (m *RoleInfo) GetRoles() []*RoleInfo {
	if m != nil {
		return m.Roles
	}
	return nil
}

type GetRolesReply struct {
	Roles                []*RoleInfo `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetRolesReply) Reset()         { *m = GetRolesReply{} }
func (m *GetRolesReply) String() string { return proto.CompactTextString(m) }
func (*GetRolesReply) ProtoMessage()    {}
func (*GetRolesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{37}
}
func (m *GetRolesReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetRolesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetRolesReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetRolesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRolesReply.Merge(m, src)
}
func (m *GetRolesReply) XXX_Size() int {
	return m.Size()
}
func (m *GetRolesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRolesReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetRolesReply proto.InternalMessageInfo

func (m *GetRolesReply) GetRoles() []*RoleInfo {
	if m != nil {
		return m.Roles
	}
	return nil
}

type GetWorkflowTemplatesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWorkflowTemplatesRequest) Reset()         { *m = GetWorkflowTemplatesRequest{} }
func (m *GetWorkflowTemplatesRequest) String() string { return proto.CompactTextString(m) }
func (*GetWorkflowTemplatesRequest) ProtoMessage()    {}
func (*GetWorkflowTemplatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{38}
}
func (m *GetWorkflowTemplatesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetWorkflowTemplatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetWorkflowTemplatesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetWorkflowTemplatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkflowTemplatesRequest.Merge(m, src)
}
func (m *GetWorkflowTemplatesRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetWorkflowTemplatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkflowTemplatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkflowTemplatesRequest proto.InternalMessageInfo

type GetWorkflowTemplatesReply struct {
	WorkflowTemplates    []string `protobuf:"bytes,1,rep,name=workflowTemplates,proto3" json:"workflowTemplates,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWorkflowTemplatesReply) Reset()         { *m = GetWorkflowTemplatesReply{} }
func (m *GetWorkflowTemplatesReply) String() string { return proto.CompactTextString(m) }
func (*GetWorkflowTemplatesReply) ProtoMessage()    {}
func (*GetWorkflowTemplatesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2aa6aa9a1f02efa9, []int{39}
}
func (m *GetWorkflowTemplatesReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetWorkflowTemplatesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetWorkflowTemplatesReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetWorkflowTemplatesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkflowTemplatesReply.Merge(m, src)
}
func (m *GetWorkflowTemplatesReply) XXX_Size() int {
	return m.Size()
}
func (m *GetWorkflowTemplatesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkflowTemplatesReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkflowTemplatesReply proto.InternalMessageInfo

func (m *GetWorkflowTemplatesReply) GetWorkflowTemplates() []string {
	if m != nil {
		return m.WorkflowTemplates
	}
	return nil
}

func init() {
	proto.RegisterEnum("o2control.StatusUpdate_Level", StatusUpdate_Level_name, StatusUpdate_Level_value)
	proto.RegisterEnum("o2control.ControlEnvironmentRequest_Optype", ControlEnvironmentRequest_Optype_name, ControlEnvironmentRequest_Optype_value)
	proto.RegisterEnum("o2control.EnvironmentOperation_Optype", EnvironmentOperation_Optype_name, EnvironmentOperation_Optype_value)
	proto.RegisterType((*Event_MesosHeartbeat)(nil), "o2control.Event_MesosHeartbeat")
	proto.RegisterType((*StatusRequest)(nil), "o2control.StatusRequest")
	proto.RegisterType((*StatusReply)(nil), "o2control.StatusReply")
	proto.RegisterType((*StatusUpdate)(nil), "o2control.StatusUpdate")
	proto.RegisterType((*GetFrameworkInfoRequest)(nil), "o2control.GetFrameworkInfoRequest")
	proto.RegisterType((*Version)(nil), "o2control.Version")
	proto.RegisterType((*GetFrameworkInfoReply)(nil), "o2control.GetFrameworkInfoReply")
	proto.RegisterType((*TeardownRequest)(nil), "o2control.TeardownRequest")
	proto.RegisterType((*TeardownReply)(nil), "o2control.TeardownReply")
	proto.RegisterType((*GetEnvironmentsRequest)(nil), "o2control.GetEnvironmentsRequest")
	proto.RegisterType((*GetEnvironmentsReply)(nil), "o2control.GetEnvironmentsReply")
	proto.RegisterType((*EnvironmentInfo)(nil), "o2control.EnvironmentInfo")
	proto.RegisterType((*NewEnvironmentRequest)(nil), "o2control.NewEnvironmentRequest")
	proto.RegisterType((*NewEnvironmentReply)(nil), "o2control.NewEnvironmentReply")
	proto.RegisterType((*GetEnvironmentRequest)(nil), "o2control.GetEnvironmentRequest")
	proto.RegisterType((*GetEnvironmentReply)(nil), "o2control.GetEnvironmentReply")
	proto.RegisterType((*ControlEnvironmentRequest)(nil), "o2control.ControlEnvironmentRequest")
	proto.RegisterType((*ControlEnvironmentReply)(nil), "o2control.ControlEnvironmentReply")
	proto.RegisterType((*ModifyEnvironmentRequest)(nil), "o2control.ModifyEnvironmentRequest")
	proto.RegisterType((*EnvironmentOperation)(nil), "o2control.EnvironmentOperation")
	proto.RegisterType((*ModifyEnvironmentReply)(nil), "o2control.ModifyEnvironmentReply")
	proto.RegisterType((*DestroyEnvironmentRequest)(nil), "o2control.DestroyEnvironmentRequest")
	proto.RegisterType((*DestroyEnvironmentReply)(nil), "o2control.DestroyEnvironmentReply")
	proto.RegisterType((*ShortTaskInfo)(nil), "o2control.ShortTaskInfo")
	proto.RegisterType((*TaskDeploymentInfo)(nil), "o2control.TaskDeploymentInfo")
	proto.RegisterType((*GetTasksRequest)(nil), "o2control.GetTasksRequest")
	proto.RegisterType((*GetTasksReply)(nil), "o2control.GetTasksReply")
	proto.RegisterType((*GetTaskRequest)(nil), "o2control.GetTaskRequest")
	proto.RegisterType((*GetTaskReply)(nil), "o2control.GetTaskReply")
	proto.RegisterType((*TaskClassInfo)(nil), "o2control.TaskClassInfo")
	proto.RegisterType((*CommandInfo)(nil), "o2control.CommandInfo")
	proto.RegisterType((*ChannelInfo)(nil), "o2control.ChannelInfo")
	proto.RegisterType((*TaskInfo)(nil), "o2control.TaskInfo")
	proto.RegisterType((*CleanupTasksRequest)(nil), "o2control.CleanupTasksRequest")
	proto.RegisterType((*CleanupTasksReply)(nil), "o2control.CleanupTasksReply")
	proto.RegisterType((*GetRolesRequest)(nil), "o2control.GetRolesRequest")
	proto.RegisterType((*RoleInfo)(nil), "o2control.RoleInfo")
	proto.RegisterType((*GetRolesReply)(nil), "o2control.GetRolesReply")
	proto.RegisterType((*GetWorkflowTemplatesRequest)(nil), "o2control.GetWorkflowTemplatesRequest")
	proto.RegisterType((*GetWorkflowTemplatesReply)(nil), "o2control.GetWorkflowTemplatesReply")
}

func init() { proto.RegisterFile("protos/o2control.proto", fileDescriptor_2aa6aa9a1f02efa9) }

var fileDescriptor_2aa6aa9a1f02efa9 = []byte{
	// 1861 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x58, 0x4f, 0x6f, 0x23, 0x49,
	0x15, 0x4f, 0x3b, 0x76, 0x62, 0x3f, 0x27, 0x8e, 0x53, 0x99, 0xcd, 0x74, 0xcc, 0x6e, 0x26, 0x5b,
	0xac, 0x66, 0x67, 0x77, 0x47, 0x1e, 0xc8, 0x22, 0x58, 0x8d, 0x16, 0x86, 0xc4, 0xf1, 0x64, 0x2d,
	0x36, 0xf6, 0xa8, 0xe3, 0x99, 0x11, 0x2b, 0xa1, 0xa1, 0xd3, 0x2e, 0xc7, 0x26, 0xed, 0x2e, 0xd3,
	0x5d, 0x9d, 0x4c, 0x0e, 0xdc, 0xb8, 0x21, 0xc4, 0x81, 0x03, 0x5c, 0x11, 0x67, 0xbe, 0x07, 0x17,
	0x04, 0x7c, 0x03, 0x34, 0x48, 0x9c, 0xf8, 0x10, 0xa8, 0xfe, 0x74, 0x77, 0xf5, 0x1f, 0x27, 0x91,
	0xb8, 0xf9, 0xbd, 0xf7, 0x7b, 0xaf, 0xeb, 0xfd, 0xa9, 0xf7, 0x5e, 0x19, 0xb6, 0xe7, 0x3e, 0x65,
	0x34, 0x78, 0x42, 0xf7, 0x1d, 0xea, 0x31, 0x9f, 0xba, 0x6d, 0xc1, 0x40, 0xb5, 0x98, 0x81, 0xb7,
	0xe1, 0x5e, 0xf7, 0x92, 0x78, 0xec, 0xcd, 0x09, 0x09, 0x68, 0xf0, 0x15, 0xb1, 0x7d, 0x76, 0x46,
	0x6c, 0x86, 0x37, 0x60, 0xfd, 0x94, 0xd9, 0x2c, 0x0c, 0x2c, 0xf2, 0xcb, 0x90, 0x04, 0x0c, 0x9f,
	0x41, 0x3d, 0x62, 0xcc, 0xdd, 0x6b, 0x74, 0x0f, 0x2a, 0x01, 0xb3, 0x19, 0x31, 0x8d, 0x3d, 0xe3,
	0x51, 0xcd, 0x92, 0x04, 0xfa, 0x21, 0xac, 0x07, 0x02, 0xf4, 0x72, 0x3e, 0xb2, 0x19, 0x09, 0xcc,
	0xd2, 0xde, 0xf2, 0xa3, 0xfa, 0xfe, 0xfd, 0x76, 0x72, 0x82, 0x53, 0x4d, 0x6e, 0xa5, 0xd1, 0xf8,
	0x6f, 0x06, 0xac, 0xe9, 0x72, 0xf4, 0x39, 0x54, 0x5c, 0x72, 0x49, 0x5c, 0xf1, 0x95, 0xc6, 0xfe,
	0x07, 0x0b, 0xec, 0xb4, 0xbf, 0xe6, 0x20, 0x4b, 0x62, 0x51, 0x0f, 0x1a, 0xb3, 0x94, 0x33, 0x66,
	0x69, 0xcf, 0x78, 0x54, 0xdf, 0x7f, 0xa0, 0x69, 0x17, 0xf9, 0xfc, 0xd5, 0x92, 0x95, 0x51, 0xc4,
	0xdf, 0x83, 0x8a, 0x30, 0x8d, 0x6a, 0x50, 0x39, 0xea, 0x1e, 0xbe, 0x3c, 0x6e, 0x2e, 0xa1, 0x2a,
	0x94, 0x7b, 0xfd, 0xe7, 0x83, 0xa6, 0x81, 0xea, 0xb0, 0xfa, 0xfa, 0xc0, 0xea, 0xf7, 0xfa, 0xc7,
	0xcd, 0x12, 0x47, 0x74, 0x2d, 0x6b, 0x60, 0x35, 0x97, 0x0f, 0x57, 0xa1, 0x22, 0xec, 0xe3, 0x1d,
	0xb8, 0x7f, 0x4c, 0xd8, 0x73, 0xdf, 0x9e, 0x91, 0x2b, 0xea, 0x5f, 0xf4, 0xbc, 0x31, 0x8d, 0xc2,
	0xf9, 0x67, 0x03, 0x56, 0x5f, 0x11, 0x3f, 0x98, 0x52, 0x8f, 0xc7, 0x72, 0x66, 0xff, 0x82, 0xfa,
	0xc2, 0xcb, 0x8a, 0x25, 0x09, 0xc1, 0x9d, 0x7a, 0xd4, 0x17, 0xa7, 0xe7, 0x5c, 0x4e, 0x70, 0xee,
	0xdc, 0x66, 0xce, 0xc4, 0x5c, 0x96, 0x5c, 0x41, 0x70, 0xee, 0x59, 0x38, 0x75, 0x47, 0x66, 0x59,
	0x66, 0x43, 0x10, 0x68, 0x0f, 0xea, 0x73, 0x9f, 0x8e, 0x42, 0x87, 0xf5, 0xed, 0x19, 0x31, 0x2b,
	0x42, 0xa6, 0xb3, 0xd0, 0x2e, 0xc0, 0xa5, 0x3c, 0xc4, 0x29, 0xf3, 0xcd, 0x15, 0x01, 0xd0, 0x38,
	0xf8, 0x77, 0x25, 0x78, 0x2f, 0xef, 0x01, 0xcf, 0xff, 0x1e, 0xd4, 0xc7, 0x31, 0x77, 0xa4, 0xaa,
	0x40, 0x67, 0xa1, 0xc7, 0xb0, 0x49, 0xbc, 0xcb, 0xa9, 0x4f, 0xbd, 0x19, 0xf1, 0x58, 0xd0, 0xa1,
	0xa1, 0xc7, 0x94, 0x2f, 0x79, 0x01, 0x3f, 0x09, 0xb3, 0x83, 0x0b, 0x05, 0x93, 0xce, 0x69, 0x9c,
	0xa4, 0xde, 0xca, 0x7a, 0xbd, 0xed, 0x02, 0x4c, 0x68, 0x10, 0x19, 0xaf, 0x48, 0xad, 0x84, 0x83,
	0x30, 0xac, 0x4d, 0xbd, 0x80, 0xd9, 0x9e, 0x43, 0x44, 0x08, 0xa4, 0x87, 0x29, 0x1e, 0x7a, 0x0c,
	0xab, 0xca, 0x63, 0x73, 0x55, 0xd4, 0x09, 0xd2, 0xea, 0x44, 0xa5, 0xc8, 0x8a, 0x20, 0xf8, 0x13,
	0xd8, 0x18, 0x12, 0xdb, 0x1f, 0xd1, 0x2b, 0x4f, 0xa5, 0x12, 0x6d, 0xc3, 0x8a, 0x4f, 0xec, 0x80,
	0x7a, 0x2a, 0x0a, 0x8a, 0xe2, 0x57, 0x28, 0x81, 0xce, 0xdd, 0x6b, 0x6c, 0xc2, 0xf6, 0x31, 0x61,
	0x5d, 0xcd, 0xf7, 0xa8, 0x1a, 0xde, 0xc2, 0xbd, 0x9c, 0xe4, 0x6e, 0x51, 0xfe, 0x11, 0xac, 0xe9,
	0xc1, 0x54, 0x17, 0xae, 0xa5, 0x97, 0x7a, 0x22, 0x16, 0xe9, 0x4b, 0xe1, 0xf1, 0x3f, 0x0d, 0xd8,
	0xc8, 0x20, 0x50, 0x03, 0x4a, 0xd3, 0xe8, 0x63, 0xa5, 0xa9, 0xa8, 0x23, 0xc7, 0x27, 0x36, 0x23,
	0xa3, 0xd7, 0x13, 0xe2, 0x89, 0x1c, 0xd6, 0x2c, 0x9d, 0x95, 0x64, 0x67, 0x59, 0xcf, 0x4e, 0x1b,
	0x2a, 0x22, 0x83, 0x66, 0x59, 0x1c, 0xca, 0xd4, 0x6f, 0xef, 0x84, 0xfa, 0x6c, 0x68, 0x07, 0xb2,
	0xa2, 0x24, 0x0c, 0xb5, 0xa0, 0xea, 0x53, 0xca, 0x2c, 0xea, 0x46, 0xc5, 0x1a, 0xd3, 0xe8, 0x53,
	0x68, 0x3a, 0xa1, 0xef, 0x13, 0x8f, 0x59, 0xa1, 0xd7, 0x0f, 0x67, 0x67, 0x44, 0xd6, 0xeb, 0xba,
	0x95, 0xe3, 0xe3, 0x0e, 0xbc, 0xd7, 0x27, 0x57, 0x9a, 0x57, 0x51, 0xa6, 0x3e, 0x85, 0x26, 0x0f,
	0xdb, 0xd8, 0xa5, 0x57, 0x43, 0x32, 0x9b, 0xbb, 0x49, 0xff, 0xca, 0xf1, 0xf1, 0x29, 0x6c, 0x65,
	0x8d, 0xf0, 0x8c, 0x7c, 0x09, 0x75, 0x2d, 0x7e, 0x42, 0xfb, 0xe6, 0x70, 0xeb, 0x70, 0xfc, 0xb1,
	0xb8, 0x4e, 0x05, 0x27, 0xcb, 0x84, 0x1c, 0xff, 0xda, 0x80, 0xad, 0x2c, 0xf2, 0xff, 0xfe, 0x3c,
	0x7a, 0x02, 0xd5, 0xc8, 0x4f, 0xd5, 0x13, 0xb7, 0x34, 0x55, 0x1e, 0x67, 0xa1, 0x13, 0x83, 0xf0,
	0xdf, 0x0d, 0xd8, 0xe9, 0x48, 0xf1, 0xed, 0x87, 0x46, 0xcf, 0xa0, 0xcc, 0xae, 0xe7, 0x44, 0x98,
	0x6e, 0xec, 0x7f, 0xa6, 0x99, 0x5e, 0x68, 0xa3, 0x3d, 0x98, 0x73, 0x15, 0x4b, 0x28, 0x62, 0x1b,
	0x56, 0x24, 0xcd, 0x9b, 0x6c, 0x7f, 0x30, 0x78, 0xd1, 0x5c, 0x42, 0x08, 0x1a, 0xa7, 0xc3, 0x03,
	0x6b, 0xf8, 0xe6, 0xa0, 0x33, 0xec, 0xbd, 0xea, 0x0d, 0x7f, 0xda, 0x34, 0xd0, 0x26, 0xac, 0x9f,
	0x0e, 0x07, 0x2f, 0x12, 0x56, 0x09, 0xad, 0x43, 0xad, 0x33, 0xe8, 0x3f, 0xef, 0x1d, 0xbf, 0xb4,
	0xba, 0xcd, 0x65, 0xde, 0x8d, 0xad, 0xee, 0x69, 0x77, 0xd8, 0x2c, 0xa3, 0x35, 0xa8, 0x1e, 0x0f,
	0xde, 0xc8, 0xde, 0x5c, 0xc1, 0x17, 0x70, 0xbf, 0xe8, 0x30, 0x3c, 0xb6, 0x59, 0x77, 0xe2, 0xa2,
	0x2e, 0xe9, 0x45, 0x5d, 0x54, 0x88, 0xcb, 0x0b, 0x0a, 0xf1, 0xf7, 0x06, 0x98, 0x27, 0x74, 0x34,
	0x1d, 0x5f, 0xdf, 0x29, 0x7a, 0x40, 0xe7, 0xc4, 0xb7, 0xd9, 0x94, 0x7a, 0xd1, 0x3d, 0x7e, 0x50,
	0x9c, 0xd9, 0x41, 0x84, 0xb3, 0x34, 0x15, 0xf4, 0x10, 0x1a, 0x3e, 0x71, 0xa8, 0x37, 0x9e, 0x9e,
	0x87, 0x3e, 0x39, 0x70, 0x5d, 0x71, 0xae, 0xaa, 0x95, 0xe1, 0xe2, 0x3f, 0x19, 0x70, 0xaf, 0xc8,
	0x18, 0x7a, 0xaa, 0xf2, 0x27, 0x87, 0xed, 0xc3, 0x5b, 0xbe, 0x9d, 0x4a, 0x9d, 0xbc, 0xbb, 0xae,
	0xec, 0xb2, 0xa5, 0xe8, 0xee, 0x4a, 0x1a, 0x7f, 0xb7, 0x20, 0xad, 0x1b, 0x50, 0xb7, 0xba, 0x27,
	0x83, 0x57, 0xdd, 0x37, 0xd6, 0xe0, 0x6b, 0x9e, 0xb1, 0x35, 0xa8, 0x1e, 0x1c, 0x1d, 0x49, 0xaa,
	0x8c, 0x7f, 0x63, 0xc0, 0x76, 0x41, 0xe4, 0x78, 0x9a, 0x7e, 0x02, 0xcd, 0xb1, 0x3d, 0x75, 0xc9,
	0x68, 0x90, 0x44, 0xcb, 0xb8, 0x5b, 0xb4, 0x72, 0x8a, 0x2a, 0x09, 0xa5, 0x7c, 0xce, 0xf5, 0x46,
	0x86, 0x3f, 0x83, 0x9d, 0x23, 0x12, 0x30, 0x9f, 0xde, 0x21, 0x8f, 0x7c, 0xe8, 0x17, 0x81, 0xf9,
	0x00, 0xf8, 0x8f, 0x01, 0xeb, 0xa9, 0xce, 0x87, 0x10, 0x94, 0x3d, 0x1e, 0x32, 0xa9, 0x2e, 0x7e,
	0xf3, 0x79, 0xe2, 0x52, 0xe7, 0x82, 0xc8, 0x73, 0x55, 0x2d, 0x45, 0x71, 0x3e, 0xef, 0x93, 0xbd,
	0x91, 0x3a, 0x9c, 0xa2, 0x38, 0x5f, 0xae, 0x51, 0x6a, 0x36, 0x2a, 0x2a, 0xf1, 0xa5, 0xa2, 0xd7,
	0xef, 0xfb, 0x50, 0x73, 0x5c, 0x3b, 0x08, 0xb4, 0x79, 0x98, 0x30, 0x50, 0x17, 0x1a, 0x23, 0x32,
	0x77, 0xe9, 0x75, 0xd4, 0x40, 0xd4, 0x4c, 0xd4, 0x37, 0x2f, 0x7e, 0xf8, 0xa3, 0x14, 0xc8, 0xca,
	0x28, 0xf1, 0xf6, 0x85, 0xf2, 0x30, 0x5e, 0x24, 0x7c, 0x38, 0x6b, 0x1e, 0xc7, 0x34, 0x32, 0x61,
	0xd5, 0x3e, 0xe7, 0xc0, 0x28, 0x1d, 0x11, 0xc9, 0x25, 0x74, 0x3c, 0x26, 0x7e, 0xec, 0x78, 0x44,
	0xf2, 0xf1, 0x4f, 0xde, 0x12, 0x27, 0x64, 0x94, 0x0b, 0xa5, 0xf7, 0x1a, 0x07, 0x6f, 0xc2, 0xc6,
	0x31, 0x11, 0xc1, 0x8e, 0x27, 0xed, 0x33, 0x58, 0x4f, 0x58, 0xbc, 0x9c, 0xe2, 0x21, 0x65, 0xdc,
	0x69, 0x48, 0xe1, 0x47, 0xd0, 0x50, 0x06, 0xb4, 0xf9, 0xaf, 0xf2, 0x62, 0xe8, 0x79, 0xc1, 0x3f,
	0x80, 0xb5, 0x18, 0xc9, 0xbf, 0xf4, 0x31, 0x94, 0xb9, 0x44, 0x35, 0xed, 0xad, 0x4c, 0x44, 0xc5,
	0x37, 0x04, 0x00, 0x77, 0x61, 0x9d, 0x73, 0x3a, 0x3c, 0x2b, 0x0b, 0xab, 0x84, 0x0f, 0x65, 0xa9,
	0x7e, 0x42, 0x47, 0x24, 0x1e, 0xca, 0x09, 0x0b, 0xff, 0x0a, 0xea, 0x1d, 0x3a, 0x9b, 0xd9, 0xde,
	0x48, 0x18, 0x69, 0xc2, 0x32, 0xf1, 0x2e, 0x85, 0x9b, 0x35, 0x8b, 0xff, 0x14, 0x05, 0x32, 0x21,
	0xae, 0xab, 0xea, 0x4c, 0x12, 0x9c, 0x7b, 0x69, 0xbb, 0x61, 0x7c, 0x05, 0x04, 0xc1, 0xcb, 0xc6,
	0xf6, 0xcf, 0x43, 0xb9, 0x64, 0x94, 0x85, 0x8d, 0x84, 0xc1, 0x0f, 0x18, 0x06, 0xc4, 0x57, 0x95,
	0x26, 0x7e, 0xe3, 0x13, 0xa8, 0x77, 0x26, 0xb6, 0xe7, 0x11, 0x77, 0xa1, 0x0f, 0x48, 0x1b, 0x18,
	0x35, 0xd5, 0x48, 0x44, 0x34, 0xfd, 0x73, 0xc2, 0x92, 0x2a, 0xe7, 0x14, 0xfe, 0x6f, 0x09, 0xaa,
	0xf1, 0xb5, 0xf9, 0x3e, 0xd4, 0x02, 0x9e, 0x1c, 0x51, 0xa1, 0x32, 0x9e, 0x8b, 0x13, 0x97, 0x40,
	0xb9, 0x9e, 0x13, 0x45, 0x55, 0x4d, 0x40, 0x33, 0x93, 0x87, 0x38, 0xea, 0x56, 0x02, 0x45, 0x3f,
	0x86, 0x8d, 0xa9, 0x77, 0x46, 0x43, 0x6f, 0xa4, 0x5c, 0x0a, 0xcc, 0x65, 0x51, 0x2e, 0xdb, 0xfa,
	0x90, 0x4b, 0xbc, 0xb5, 0xb2, 0x70, 0x74, 0x08, 0x4d, 0x1a, 0xb2, 0xb4, 0x89, 0xf2, 0x8d, 0x26,
	0x72, 0x78, 0xf4, 0x05, 0x4f, 0x79, 0x9c, 0x50, 0x11, 0xec, 0x8c, 0x7a, 0x22, 0xb5, 0x74, 0x28,
	0xbf, 0x78, 0xbc, 0xb2, 0x5e, 0xd8, 0x6c, 0xa2, 0xee, 0x7c, 0x4c, 0xf3, 0x7c, 0x13, 0xef, 0xb2,
	0x37, 0x12, 0x37, 0xbd, 0x66, 0x49, 0x02, 0x3f, 0x81, 0xad, 0x8e, 0x4b, 0x6c, 0x2f, 0x9c, 0xeb,
	0xd7, 0x87, 0xdf, 0x45, 0x59, 0xdd, 0x81, 0x2a, 0xa4, 0x88, 0xc4, 0xbf, 0x35, 0x60, 0x33, 0xad,
	0xc1, 0x6b, 0xfe, 0x29, 0xd4, 0x2f, 0xa6, 0xae, 0x4b, 0x46, 0xc3, 0x3b, 0xdd, 0x31, 0x1d, 0x8c,
	0xbe, 0x84, 0x35, 0x3f, 0xf4, 0xbc, 0xa9, 0x77, 0x2e, 0x95, 0x4b, 0xb7, 0x28, 0xa7, 0xd0, 0xb8,
	0x23, 0xee, 0x3e, 0xdf, 0x69, 0xe2, 0xc3, 0xc7, 0x9e, 0x1a, 0x9a, 0xa7, 0x3c, 0x36, 0x73, 0x9b,
	0x4d, 0x4e, 0xe7, 0xc4, 0x89, 0x26, 0x57, 0x44, 0xe3, 0xbf, 0x18, 0x50, 0x8d, 0xd6, 0xa2, 0x45,
	0xbd, 0x5a, 0xf5, 0xde, 0x52, 0x71, 0xef, 0x4d, 0x2d, 0xc4, 0x2d, 0xa8, 0x8e, 0x43, 0xd7, 0x15,
	0x69, 0x90, 0xdd, 0x2a, 0xa6, 0xf5, 0xc8, 0x56, 0x52, 0x91, 0x45, 0x9f, 0x40, 0x85, 0x8f, 0xd2,
	0xc0, 0x5c, 0x11, 0x01, 0x28, 0x5c, 0xd9, 0x24, 0x02, 0x3f, 0x15, 0xdd, 0x4d, 0x39, 0xcd, 0xe3,
	0x1f, 0xeb, 0x1a, 0xb7, 0xea, 0x7e, 0x00, 0xdf, 0x3a, 0x26, 0xec, 0x75, 0x66, 0x0f, 0x8e, 0x1b,
	0x67, 0x0f, 0x76, 0x8a, 0xc5, 0xfc, 0x33, 0x8f, 0x61, 0x33, 0xbb, 0x40, 0x47, 0x05, 0x92, 0x17,
	0xec, 0xff, 0xa1, 0x06, 0xab, 0x6a, 0x09, 0x43, 0x1d, 0xa8, 0x0f, 0x7d, 0xdb, 0xb9, 0x90, 0xcf,
	0x79, 0x64, 0xe6, 0x5e, 0xf8, 0xea, 0xfb, 0xad, 0xed, 0x02, 0x09, 0x9f, 0xa9, 0x4b, 0xdf, 0x31,
	0xd0, 0x37, 0xd0, 0xcc, 0xbe, 0x52, 0x11, 0xd6, 0xf0, 0x0b, 0x1e, 0xe1, 0xad, 0xbd, 0x1b, 0x31,
	0xc2, 0x3a, 0x3a, 0x84, 0x6a, 0xf4, 0x8a, 0x43, 0xfa, 0xa2, 0x9d, 0x79, 0x05, 0xb6, 0xcc, 0x42,
	0x99, 0xb4, 0xf1, 0x5a, 0xd4, 0xa2, 0xfe, 0xbc, 0x43, 0x1f, 0xa6, 0x3f, 0x5d, 0xf0, 0x28, 0x6c,
	0x3d, 0xb8, 0x09, 0x22, 0x0d, 0x0f, 0xa1, 0x91, 0x7e, 0xa4, 0x20, 0xdd, 0xa5, 0xc2, 0x47, 0x50,
	0x6b, 0xf7, 0x06, 0x44, 0x6c, 0x35, 0xfd, 0x3d, 0xb4, 0xb7, 0xf0, 0x28, 0x45, 0x56, 0x0b, 0x1e,
	0x2e, 0x78, 0x09, 0xfd, 0x1c, 0x50, 0x7e, 0xf3, 0x46, 0x1f, 0xdd, 0xe5, 0x95, 0xd0, 0xc2, 0xb7,
	0xa0, 0xe4, 0x17, 0x7e, 0x06, 0x9b, 0xb9, 0x9d, 0x11, 0x7d, 0x5b, 0x53, 0x5d, 0xb4, 0x8b, 0xb7,
	0x3e, 0xbc, 0x19, 0x14, 0x3b, 0x90, 0x5f, 0xec, 0x52, 0x0e, 0x2c, 0x5c, 0x12, 0x53, 0x0e, 0x2c,
	0xda, 0x0e, 0x45, 0xad, 0x45, 0xcb, 0x49, 0xaa, 0xd6, 0x32, 0x4b, 0x4c, 0xaa, 0xd6, 0x52, 0xdb,
	0x0c, 0x5e, 0x42, 0xcf, 0x60, 0x55, 0xb1, 0xd0, 0x4e, 0x1e, 0x16, 0x59, 0xb8, 0x5f, 0x24, 0x92,
	0x06, 0xfa, 0xb0, 0xa6, 0xf7, 0x71, 0xa4, 0x67, 0xb6, 0x60, 0x24, 0xb4, 0xde, 0x5f, 0x28, 0xd7,
	0x9d, 0x12, 0x3d, 0x29, 0xeb, 0x94, 0xde, 0x9d, 0xb3, 0x4e, 0x25, 0x4d, 0x0c, 0x2f, 0xa1, 0xb1,
	0xf8, 0x7f, 0x24, 0xd7, 0x7c, 0xd0, 0xc3, 0xb4, 0xce, 0xa2, 0xe6, 0xd5, 0xfa, 0xe8, 0x56, 0x9c,
	0xf8, 0xce, 0xe1, 0x17, 0x7f, 0x7d, 0xb7, 0x6b, 0xfc, 0xe3, 0xdd, 0xae, 0xf1, 0xaf, 0x77, 0xbb,
	0xc6, 0x1f, 0xff, 0xbd, 0xbb, 0x04, 0xd8, 0x99, 0xb4, 0x1d, 0xe2, 0x7b, 0x6d, 0xdb, 0x9d, 0x3a,
	0xa4, 0x4d, 0xf7, 0xdb, 0x91, 0x1d, 0x7f, 0xee, 0x04, 0xc4, 0xbf, 0x24, 0xfe, 0x37, 0xa5, 0xf9,
	0xd9, 0xd9, 0x8a, 0xf8, 0x67, 0xf5, 0xf3, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xfc, 0x84, 0xa4,
	0xd7, 0x73, 0x15, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ControlClient is the client API for Control service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControlClient interface {
	TrackStatus(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (Control_TrackStatusClient, error)
	GetFrameworkInfo(ctx context.Context, in *GetFrameworkInfoRequest, opts ...grpc.CallOption) (*GetFrameworkInfoReply, error)
	Teardown(ctx context.Context, in *TeardownRequest, opts ...grpc.CallOption) (*TeardownReply, error)
	GetEnvironments(ctx context.Context, in *GetEnvironmentsRequest, opts ...grpc.CallOption) (*GetEnvironmentsReply, error)
	NewEnvironment(ctx context.Context, in *NewEnvironmentRequest, opts ...grpc.CallOption) (*NewEnvironmentReply, error)
	GetEnvironment(ctx context.Context, in *GetEnvironmentRequest, opts ...grpc.CallOption) (*GetEnvironmentReply, error)
	ControlEnvironment(ctx context.Context, in *ControlEnvironmentRequest, opts ...grpc.CallOption) (*ControlEnvironmentReply, error)
	ModifyEnvironment(ctx context.Context, in *ModifyEnvironmentRequest, opts ...grpc.CallOption) (*ModifyEnvironmentReply, error)
	DestroyEnvironment(ctx context.Context, in *DestroyEnvironmentRequest, opts ...grpc.CallOption) (*DestroyEnvironmentReply, error)
	GetTasks(ctx context.Context, in *GetTasksRequest, opts ...grpc.CallOption) (*GetTasksReply, error)
	GetTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*GetTaskReply, error)
	CleanupTasks(ctx context.Context, in *CleanupTasksRequest, opts ...grpc.CallOption) (*CleanupTasksReply, error)
	GetRoles(ctx context.Context, in *GetRolesRequest, opts ...grpc.CallOption) (*GetRolesReply, error)
	GetWorkflowTemplates(ctx context.Context, in *GetWorkflowTemplatesRequest, opts ...grpc.CallOption) (*GetWorkflowTemplatesReply, error)
}

type controlClient struct {
	cc *grpc.ClientConn
}

func NewControlClient(cc *grpc.ClientConn) ControlClient {
	return &controlClient{cc}
}

func (c *controlClient) TrackStatus(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (Control_TrackStatusClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Control_serviceDesc.Streams[0], "/o2control.Control/TrackStatus", opts...)
	if err != nil {
		return nil, err
	}
	x := &controlTrackStatusClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Control_TrackStatusClient interface {
	Recv() (*StatusReply, error)
	grpc.ClientStream
}

type controlTrackStatusClient struct {
	grpc.ClientStream
}

func (x *controlTrackStatusClient) Recv() (*StatusReply, error) {
	m := new(StatusReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *controlClient) GetFrameworkInfo(ctx context.Context, in *GetFrameworkInfoRequest, opts ...grpc.CallOption) (*GetFrameworkInfoReply, error) {
	out := new(GetFrameworkInfoReply)
	err := c.cc.Invoke(ctx, "/o2control.Control/GetFrameworkInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) Teardown(ctx context.Context, in *TeardownRequest, opts ...grpc.CallOption) (*TeardownReply, error) {
	out := new(TeardownReply)
	err := c.cc.Invoke(ctx, "/o2control.Control/Teardown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) GetEnvironments(ctx context.Context, in *GetEnvironmentsRequest, opts ...grpc.CallOption) (*GetEnvironmentsReply, error) {
	out := new(GetEnvironmentsReply)
	err := c.cc.Invoke(ctx, "/o2control.Control/GetEnvironments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) NewEnvironment(ctx context.Context, in *NewEnvironmentRequest, opts ...grpc.CallOption) (*NewEnvironmentReply, error) {
	out := new(NewEnvironmentReply)
	err := c.cc.Invoke(ctx, "/o2control.Control/NewEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) GetEnvironment(ctx context.Context, in *GetEnvironmentRequest, opts ...grpc.CallOption) (*GetEnvironmentReply, error) {
	out := new(GetEnvironmentReply)
	err := c.cc.Invoke(ctx, "/o2control.Control/GetEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) ControlEnvironment(ctx context.Context, in *ControlEnvironmentRequest, opts ...grpc.CallOption) (*ControlEnvironmentReply, error) {
	out := new(ControlEnvironmentReply)
	err := c.cc.Invoke(ctx, "/o2control.Control/ControlEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) ModifyEnvironment(ctx context.Context, in *ModifyEnvironmentRequest, opts ...grpc.CallOption) (*ModifyEnvironmentReply, error) {
	out := new(ModifyEnvironmentReply)
	err := c.cc.Invoke(ctx, "/o2control.Control/ModifyEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) DestroyEnvironment(ctx context.Context, in *DestroyEnvironmentRequest, opts ...grpc.CallOption) (*DestroyEnvironmentReply, error) {
	out := new(DestroyEnvironmentReply)
	err := c.cc.Invoke(ctx, "/o2control.Control/DestroyEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) GetTasks(ctx context.Context, in *GetTasksRequest, opts ...grpc.CallOption) (*GetTasksReply, error) {
	out := new(GetTasksReply)
	err := c.cc.Invoke(ctx, "/o2control.Control/GetTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) GetTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*GetTaskReply, error) {
	out := new(GetTaskReply)
	err := c.cc.Invoke(ctx, "/o2control.Control/GetTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) CleanupTasks(ctx context.Context, in *CleanupTasksRequest, opts ...grpc.CallOption) (*CleanupTasksReply, error) {
	out := new(CleanupTasksReply)
	err := c.cc.Invoke(ctx, "/o2control.Control/CleanupTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) GetRoles(ctx context.Context, in *GetRolesRequest, opts ...grpc.CallOption) (*GetRolesReply, error) {
	out := new(GetRolesReply)
	err := c.cc.Invoke(ctx, "/o2control.Control/GetRoles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) GetWorkflowTemplates(ctx context.Context, in *GetWorkflowTemplatesRequest, opts ...grpc.CallOption) (*GetWorkflowTemplatesReply, error) {
	out := new(GetWorkflowTemplatesReply)
	err := c.cc.Invoke(ctx, "/o2control.Control/GetWorkflowTemplates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ControlServer is the server API for Control service.
type ControlServer interface {
	TrackStatus(*StatusRequest, Control_TrackStatusServer) error
	GetFrameworkInfo(context.Context, *GetFrameworkInfoRequest) (*GetFrameworkInfoReply, error)
	Teardown(context.Context, *TeardownRequest) (*TeardownReply, error)
	GetEnvironments(context.Context, *GetEnvironmentsRequest) (*GetEnvironmentsReply, error)
	NewEnvironment(context.Context, *NewEnvironmentRequest) (*NewEnvironmentReply, error)
	GetEnvironment(context.Context, *GetEnvironmentRequest) (*GetEnvironmentReply, error)
	ControlEnvironment(context.Context, *ControlEnvironmentRequest) (*ControlEnvironmentReply, error)
	ModifyEnvironment(context.Context, *ModifyEnvironmentRequest) (*ModifyEnvironmentReply, error)
	DestroyEnvironment(context.Context, *DestroyEnvironmentRequest) (*DestroyEnvironmentReply, error)
	GetTasks(context.Context, *GetTasksRequest) (*GetTasksReply, error)
	GetTask(context.Context, *GetTaskRequest) (*GetTaskReply, error)
	CleanupTasks(context.Context, *CleanupTasksRequest) (*CleanupTasksReply, error)
	GetRoles(context.Context, *GetRolesRequest) (*GetRolesReply, error)
	GetWorkflowTemplates(context.Context, *GetWorkflowTemplatesRequest) (*GetWorkflowTemplatesReply, error)
}

func RegisterControlServer(s *grpc.Server, srv ControlServer) {
	s.RegisterService(&_Control_serviceDesc, srv)
}

func _Control_TrackStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StatusRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControlServer).TrackStatus(m, &controlTrackStatusServer{stream})
}

type Control_TrackStatusServer interface {
	Send(*StatusReply) error
	grpc.ServerStream
}

type controlTrackStatusServer struct {
	grpc.ServerStream
}

func (x *controlTrackStatusServer) Send(m *StatusReply) error {
	return x.ServerStream.SendMsg(m)
}

func _Control_GetFrameworkInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFrameworkInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).GetFrameworkInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/o2control.Control/GetFrameworkInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).GetFrameworkInfo(ctx, req.(*GetFrameworkInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_Teardown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeardownRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).Teardown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/o2control.Control/Teardown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).Teardown(ctx, req.(*TeardownRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_GetEnvironments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEnvironmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).GetEnvironments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/o2control.Control/GetEnvironments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).GetEnvironments(ctx, req.(*GetEnvironmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_NewEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).NewEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/o2control.Control/NewEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).NewEnvironment(ctx, req.(*NewEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_GetEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).GetEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/o2control.Control/GetEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).GetEnvironment(ctx, req.(*GetEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_ControlEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ControlEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).ControlEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/o2control.Control/ControlEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).ControlEnvironment(ctx, req.(*ControlEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_ModifyEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).ModifyEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/o2control.Control/ModifyEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).ModifyEnvironment(ctx, req.(*ModifyEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_DestroyEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).DestroyEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/o2control.Control/DestroyEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).DestroyEnvironment(ctx, req.(*DestroyEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_GetTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).GetTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/o2control.Control/GetTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).GetTasks(ctx, req.(*GetTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_GetTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).GetTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/o2control.Control/GetTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).GetTask(ctx, req.(*GetTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_CleanupTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CleanupTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).CleanupTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/o2control.Control/CleanupTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).CleanupTasks(ctx, req.(*CleanupTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_GetRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRolesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).GetRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/o2control.Control/GetRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).GetRoles(ctx, req.(*GetRolesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_GetWorkflowTemplates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkflowTemplatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).GetWorkflowTemplates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/o2control.Control/GetWorkflowTemplates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).GetWorkflowTemplates(ctx, req.(*GetWorkflowTemplatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Control_serviceDesc = grpc.ServiceDesc{
	ServiceName: "o2control.Control",
	HandlerType: (*ControlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFrameworkInfo",
			Handler:    _Control_GetFrameworkInfo_Handler,
		},
		{
			MethodName: "Teardown",
			Handler:    _Control_Teardown_Handler,
		},
		{
			MethodName: "GetEnvironments",
			Handler:    _Control_GetEnvironments_Handler,
		},
		{
			MethodName: "NewEnvironment",
			Handler:    _Control_NewEnvironment_Handler,
		},
		{
			MethodName: "GetEnvironment",
			Handler:    _Control_GetEnvironment_Handler,
		},
		{
			MethodName: "ControlEnvironment",
			Handler:    _Control_ControlEnvironment_Handler,
		},
		{
			MethodName: "ModifyEnvironment",
			Handler:    _Control_ModifyEnvironment_Handler,
		},
		{
			MethodName: "DestroyEnvironment",
			Handler:    _Control_DestroyEnvironment_Handler,
		},
		{
			MethodName: "GetTasks",
			Handler:    _Control_GetTasks_Handler,
		},
		{
			MethodName: "GetTask",
			Handler:    _Control_GetTask_Handler,
		},
		{
			MethodName: "CleanupTasks",
			Handler:    _Control_CleanupTasks_Handler,
		},
		{
			MethodName: "GetRoles",
			Handler:    _Control_GetRoles_Handler,
		},
		{
			MethodName: "GetWorkflowTemplates",
			Handler:    _Control_GetWorkflowTemplates_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "TrackStatus",
			Handler:       _Control_TrackStatus_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protos/o2control.proto",
}

func (m *Event_MesosHeartbeat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Event_MesosHeartbeat) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *StatusRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatusRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *StatusReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatusReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.State) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.State)))
		i += copy(dAtA[i:], m.State)
	}
	if len(m.StatusUpdates) > 0 {
		for _, msg := range m.StatusUpdates {
			dAtA[i] = 0x12
			i++
			i = encodeVarintO2Control(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *StatusUpdate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatusUpdate) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Level != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.Level))
	}
	if m.Event != nil {
		nn1, err1 := m.Event.MarshalTo(dAtA[i:])
		if err1 != nil {
			return 0, err1
		}
		i += nn1
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *StatusUpdate_MesosHeartbeat) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.MesosHeartbeat != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.MesosHeartbeat.Size()))
		n2, err2 := m.MesosHeartbeat.MarshalTo(dAtA[i:])
		if err2 != nil {
			return 0, err2
		}
		i += n2
	}
	return i, nil
}
func (m *GetFrameworkInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetFrameworkInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Version) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Version) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Major != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.Major))
	}
	if m.Minor != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.Minor))
	}
	if m.Patch != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.Patch))
	}
	if len(m.Build) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.Build)))
		i += copy(dAtA[i:], m.Build)
	}
	if len(m.ProductName) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.ProductName)))
		i += copy(dAtA[i:], m.ProductName)
	}
	if len(m.VersionStr) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.VersionStr)))
		i += copy(dAtA[i:], m.VersionStr)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetFrameworkInfoReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetFrameworkInfoReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.FrameworkId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.FrameworkId)))
		i += copy(dAtA[i:], m.FrameworkId)
	}
	if m.EnvironmentsCount != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.EnvironmentsCount))
	}
	if m.TasksCount != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.TasksCount))
	}
	if len(m.State) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.State)))
		i += copy(dAtA[i:], m.State)
	}
	if m.HostsCount != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.HostsCount))
	}
	if len(m.InstanceName) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.InstanceName)))
		i += copy(dAtA[i:], m.InstanceName)
	}
	if m.Version != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.Version.Size()))
		n3, err3 := m.Version.MarshalTo(dAtA[i:])
		if err3 != nil {
			return 0, err3
		}
		i += n3
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TeardownRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TeardownRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Reason) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.Reason)))
		i += copy(dAtA[i:], m.Reason)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TeardownReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TeardownReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetEnvironmentsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetEnvironmentsRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetEnvironmentsReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetEnvironmentsReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.FrameworkId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.FrameworkId)))
		i += copy(dAtA[i:], m.FrameworkId)
	}
	if len(m.Environments) > 0 {
		for _, msg := range m.Environments {
			dAtA[i] = 0x12
			i++
			i = encodeVarintO2Control(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *EnvironmentInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EnvironmentInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.CreatedWhen) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.CreatedWhen)))
		i += copy(dAtA[i:], m.CreatedWhen)
	}
	if len(m.State) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.State)))
		i += copy(dAtA[i:], m.State)
	}
	if len(m.Tasks) > 0 {
		for _, msg := range m.Tasks {
			dAtA[i] = 0x22
			i++
			i = encodeVarintO2Control(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.RootRole) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.RootRole)))
		i += copy(dAtA[i:], m.RootRole)
	}
	if m.CurrentRunNumber != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.CurrentRunNumber))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *NewEnvironmentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NewEnvironmentRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.WorkflowTemplate) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.WorkflowTemplate)))
		i += copy(dAtA[i:], m.WorkflowTemplate)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *NewEnvironmentReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NewEnvironmentReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Environment != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.Environment.Size()))
		n4, err4 := m.Environment.MarshalTo(dAtA[i:])
		if err4 != nil {
			return 0, err4
		}
		i += n4
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetEnvironmentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetEnvironmentRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetEnvironmentReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetEnvironmentReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Environment != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.Environment.Size()))
		n5, err5 := m.Environment.MarshalTo(dAtA[i:])
		if err5 != nil {
			return 0, err5
		}
		i += n5
	}
	if m.Workflow != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.Workflow.Size()))
		n6, err6 := m.Workflow.MarshalTo(dAtA[i:])
		if err6 != nil {
			return 0, err6
		}
		i += n6
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ControlEnvironmentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControlEnvironmentRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if m.Type != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ControlEnvironmentReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControlEnvironmentReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.State) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.State)))
		i += copy(dAtA[i:], m.State)
	}
	if m.CurrentRunNumber != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.CurrentRunNumber))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ModifyEnvironmentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModifyEnvironmentRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.Operations) > 0 {
		for _, msg := range m.Operations {
			dAtA[i] = 0x12
			i++
			i = encodeVarintO2Control(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.ReconfigureAll {
		dAtA[i] = 0x18
		i++
		if m.ReconfigureAll {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *EnvironmentOperation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EnvironmentOperation) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Type != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.Type))
	}
	if len(m.RoleName) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.RoleName)))
		i += copy(dAtA[i:], m.RoleName)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ModifyEnvironmentReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModifyEnvironmentReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.FailedOperations) > 0 {
		for _, msg := range m.FailedOperations {
			dAtA[i] = 0xa
			i++
			i = encodeVarintO2Control(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Id) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.State) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.State)))
		i += copy(dAtA[i:], m.State)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DestroyEnvironmentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DestroyEnvironmentRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DestroyEnvironmentReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DestroyEnvironmentReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShortTaskInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShortTaskInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.Locked {
		dAtA[i] = 0x10
		i++
		if m.Locked {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.TaskId) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.TaskId)))
		i += copy(dAtA[i:], m.TaskId)
	}
	if len(m.Status) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.Status)))
		i += copy(dAtA[i:], m.Status)
	}
	if len(m.State) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.State)))
		i += copy(dAtA[i:], m.State)
	}
	if len(m.ClassName) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.ClassName)))
		i += copy(dAtA[i:], m.ClassName)
	}
	if m.DeploymentInfo != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.DeploymentInfo.Size()))
		n7, err7 := m.DeploymentInfo.MarshalTo(dAtA[i:])
		if err7 != nil {
			return 0, err7
		}
		i += n7
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TaskDeploymentInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TaskDeploymentInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Hostname) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.Hostname)))
		i += copy(dAtA[i:], m.Hostname)
	}
	if len(m.AgentId) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.AgentId)))
		i += copy(dAtA[i:], m.AgentId)
	}
	if len(m.OfferId) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.OfferId)))
		i += copy(dAtA[i:], m.OfferId)
	}
	if len(m.ExecutorId) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.ExecutorId)))
		i += copy(dAtA[i:], m.ExecutorId)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetTasksRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTasksRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetTasksReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTasksReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Tasks) > 0 {
		for _, msg := range m.Tasks {
			dAtA[i] = 0xa
			i++
			i = encodeVarintO2Control(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetTaskRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTaskRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.TaskId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.TaskId)))
		i += copy(dAtA[i:], m.TaskId)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetTaskReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTaskReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Task != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.Task.Size()))
		n8, err8 := m.Task.MarshalTo(dAtA[i:])
		if err8 != nil {
			return 0, err8
		}
		i += n8
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TaskClassInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TaskClassInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.ControlMode) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.ControlMode)))
		i += copy(dAtA[i:], m.ControlMode)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CommandInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CommandInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Env) > 0 {
		for _, s := range m.Env {
			dAtA[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.Shell {
		dAtA[i] = 0x10
		i++
		if m.Shell {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Value) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.Value)))
		i += copy(dAtA[i:], m.Value)
	}
	if len(m.Arguments) > 0 {
		for _, s := range m.Arguments {
			dAtA[i] = 0x22
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.User) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.User)))
		i += copy(dAtA[i:], m.User)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ChannelInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ChannelInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Type) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.Type)))
		i += copy(dAtA[i:], m.Type)
	}
	if len(m.Target) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.Target)))
		i += copy(dAtA[i:], m.Target)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TaskInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TaskInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ShortInfo != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.ShortInfo.Size()))
		n9, err9 := m.ShortInfo.MarshalTo(dAtA[i:])
		if err9 != nil {
			return 0, err9
		}
		i += n9
	}
	if m.ClassInfo != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.ClassInfo.Size()))
		n10, err10 := m.ClassInfo.MarshalTo(dAtA[i:])
		if err10 != nil {
			return 0, err10
		}
		i += n10
	}
	if len(m.InboundChannels) > 0 {
		for _, msg := range m.InboundChannels {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintO2Control(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.OutboundChannels) > 0 {
		for _, msg := range m.OutboundChannels {
			dAtA[i] = 0x22
			i++
			i = encodeVarintO2Control(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.CommandInfo != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(m.CommandInfo.Size()))
		n11, err11 := m.CommandInfo.MarshalTo(dAtA[i:])
		if err11 != nil {
			return 0, err11
		}
		i += n11
	}
	if len(m.TaskPath) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.TaskPath)))
		i += copy(dAtA[i:], m.TaskPath)
	}
	if len(m.EnvId) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.EnvId)))
		i += copy(dAtA[i:], m.EnvId)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CleanupTasksRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CleanupTasksRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.TaskIds) > 0 {
		for _, s := range m.TaskIds {
			dAtA[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CleanupTasksReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CleanupTasksReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.KilledTasks) > 0 {
		for _, msg := range m.KilledTasks {
			dAtA[i] = 0xa
			i++
			i = encodeVarintO2Control(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.RunningTasks) > 0 {
		for _, msg := range m.RunningTasks {
			dAtA[i] = 0x12
			i++
			i = encodeVarintO2Control(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetRolesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetRolesRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.EnvId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.EnvId)))
		i += copy(dAtA[i:], m.EnvId)
	}
	if len(m.PathSpec) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.PathSpec)))
		i += copy(dAtA[i:], m.PathSpec)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoleInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoleInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Status) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.Status)))
		i += copy(dAtA[i:], m.Status)
	}
	if len(m.State) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.State)))
		i += copy(dAtA[i:], m.State)
	}
	if len(m.FullPath) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintO2Control(dAtA, i, uint64(len(m.FullPath)))
		i += copy(dAtA[i:], m.FullPath)
	}
	if len(m.TaskIds) > 0 {
		for _, s := range m.TaskIds {
			dAtA[i] = 0x2a
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.Roles) > 0 {
		for _, msg := range m.Roles {
			dAtA[i] = 0x32
			i++
			i = encodeVarintO2Control(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetRolesReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetRolesReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Roles) > 0 {
		for _, msg := range m.Roles {
			dAtA[i] = 0xa
			i++
			i = encodeVarintO2Control(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetWorkflowTemplatesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetWorkflowTemplatesRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetWorkflowTemplatesReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetWorkflowTemplatesReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.WorkflowTemplates) > 0 {
		for _, s := range m.WorkflowTemplates {
			dAtA[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintO2Control(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Event_MesosHeartbeat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StatusRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StatusReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if len(m.StatusUpdates) > 0 {
		for _, e := range m.StatusUpdates {
			l = e.Size()
			n += 1 + l + sovO2Control(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StatusUpdate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Level != 0 {
		n += 1 + sovO2Control(uint64(m.Level))
	}
	if m.Event != nil {
		n += m.Event.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StatusUpdate_MesosHeartbeat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MesosHeartbeat != nil {
		l = m.MesosHeartbeat.Size()
		n += 1 + l + sovO2Control(uint64(l))
	}
	return n
}
func (m *GetFrameworkInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Version) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Major != 0 {
		n += 1 + sovO2Control(uint64(m.Major))
	}
	if m.Minor != 0 {
		n += 1 + sovO2Control(uint64(m.Minor))
	}
	if m.Patch != 0 {
		n += 1 + sovO2Control(uint64(m.Patch))
	}
	l = len(m.Build)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.ProductName)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.VersionStr)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetFrameworkInfoReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FrameworkId)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.EnvironmentsCount != 0 {
		n += 1 + sovO2Control(uint64(m.EnvironmentsCount))
	}
	if m.TasksCount != 0 {
		n += 1 + sovO2Control(uint64(m.TasksCount))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.HostsCount != 0 {
		n += 1 + sovO2Control(uint64(m.HostsCount))
	}
	l = len(m.InstanceName)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.Version != nil {
		l = m.Version.Size()
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TeardownRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TeardownReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetEnvironmentsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetEnvironmentsReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FrameworkId)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if len(m.Environments) > 0 {
		for _, e := range m.Environments {
			l = e.Size()
			n += 1 + l + sovO2Control(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EnvironmentInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.CreatedWhen)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if len(m.Tasks) > 0 {
		for _, e := range m.Tasks {
			l = e.Size()
			n += 1 + l + sovO2Control(uint64(l))
		}
	}
	l = len(m.RootRole)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.CurrentRunNumber != 0 {
		n += 1 + sovO2Control(uint64(m.CurrentRunNumber))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NewEnvironmentRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.WorkflowTemplate)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NewEnvironmentReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Environment != nil {
		l = m.Environment.Size()
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetEnvironmentRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetEnvironmentReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Environment != nil {
		l = m.Environment.Size()
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.Workflow != nil {
		l = m.Workflow.Size()
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ControlEnvironmentRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovO2Control(uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ControlEnvironmentReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.CurrentRunNumber != 0 {
		n += 1 + sovO2Control(uint64(m.CurrentRunNumber))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModifyEnvironmentRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if len(m.Operations) > 0 {
		for _, e := range m.Operations {
			l = e.Size()
			n += 1 + l + sovO2Control(uint64(l))
		}
	}
	if m.ReconfigureAll {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EnvironmentOperation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovO2Control(uint64(m.Type))
	}
	l = len(m.RoleName)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModifyEnvironmentReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.FailedOperations) > 0 {
		for _, e := range m.FailedOperations {
			l = e.Size()
			n += 1 + l + sovO2Control(uint64(l))
		}
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DestroyEnvironmentRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DestroyEnvironmentReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShortTaskInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.Locked {
		n += 2
	}
	l = len(m.TaskId)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.DeploymentInfo != nil {
		l = m.DeploymentInfo.Size()
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TaskDeploymentInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Hostname)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.AgentId)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.OfferId)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.ExecutorId)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTasksRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTasksReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Tasks) > 0 {
		for _, e := range m.Tasks {
			l = e.Size()
			n += 1 + l + sovO2Control(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTaskRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TaskId)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTaskReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Task != nil {
		l = m.Task.Size()
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TaskClassInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.ControlMode)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CommandInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Env) > 0 {
		for _, s := range m.Env {
			l = len(s)
			n += 1 + l + sovO2Control(uint64(l))
		}
	}
	if m.Shell {
		n += 2
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if len(m.Arguments) > 0 {
		for _, s := range m.Arguments {
			l = len(s)
			n += 1 + l + sovO2Control(uint64(l))
		}
	}
	l = len(m.User)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ChannelInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.Target)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TaskInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ShortInfo != nil {
		l = m.ShortInfo.Size()
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.ClassInfo != nil {
		l = m.ClassInfo.Size()
		n += 1 + l + sovO2Control(uint64(l))
	}
	if len(m.InboundChannels) > 0 {
		for _, e := range m.InboundChannels {
			l = e.Size()
			n += 1 + l + sovO2Control(uint64(l))
		}
	}
	if len(m.OutboundChannels) > 0 {
		for _, e := range m.OutboundChannels {
			l = e.Size()
			n += 1 + l + sovO2Control(uint64(l))
		}
	}
	if m.CommandInfo != nil {
		l = m.CommandInfo.Size()
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.TaskPath)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.EnvId)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CleanupTasksRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.TaskIds) > 0 {
		for _, s := range m.TaskIds {
			l = len(s)
			n += 1 + l + sovO2Control(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CleanupTasksReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.KilledTasks) > 0 {
		for _, e := range m.KilledTasks {
			l = e.Size()
			n += 1 + l + sovO2Control(uint64(l))
		}
	}
	if len(m.RunningTasks) > 0 {
		for _, e := range m.RunningTasks {
			l = e.Size()
			n += 1 + l + sovO2Control(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetRolesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.EnvId)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.PathSpec)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoleInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	l = len(m.FullPath)
	if l > 0 {
		n += 1 + l + sovO2Control(uint64(l))
	}
	if len(m.TaskIds) > 0 {
		for _, s := range m.TaskIds {
			l = len(s)
			n += 1 + l + sovO2Control(uint64(l))
		}
	}
	if len(m.Roles) > 0 {
		for _, e := range m.Roles {
			l = e.Size()
			n += 1 + l + sovO2Control(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetRolesReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Roles) > 0 {
		for _, e := range m.Roles {
			l = e.Size()
			n += 1 + l + sovO2Control(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetWorkflowTemplatesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetWorkflowTemplatesReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.WorkflowTemplates) > 0 {
		for _, s := range m.WorkflowTemplates {
			l = len(s)
			n += 1 + l + sovO2Control(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovO2Control(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozO2Control(x uint64) (n int) {
	return sovO2Control(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Event_MesosHeartbeat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Event_MesosHeartbeat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Event_MesosHeartbeat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatusRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatusRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatusRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatusReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatusReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatusReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusUpdates", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StatusUpdates = append(m.StatusUpdates, &StatusUpdate{})
			if err := m.StatusUpdates[len(m.StatusUpdates)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatusUpdate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatusUpdate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatusUpdate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			m.Level = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Level |= StatusUpdate_Level(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MesosHeartbeat", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Event_MesosHeartbeat{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Event = &StatusUpdate_MesosHeartbeat{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetFrameworkInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetFrameworkInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetFrameworkInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Version) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Version: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Version: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Major", wireType)
			}
			m.Major = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Major |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Minor", wireType)
			}
			m.Minor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Minor |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Patch", wireType)
			}
			m.Patch = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Patch |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Build", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Build = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProductName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProductName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VersionStr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VersionStr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetFrameworkInfoReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetFrameworkInfoReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetFrameworkInfoReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FrameworkId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FrameworkId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnvironmentsCount", wireType)
			}
			m.EnvironmentsCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EnvironmentsCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TasksCount", wireType)
			}
			m.TasksCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TasksCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HostsCount", wireType)
			}
			m.HostsCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HostsCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InstanceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Version == nil {
				m.Version = &Version{}
			}
			if err := m.Version.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TeardownRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TeardownRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TeardownRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TeardownReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TeardownReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TeardownReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetEnvironmentsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetEnvironmentsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetEnvironmentsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetEnvironmentsReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetEnvironmentsReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetEnvironmentsReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FrameworkId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FrameworkId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Environments", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Environments = append(m.Environments, &EnvironmentInfo{})
			if err := m.Environments[len(m.Environments)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EnvironmentInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EnvironmentInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EnvironmentInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedWhen", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedWhen = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tasks", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tasks = append(m.Tasks, &ShortTaskInfo{})
			if err := m.Tasks[len(m.Tasks)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RootRole", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RootRole = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentRunNumber", wireType)
			}
			m.CurrentRunNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CurrentRunNumber |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NewEnvironmentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NewEnvironmentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NewEnvironmentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WorkflowTemplate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WorkflowTemplate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NewEnvironmentReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NewEnvironmentReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NewEnvironmentReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Environment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Environment == nil {
				m.Environment = &EnvironmentInfo{}
			}
			if err := m.Environment.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetEnvironmentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetEnvironmentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetEnvironmentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetEnvironmentReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetEnvironmentReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetEnvironmentReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Environment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Environment == nil {
				m.Environment = &EnvironmentInfo{}
			}
			if err := m.Environment.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Workflow", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Workflow == nil {
				m.Workflow = &RoleInfo{}
			}
			if err := m.Workflow.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControlEnvironmentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ControlEnvironmentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ControlEnvironmentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= ControlEnvironmentRequest_Optype(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControlEnvironmentReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ControlEnvironmentReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ControlEnvironmentReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentRunNumber", wireType)
			}
			m.CurrentRunNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CurrentRunNumber |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModifyEnvironmentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModifyEnvironmentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModifyEnvironmentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Operations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Operations = append(m.Operations, &EnvironmentOperation{})
			if err := m.Operations[len(m.Operations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReconfigureAll", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReconfigureAll = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EnvironmentOperation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EnvironmentOperation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EnvironmentOperation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= EnvironmentOperation_Optype(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModifyEnvironmentReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModifyEnvironmentReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModifyEnvironmentReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FailedOperations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FailedOperations = append(m.FailedOperations, &EnvironmentOperation{})
			if err := m.FailedOperations[len(m.FailedOperations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DestroyEnvironmentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DestroyEnvironmentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DestroyEnvironmentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DestroyEnvironmentReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DestroyEnvironmentReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DestroyEnvironmentReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShortTaskInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShortTaskInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShortTaskInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Locked", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Locked = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TaskId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeploymentInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeploymentInfo == nil {
				m.DeploymentInfo = &TaskDeploymentInfo{}
			}
			if err := m.DeploymentInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TaskDeploymentInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TaskDeploymentInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TaskDeploymentInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hostname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hostname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OfferId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OfferId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExecutorId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExecutorId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTasksRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTasksRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTasksRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTasksReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTasksReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTasksReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tasks", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tasks = append(m.Tasks, &ShortTaskInfo{})
			if err := m.Tasks[len(m.Tasks)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTaskRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTaskRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTaskRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TaskId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTaskReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTaskReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTaskReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Task", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Task == nil {
				m.Task = &TaskInfo{}
			}
			if err := m.Task.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TaskClassInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TaskClassInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TaskClassInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ControlMode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ControlMode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CommandInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CommandInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CommandInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Env", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Env = append(m.Env, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Shell", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Shell = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Arguments", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Arguments = append(m.Arguments, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.User = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ChannelInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ChannelInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ChannelInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Target", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Target = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TaskInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TaskInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TaskInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShortInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ShortInfo == nil {
				m.ShortInfo = &ShortTaskInfo{}
			}
			if err := m.ShortInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ClassInfo == nil {
				m.ClassInfo = &TaskClassInfo{}
			}
			if err := m.ClassInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InboundChannels", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InboundChannels = append(m.InboundChannels, &ChannelInfo{})
			if err := m.InboundChannels[len(m.InboundChannels)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutboundChannels", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OutboundChannels = append(m.OutboundChannels, &ChannelInfo{})
			if err := m.OutboundChannels[len(m.OutboundChannels)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommandInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CommandInfo == nil {
				m.CommandInfo = &CommandInfo{}
			}
			if err := m.CommandInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TaskPath = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnvId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EnvId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CleanupTasksRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CleanupTasksRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CleanupTasksRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TaskIds = append(m.TaskIds, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CleanupTasksReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CleanupTasksReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CleanupTasksReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KilledTasks", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.KilledTasks = append(m.KilledTasks, &ShortTaskInfo{})
			if err := m.KilledTasks[len(m.KilledTasks)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RunningTasks", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RunningTasks = append(m.RunningTasks, &ShortTaskInfo{})
			if err := m.RunningTasks[len(m.RunningTasks)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetRolesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetRolesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetRolesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnvId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EnvId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PathSpec", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PathSpec = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoleInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RoleInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RoleInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FullPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FullPath = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TaskIds = append(m.TaskIds, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Roles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Roles = append(m.Roles, &RoleInfo{})
			if err := m.Roles[len(m.Roles)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetRolesReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetRolesReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetRolesReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Roles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Roles = append(m.Roles, &RoleInfo{})
			if err := m.Roles[len(m.Roles)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetWorkflowTemplatesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetWorkflowTemplatesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetWorkflowTemplatesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetWorkflowTemplatesReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetWorkflowTemplatesReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetWorkflowTemplatesReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WorkflowTemplates", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthO2Control
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthO2Control
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WorkflowTemplates = append(m.WorkflowTemplates, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipO2Control(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthO2Control
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipO2Control(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowO2Control
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowO2Control
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthO2Control
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthO2Control
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowO2Control
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipO2Control(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthO2Control
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthO2Control = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowO2Control   = fmt.Errorf("proto: integer overflow")
)
