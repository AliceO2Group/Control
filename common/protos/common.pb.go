//
// === This file is part of ALICE O² ===
//
// Copyright 2024 CERN and copyright holders of ALICE O².
// Author: Teo Mrnjavac <teo.mrnjavac@cern.ch>
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// In applying this license CERN does not waive the privileges and
// immunities granted to it by virtue of its status as an
// Intergovernmental Organization or submit itself to any jurisdiction.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.29.3
// source: protos/common.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Beam modes as defined and sent by LHC DIP client plus:
// * virtual type LOST_BEAMS - that is generated when beam 1 and beam 2 energy values are not equal anymore as per LHC DIP track: dip/acc/LHC/RunControl/SafeBeam
// * virtual type UNKNOWN - that is generated when there is no beam in the machine or value not added by the BKP-LHC Client
// Source of Beam Modes: https://lhc-commissioning.web.cern.ch/systems/data-exchange/doc/LHC-OP-ES-0005-10-00.pdf
type BeamMode int32

const (
	BeamMode_UNKNOWN                BeamMode = 0 // virtual type
	BeamMode_SETUP                  BeamMode = 1
	BeamMode_ABORT                  BeamMode = 2
	BeamMode_INJECTION_PROBE_BEAM   BeamMode = 3
	BeamMode_INJECTION_SETUP_BEAM   BeamMode = 4
	BeamMode_INJECTION_PHYSICS_BEAM BeamMode = 5
	BeamMode_PREPARE_RAMP           BeamMode = 6
	BeamMode_RAMP                   BeamMode = 7
	BeamMode_FLAT_TOP               BeamMode = 8
	BeamMode_SQUEEZE                BeamMode = 9
	BeamMode_ADJUST                 BeamMode = 10
	BeamMode_STABLE_BEAMS           BeamMode = 11
	BeamMode_LOST_BEAMS             BeamMode = 12 // virtual type
	BeamMode_UNSTABLE_BEAMS         BeamMode = 13
	BeamMode_BEAM_DUMP_WARNING      BeamMode = 14
	BeamMode_BEAM_DUMP              BeamMode = 15
	BeamMode_RAMP_DOWN              BeamMode = 16
	BeamMode_CYCLING                BeamMode = 17
	BeamMode_RECOVERY               BeamMode = 18
	BeamMode_INJECT_AND_DUMP        BeamMode = 19
	BeamMode_CIRCULATE_AND_DUMP     BeamMode = 20
	BeamMode_NO_BEAM                BeamMode = 21
)

// Enum value maps for BeamMode.
var (
	BeamMode_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "SETUP",
		2:  "ABORT",
		3:  "INJECTION_PROBE_BEAM",
		4:  "INJECTION_SETUP_BEAM",
		5:  "INJECTION_PHYSICS_BEAM",
		6:  "PREPARE_RAMP",
		7:  "RAMP",
		8:  "FLAT_TOP",
		9:  "SQUEEZE",
		10: "ADJUST",
		11: "STABLE_BEAMS",
		12: "LOST_BEAMS",
		13: "UNSTABLE_BEAMS",
		14: "BEAM_DUMP_WARNING",
		15: "BEAM_DUMP",
		16: "RAMP_DOWN",
		17: "CYCLING",
		18: "RECOVERY",
		19: "INJECT_AND_DUMP",
		20: "CIRCULATE_AND_DUMP",
		21: "NO_BEAM",
	}
	BeamMode_value = map[string]int32{
		"UNKNOWN":                0,
		"SETUP":                  1,
		"ABORT":                  2,
		"INJECTION_PROBE_BEAM":   3,
		"INJECTION_SETUP_BEAM":   4,
		"INJECTION_PHYSICS_BEAM": 5,
		"PREPARE_RAMP":           6,
		"RAMP":                   7,
		"FLAT_TOP":               8,
		"SQUEEZE":                9,
		"ADJUST":                 10,
		"STABLE_BEAMS":           11,
		"LOST_BEAMS":             12,
		"UNSTABLE_BEAMS":         13,
		"BEAM_DUMP_WARNING":      14,
		"BEAM_DUMP":              15,
		"RAMP_DOWN":              16,
		"CYCLING":                17,
		"RECOVERY":               18,
		"INJECT_AND_DUMP":        19,
		"CIRCULATE_AND_DUMP":     20,
		"NO_BEAM":                21,
	}
)

func (x BeamMode) Enum() *BeamMode {
	p := new(BeamMode)
	*p = x
	return p
}

func (x BeamMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BeamMode) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_common_proto_enumTypes[0].Descriptor()
}

func (BeamMode) Type() protoreflect.EnumType {
	return &file_protos_common_proto_enumTypes[0]
}

func (x BeamMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BeamMode.Descriptor instead.
func (BeamMode) EnumDescriptor() ([]byte, []int) {
	return file_protos_common_proto_rawDescGZIP(), []int{0}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique CERN identifier of this user.
	ExternalId *int32 `protobuf:"varint,1,opt,name=externalId,proto3,oneof" json:"externalId,omitempty"`
	// The unique identifier of this entity.
	Id *int32 `protobuf:"varint,2,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// Name of the user.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_protos_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_protos_common_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetExternalId() int32 {
	if x != nil && x.ExternalId != nil {
		return *x.ExternalId
	}
	return 0
}

func (x *User) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type WorkflowTemplateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Path        string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Public      bool   `protobuf:"varint,4,opt,name=public,proto3" json:"public,omitempty"` // whether the environment is public or not
}

func (x *WorkflowTemplateInfo) Reset() {
	*x = WorkflowTemplateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowTemplateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowTemplateInfo) ProtoMessage() {}

func (x *WorkflowTemplateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowTemplateInfo.ProtoReflect.Descriptor instead.
func (*WorkflowTemplateInfo) Descriptor() ([]byte, []int) {
	return file_protos_common_proto_rawDescGZIP(), []int{1}
}

func (x *WorkflowTemplateInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkflowTemplateInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WorkflowTemplateInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WorkflowTemplateInfo) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

// *
// Beam information at a specific point in time (e.g. start or end of stable beams)
type BeamInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StableBeamsStart  int64    `protobuf:"varint,1,opt,name=stableBeamsStart,proto3" json:"stableBeamsStart,omitempty"`  // milliseconds since epoch when stable beams started
	StableBeamsEnd    int64    `protobuf:"varint,2,opt,name=stableBeamsEnd,proto3" json:"stableBeamsEnd,omitempty"`      // milliseconds since epoch when stable beams ended
	FillNumber        int32    `protobuf:"varint,3,opt,name=fillNumber,proto3" json:"fillNumber,omitempty"`              // LHC fill number
	FillingSchemeName string   `protobuf:"bytes,4,opt,name=fillingSchemeName,proto3" json:"fillingSchemeName,omitempty"` // LHC filling scheme name e.g. 25ns_2460b_2448_2089_2227_144bpi_20inj
	Beam1Energy       float32  `protobuf:"fixed32,5,opt,name=beam1Energy,proto3" json:"beam1Energy,omitempty"`           // in GeV
	Beam2Energy       float32  `protobuf:"fixed32,6,opt,name=beam2Energy,proto3" json:"beam2Energy,omitempty"`           // in GeV
	BeamType          string   `protobuf:"bytes,7,opt,name=beamType,proto3" json:"beamType,omitempty"`                   // e.g. PROTON-PROTON, O8-O8, Pb-Pb, p-Pb, Pb-p
	BeamMode          BeamMode `protobuf:"varint,8,opt,name=beamMode,proto3,enum=common.BeamMode" json:"beamMode,omitempty"`
}

func (x *BeamInfo) Reset() {
	*x = BeamInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeamInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeamInfo) ProtoMessage() {}

func (x *BeamInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeamInfo.ProtoReflect.Descriptor instead.
func (*BeamInfo) Descriptor() ([]byte, []int) {
	return file_protos_common_proto_rawDescGZIP(), []int{2}
}

func (x *BeamInfo) GetStableBeamsStart() int64 {
	if x != nil {
		return x.StableBeamsStart
	}
	return 0
}

func (x *BeamInfo) GetStableBeamsEnd() int64 {
	if x != nil {
		return x.StableBeamsEnd
	}
	return 0
}

func (x *BeamInfo) GetFillNumber() int32 {
	if x != nil {
		return x.FillNumber
	}
	return 0
}

func (x *BeamInfo) GetFillingSchemeName() string {
	if x != nil {
		return x.FillingSchemeName
	}
	return ""
}

func (x *BeamInfo) GetBeam1Energy() float32 {
	if x != nil {
		return x.Beam1Energy
	}
	return 0
}

func (x *BeamInfo) GetBeam2Energy() float32 {
	if x != nil {
		return x.Beam2Energy
	}
	return 0
}

func (x *BeamInfo) GetBeamType() string {
	if x != nil {
		return x.BeamType
	}
	return ""
}

func (x *BeamInfo) GetBeamMode() BeamMode {
	if x != nil {
		return x.BeamMode
	}
	return BeamMode_UNKNOWN
}

var File_protos_common_proto protoreflect.FileDescriptor

var file_protos_common_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x6a, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0x78, 0x0a, 0x14, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x22, 0xba, 0x02, 0x0a, 0x08, 0x42, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x65, 0x61, 0x6d, 0x73, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x42, 0x65, 0x61, 0x6d, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x65, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x65, 0x61, 0x6d,
	0x73, 0x45, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x6c, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x66, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x65, 0x61, 0x6d, 0x31, 0x45, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x62, 0x65, 0x61, 0x6d, 0x31, 0x45, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x65, 0x61, 0x6d, 0x32, 0x45, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x62, 0x65, 0x61, 0x6d, 0x32,
	0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x61, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x65, 0x61, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x62, 0x65, 0x61, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x65,
	0x61, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x62, 0x65, 0x61, 0x6d, 0x4d, 0x6f, 0x64, 0x65,
	0x2a, 0x80, 0x03, 0x0a, 0x08, 0x42, 0x65, 0x61, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x45,
	0x54, 0x55, 0x50, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x10, 0x02,
	0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e, 0x4a, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52,
	0x4f, 0x42, 0x45, 0x5f, 0x42, 0x45, 0x41, 0x4d, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e,
	0x4a, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x54, 0x55, 0x50, 0x5f, 0x42, 0x45,
	0x41, 0x4d, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x4a, 0x45, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x50, 0x48, 0x59, 0x53, 0x49, 0x43, 0x53, 0x5f, 0x42, 0x45, 0x41, 0x4d, 0x10, 0x05,
	0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x45, 0x5f, 0x52, 0x41, 0x4d, 0x50,
	0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x41, 0x4d, 0x50, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08,
	0x46, 0x4c, 0x41, 0x54, 0x5f, 0x54, 0x4f, 0x50, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x51,
	0x55, 0x45, 0x45, 0x5a, 0x45, 0x10, 0x09, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x44, 0x4a, 0x55, 0x53,
	0x54, 0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x42, 0x45,
	0x41, 0x4d, 0x53, 0x10, 0x0b, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x4f, 0x53, 0x54, 0x5f, 0x42, 0x45,
	0x41, 0x4d, 0x53, 0x10, 0x0c, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x53, 0x54, 0x41, 0x42, 0x4c,
	0x45, 0x5f, 0x42, 0x45, 0x41, 0x4d, 0x53, 0x10, 0x0d, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x45, 0x41,
	0x4d, 0x5f, 0x44, 0x55, 0x4d, 0x50, 0x5f, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x0e,
	0x12, 0x0d, 0x0a, 0x09, 0x42, 0x45, 0x41, 0x4d, 0x5f, 0x44, 0x55, 0x4d, 0x50, 0x10, 0x0f, 0x12,
	0x0d, 0x0a, 0x09, 0x52, 0x41, 0x4d, 0x50, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x10, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x59, 0x43, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x11, 0x12, 0x0c, 0x0a, 0x08, 0x52,
	0x45, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x59, 0x10, 0x12, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x4a,
	0x45, 0x43, 0x54, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x44, 0x55, 0x4d, 0x50, 0x10, 0x13, 0x12, 0x16,
	0x0a, 0x12, 0x43, 0x49, 0x52, 0x43, 0x55, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x4e, 0x44, 0x5f,
	0x44, 0x55, 0x4d, 0x50, 0x10, 0x14, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x5f, 0x42, 0x45, 0x41,
	0x4d, 0x10, 0x15, 0x42, 0x53, 0x0a, 0x1f, 0x63, 0x68, 0x2e, 0x63, 0x65, 0x72, 0x6e, 0x2e, 0x61,
	0x6c, 0x69, 0x63, 0x65, 0x2e, 0x6f, 0x32, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x41, 0x6c, 0x69, 0x63, 0x65, 0x4f, 0x32, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2f,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_common_proto_rawDescOnce sync.Once
	file_protos_common_proto_rawDescData = file_protos_common_proto_rawDesc
)

func file_protos_common_proto_rawDescGZIP() []byte {
	file_protos_common_proto_rawDescOnce.Do(func() {
		file_protos_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_common_proto_rawDescData)
	})
	return file_protos_common_proto_rawDescData
}

var file_protos_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_common_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_protos_common_proto_goTypes = []interface{}{
	(BeamMode)(0),                // 0: common.BeamMode
	(*User)(nil),                 // 1: common.User
	(*WorkflowTemplateInfo)(nil), // 2: common.WorkflowTemplateInfo
	(*BeamInfo)(nil),             // 3: common.BeamInfo
}
var file_protos_common_proto_depIdxs = []int32{
	0, // 0: common.BeamInfo.beamMode:type_name -> common.BeamMode
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_protos_common_proto_init() }
func file_protos_common_proto_init() {
	if File_protos_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowTemplateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeamInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_common_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_common_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_common_proto_goTypes,
		DependencyIndexes: file_protos_common_proto_depIdxs,
		EnumInfos:         file_protos_common_proto_enumTypes,
		MessageInfos:      file_protos_common_proto_msgTypes,
	}.Build()
	File_protos_common_proto = out.File
	file_protos_common_proto_rawDesc = nil
	file_protos_common_proto_goTypes = nil
	file_protos_common_proto_depIdxs = nil
}
