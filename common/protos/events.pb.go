//
// === This file is part of ALICE O² ===
//
// Copyright 2024 CERN and copyright holders of ALICE O².
// Author: Teo Mrnjavac <teo.mrnjavac@cern.ch>
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// In applying this license CERN does not waive the privileges and
// immunities granted to it by virtue of its status as an
// Intergovernmental Organization or submit itself to any jurisdiction.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.3
// source: protos/events.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OpStatus int32

const (
	OpStatus_NULL         OpStatus = 0
	OpStatus_STARTED      OpStatus = 1
	OpStatus_ONGOING      OpStatus = 2
	OpStatus_DONE_OK      OpStatus = 3
	OpStatus_DONE_ERROR   OpStatus = 4
	OpStatus_DONE_TIMEOUT OpStatus = 5
)

// Enum value maps for OpStatus.
var (
	OpStatus_name = map[int32]string{
		0: "NULL",
		1: "STARTED",
		2: "ONGOING",
		3: "DONE_OK",
		4: "DONE_ERROR",
		5: "DONE_TIMEOUT",
	}
	OpStatus_value = map[string]int32{
		"NULL":         0,
		"STARTED":      1,
		"ONGOING":      2,
		"DONE_OK":      3,
		"DONE_ERROR":   4,
		"DONE_TIMEOUT": 5,
	}
)

func (x OpStatus) Enum() *OpStatus {
	p := new(OpStatus)
	*p = x
	return p
}

func (x OpStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_events_proto_enumTypes[0].Descriptor()
}

func (OpStatus) Type() protoreflect.EnumType {
	return &file_protos_events_proto_enumTypes[0]
}

func (x OpStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpStatus.Descriptor instead.
func (OpStatus) EnumDescriptor() ([]byte, []int) {
	return file_protos_events_proto_rawDescGZIP(), []int{0}
}

type Ev_MetaEvent_MesosHeartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ev_MetaEvent_MesosHeartbeat) Reset() {
	*x = Ev_MetaEvent_MesosHeartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ev_MetaEvent_MesosHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ev_MetaEvent_MesosHeartbeat) ProtoMessage() {}

func (x *Ev_MetaEvent_MesosHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_protos_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ev_MetaEvent_MesosHeartbeat.ProtoReflect.Descriptor instead.
func (*Ev_MetaEvent_MesosHeartbeat) Descriptor() ([]byte, []int) {
	return file_protos_events_proto_rawDescGZIP(), []int{0}
}

type Ev_MetaEvent_CoreStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrameworkId string `protobuf:"bytes,1,opt,name=frameworkId,proto3" json:"frameworkId,omitempty"`
}

func (x *Ev_MetaEvent_CoreStart) Reset() {
	*x = Ev_MetaEvent_CoreStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ev_MetaEvent_CoreStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ev_MetaEvent_CoreStart) ProtoMessage() {}

func (x *Ev_MetaEvent_CoreStart) ProtoReflect() protoreflect.Message {
	mi := &file_protos_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ev_MetaEvent_CoreStart.ProtoReflect.Descriptor instead.
func (*Ev_MetaEvent_CoreStart) Descriptor() ([]byte, []int) {
	return file_protos_events_proto_rawDescGZIP(), []int{1}
}

func (x *Ev_MetaEvent_CoreStart) GetFrameworkId() string {
	if x != nil {
		return x.FrameworkId
	}
	return ""
}

type Ev_MetaEvent_FrameworkEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrameworkId string `protobuf:"bytes,1,opt,name=frameworkId,proto3" json:"frameworkId,omitempty"`
	Message     string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Ev_MetaEvent_FrameworkEvent) Reset() {
	*x = Ev_MetaEvent_FrameworkEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ev_MetaEvent_FrameworkEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ev_MetaEvent_FrameworkEvent) ProtoMessage() {}

func (x *Ev_MetaEvent_FrameworkEvent) ProtoReflect() protoreflect.Message {
	mi := &file_protos_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ev_MetaEvent_FrameworkEvent.ProtoReflect.Descriptor instead.
func (*Ev_MetaEvent_FrameworkEvent) Descriptor() ([]byte, []int) {
	return file_protos_events_proto_rawDescGZIP(), []int{2}
}

func (x *Ev_MetaEvent_FrameworkEvent) GetFrameworkId() string {
	if x != nil {
		return x.FrameworkId
	}
	return ""
}

func (x *Ev_MetaEvent_FrameworkEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Ev_EnvironmentEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentId    string            `protobuf:"bytes,1,opt,name=environmentId,proto3" json:"environmentId,omitempty"`
	State            string            `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	RunNumber        uint32            `protobuf:"varint,3,opt,name=runNumber,proto3" json:"runNumber,omitempty"` // only when the environment is in the running state
	Error            string            `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Message          string            `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"` // any additional message concerning the current state or transition
	Transition       string            `protobuf:"bytes,6,opt,name=transition,proto3" json:"transition,omitempty"`
	TransitionStep   string            `protobuf:"bytes,7,opt,name=transitionStep,proto3" json:"transitionStep,omitempty"`
	TransitionStatus OpStatus          `protobuf:"varint,8,opt,name=transitionStatus,proto3,enum=events.OpStatus" json:"transitionStatus,omitempty"`
	Vars             map[string]string `protobuf:"bytes,9,rep,name=vars,proto3" json:"vars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // consolidated environment variables at the root role of the environment
	LastRequestUser  *User             `protobuf:"bytes,10,opt,name=lastRequestUser,proto3" json:"lastRequestUser,omitempty"`
}

func (x *Ev_EnvironmentEvent) Reset() {
	*x = Ev_EnvironmentEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ev_EnvironmentEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ev_EnvironmentEvent) ProtoMessage() {}

func (x *Ev_EnvironmentEvent) ProtoReflect() protoreflect.Message {
	mi := &file_protos_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ev_EnvironmentEvent.ProtoReflect.Descriptor instead.
func (*Ev_EnvironmentEvent) Descriptor() ([]byte, []int) {
	return file_protos_events_proto_rawDescGZIP(), []int{3}
}

func (x *Ev_EnvironmentEvent) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *Ev_EnvironmentEvent) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Ev_EnvironmentEvent) GetRunNumber() uint32 {
	if x != nil {
		return x.RunNumber
	}
	return 0
}

func (x *Ev_EnvironmentEvent) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *Ev_EnvironmentEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Ev_EnvironmentEvent) GetTransition() string {
	if x != nil {
		return x.Transition
	}
	return ""
}

func (x *Ev_EnvironmentEvent) GetTransitionStep() string {
	if x != nil {
		return x.TransitionStep
	}
	return ""
}

func (x *Ev_EnvironmentEvent) GetTransitionStatus() OpStatus {
	if x != nil {
		return x.TransitionStatus
	}
	return OpStatus_NULL
}

func (x *Ev_EnvironmentEvent) GetVars() map[string]string {
	if x != nil {
		return x.Vars
	}
	return nil
}

func (x *Ev_EnvironmentEvent) GetLastRequestUser() *User {
	if x != nil {
		return x.LastRequestUser
	}
	return nil
}

type Traits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trigger  string `protobuf:"bytes,1,opt,name=trigger,proto3" json:"trigger,omitempty"`
	Await    string `protobuf:"bytes,2,opt,name=await,proto3" json:"await,omitempty"`
	Timeout  string `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Critical bool   `protobuf:"varint,4,opt,name=critical,proto3" json:"critical,omitempty"`
}

func (x *Traits) Reset() {
	*x = Traits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Traits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Traits) ProtoMessage() {}

func (x *Traits) ProtoReflect() protoreflect.Message {
	mi := &file_protos_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Traits.ProtoReflect.Descriptor instead.
func (*Traits) Descriptor() ([]byte, []int) {
	return file_protos_events_proto_rawDescGZIP(), []int{4}
}

func (x *Traits) GetTrigger() string {
	if x != nil {
		return x.Trigger
	}
	return ""
}

func (x *Traits) GetAwait() string {
	if x != nil {
		return x.Await
	}
	return ""
}

func (x *Traits) GetTimeout() string {
	if x != nil {
		return x.Timeout
	}
	return ""
}

func (x *Traits) GetCritical() bool {
	if x != nil {
		return x.Critical
	}
	return false
}

type Ev_TaskEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`     // task name, based on the name of the task class
	Taskid        string  `protobuf:"bytes,2,opt,name=taskid,proto3" json:"taskid,omitempty"` // task id, unique
	State         string  `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`   // state machine state for this task
	Status        string  `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"` // active/inactive etc.
	Hostname      string  `protobuf:"bytes,5,opt,name=hostname,proto3" json:"hostname,omitempty"`
	ClassName     string  `protobuf:"bytes,6,opt,name=className,proto3" json:"className,omitempty"` // name of the task class from which this task was spawned
	Traits        *Traits `protobuf:"bytes,7,opt,name=traits,proto3" json:"traits,omitempty"`
	EnvironmentId string  `protobuf:"bytes,8,opt,name=environmentId,proto3" json:"environmentId,omitempty"`
	Path          string  `protobuf:"bytes,9,opt,name=path,proto3" json:"path,omitempty"` // path to the parent taskRole of this task within the environment
}

func (x *Ev_TaskEvent) Reset() {
	*x = Ev_TaskEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ev_TaskEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ev_TaskEvent) ProtoMessage() {}

func (x *Ev_TaskEvent) ProtoReflect() protoreflect.Message {
	mi := &file_protos_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ev_TaskEvent.ProtoReflect.Descriptor instead.
func (*Ev_TaskEvent) Descriptor() ([]byte, []int) {
	return file_protos_events_proto_rawDescGZIP(), []int{5}
}

func (x *Ev_TaskEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ev_TaskEvent) GetTaskid() string {
	if x != nil {
		return x.Taskid
	}
	return ""
}

func (x *Ev_TaskEvent) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Ev_TaskEvent) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Ev_TaskEvent) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Ev_TaskEvent) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *Ev_TaskEvent) GetTraits() *Traits {
	if x != nil {
		return x.Traits
	}
	return nil
}

func (x *Ev_TaskEvent) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *Ev_TaskEvent) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Ev_CallEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Func          string   `protobuf:"bytes,1,opt,name=func,proto3" json:"func,omitempty"`                                   // name of the function being called, within the workflow template context
	CallStatus    OpStatus `protobuf:"varint,2,opt,name=callStatus,proto3,enum=events.OpStatus" json:"callStatus,omitempty"` // progress or success/failure state of the call
	Return        string   `protobuf:"bytes,3,opt,name=return,proto3" json:"return,omitempty"`                               // return value of the function
	Traits        *Traits  `protobuf:"bytes,4,opt,name=traits,proto3" json:"traits,omitempty"`
	Output        string   `protobuf:"bytes,5,opt,name=output,proto3" json:"output,omitempty"` // any additional output of the function
	Error         string   `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`   // error value, if returned
	EnvironmentId string   `protobuf:"bytes,7,opt,name=environmentId,proto3" json:"environmentId,omitempty"`
	Path          string   `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"` // path to the parent callRole of this call within the environment
}

func (x *Ev_CallEvent) Reset() {
	*x = Ev_CallEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ev_CallEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ev_CallEvent) ProtoMessage() {}

func (x *Ev_CallEvent) ProtoReflect() protoreflect.Message {
	mi := &file_protos_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ev_CallEvent.ProtoReflect.Descriptor instead.
func (*Ev_CallEvent) Descriptor() ([]byte, []int) {
	return file_protos_events_proto_rawDescGZIP(), []int{6}
}

func (x *Ev_CallEvent) GetFunc() string {
	if x != nil {
		return x.Func
	}
	return ""
}

func (x *Ev_CallEvent) GetCallStatus() OpStatus {
	if x != nil {
		return x.CallStatus
	}
	return OpStatus_NULL
}

func (x *Ev_CallEvent) GetReturn() string {
	if x != nil {
		return x.Return
	}
	return ""
}

func (x *Ev_CallEvent) GetTraits() *Traits {
	if x != nil {
		return x.Traits
	}
	return nil
}

func (x *Ev_CallEvent) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *Ev_CallEvent) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *Ev_CallEvent) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *Ev_CallEvent) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Ev_RoleEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`         // role name
	Status        string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`     // active/inactive etc., derived from the state of child tasks, calls or other roles
	State         string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`       // state machine state for this role
	RolePath      string `protobuf:"bytes,4,opt,name=rolePath,proto3" json:"rolePath,omitempty"` // path to this role within the environment
	EnvironmentId string `protobuf:"bytes,5,opt,name=environmentId,proto3" json:"environmentId,omitempty"`
}

func (x *Ev_RoleEvent) Reset() {
	*x = Ev_RoleEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ev_RoleEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ev_RoleEvent) ProtoMessage() {}

func (x *Ev_RoleEvent) ProtoReflect() protoreflect.Message {
	mi := &file_protos_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ev_RoleEvent.ProtoReflect.Descriptor instead.
func (*Ev_RoleEvent) Descriptor() ([]byte, []int) {
	return file_protos_events_proto_rawDescGZIP(), []int{7}
}

func (x *Ev_RoleEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ev_RoleEvent) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Ev_RoleEvent) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Ev_RoleEvent) GetRolePath() string {
	if x != nil {
		return x.RolePath
	}
	return ""
}

func (x *Ev_RoleEvent) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

type Ev_IntegratedServiceEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                     // name of the context, usually the path of the callRole that calls a given integrated service function e.g. readout-dataflow.dd-scheduler.terminate
	Error               string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`                                                   // error message, if any
	OperationName       string   `protobuf:"bytes,3,opt,name=operationName,proto3" json:"operationName,omitempty"`                                   // name of the operation, usually the name of the integrated service function being called e.g. ddsched.PartitionTerminate()"
	OperationStatus     OpStatus `protobuf:"varint,4,opt,name=operationStatus,proto3,enum=events.OpStatus" json:"operationStatus,omitempty"`         // progress or success/failure state of the operation
	OperationStep       string   `protobuf:"bytes,5,opt,name=operationStep,proto3" json:"operationStep,omitempty"`                                   // if the operation has substeps, this is the name of the current substep, like an API call or polling phase
	OperationStepStatus OpStatus `protobuf:"varint,6,opt,name=operationStepStatus,proto3,enum=events.OpStatus" json:"operationStepStatus,omitempty"` // progress or success/failure state of the current substep
	EnvironmentId       string   `protobuf:"bytes,7,opt,name=environmentId,proto3" json:"environmentId,omitempty"`
	Payload             string   `protobuf:"bytes,8,opt,name=payload,proto3" json:"payload,omitempty"` // any additional payload, depending on the integrated service; there is no schema, it can even be the raw return structure of a remote API call
}

func (x *Ev_IntegratedServiceEvent) Reset() {
	*x = Ev_IntegratedServiceEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_events_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ev_IntegratedServiceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ev_IntegratedServiceEvent) ProtoMessage() {}

func (x *Ev_IntegratedServiceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_protos_events_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ev_IntegratedServiceEvent.ProtoReflect.Descriptor instead.
func (*Ev_IntegratedServiceEvent) Descriptor() ([]byte, []int) {
	return file_protos_events_proto_rawDescGZIP(), []int{8}
}

func (x *Ev_IntegratedServiceEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ev_IntegratedServiceEvent) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *Ev_IntegratedServiceEvent) GetOperationName() string {
	if x != nil {
		return x.OperationName
	}
	return ""
}

func (x *Ev_IntegratedServiceEvent) GetOperationStatus() OpStatus {
	if x != nil {
		return x.OperationStatus
	}
	return OpStatus_NULL
}

func (x *Ev_IntegratedServiceEvent) GetOperationStep() string {
	if x != nil {
		return x.OperationStep
	}
	return ""
}

func (x *Ev_IntegratedServiceEvent) GetOperationStepStatus() OpStatus {
	if x != nil {
		return x.OperationStepStatus
	}
	return OpStatus_NULL
}

func (x *Ev_IntegratedServiceEvent) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *Ev_IntegratedServiceEvent) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type Ev_RunEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentId    string            `protobuf:"bytes,1,opt,name=environmentId,proto3" json:"environmentId,omitempty"`
	RunNumber        uint32            `protobuf:"varint,2,opt,name=runNumber,proto3" json:"runNumber,omitempty"`
	State            string            `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Error            string            `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Transition       string            `protobuf:"bytes,5,opt,name=transition,proto3" json:"transition,omitempty"`
	TransitionStatus OpStatus          `protobuf:"varint,6,opt,name=transitionStatus,proto3,enum=events.OpStatus" json:"transitionStatus,omitempty"`
	Vars             map[string]string `protobuf:"bytes,7,rep,name=vars,proto3" json:"vars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LastRequestUser  *User             `protobuf:"bytes,8,opt,name=lastRequestUser,proto3" json:"lastRequestUser,omitempty"`
}

func (x *Ev_RunEvent) Reset() {
	*x = Ev_RunEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_events_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ev_RunEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ev_RunEvent) ProtoMessage() {}

func (x *Ev_RunEvent) ProtoReflect() protoreflect.Message {
	mi := &file_protos_events_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ev_RunEvent.ProtoReflect.Descriptor instead.
func (*Ev_RunEvent) Descriptor() ([]byte, []int) {
	return file_protos_events_proto_rawDescGZIP(), []int{9}
}

func (x *Ev_RunEvent) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *Ev_RunEvent) GetRunNumber() uint32 {
	if x != nil {
		return x.RunNumber
	}
	return 0
}

func (x *Ev_RunEvent) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Ev_RunEvent) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *Ev_RunEvent) GetTransition() string {
	if x != nil {
		return x.Transition
	}
	return ""
}

func (x *Ev_RunEvent) GetTransitionStatus() OpStatus {
	if x != nil {
		return x.TransitionStatus
	}
	return OpStatus_NULL
}

func (x *Ev_RunEvent) GetVars() map[string]string {
	if x != nil {
		return x.Vars
	}
	return nil
}

func (x *Ev_RunEvent) GetLastRequestUser() *User {
	if x != nil {
		return x.LastRequestUser
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*Event_EnvironmentEvent
	//	*Event_TaskEvent
	//	*Event_RoleEvent
	//	*Event_CallEvent
	//	*Event_IntegratedServiceEvent
	//	*Event_RunEvent
	//	*Event_FrameworkEvent
	//	*Event_MesosHeartbeatEvent
	//	*Event_CoreStartEvent
	Payload isEvent_Payload `protobuf_oneof:"Payload"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_events_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_protos_events_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_protos_events_proto_rawDescGZIP(), []int{10}
}

func (x *Event) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (m *Event) GetPayload() isEvent_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Event) GetEnvironmentEvent() *Ev_EnvironmentEvent {
	if x, ok := x.GetPayload().(*Event_EnvironmentEvent); ok {
		return x.EnvironmentEvent
	}
	return nil
}

func (x *Event) GetTaskEvent() *Ev_TaskEvent {
	if x, ok := x.GetPayload().(*Event_TaskEvent); ok {
		return x.TaskEvent
	}
	return nil
}

func (x *Event) GetRoleEvent() *Ev_RoleEvent {
	if x, ok := x.GetPayload().(*Event_RoleEvent); ok {
		return x.RoleEvent
	}
	return nil
}

func (x *Event) GetCallEvent() *Ev_CallEvent {
	if x, ok := x.GetPayload().(*Event_CallEvent); ok {
		return x.CallEvent
	}
	return nil
}

func (x *Event) GetIntegratedServiceEvent() *Ev_IntegratedServiceEvent {
	if x, ok := x.GetPayload().(*Event_IntegratedServiceEvent); ok {
		return x.IntegratedServiceEvent
	}
	return nil
}

func (x *Event) GetRunEvent() *Ev_RunEvent {
	if x, ok := x.GetPayload().(*Event_RunEvent); ok {
		return x.RunEvent
	}
	return nil
}

func (x *Event) GetFrameworkEvent() *Ev_MetaEvent_FrameworkEvent {
	if x, ok := x.GetPayload().(*Event_FrameworkEvent); ok {
		return x.FrameworkEvent
	}
	return nil
}

func (x *Event) GetMesosHeartbeatEvent() *Ev_MetaEvent_MesosHeartbeat {
	if x, ok := x.GetPayload().(*Event_MesosHeartbeatEvent); ok {
		return x.MesosHeartbeatEvent
	}
	return nil
}

func (x *Event) GetCoreStartEvent() *Ev_MetaEvent_CoreStart {
	if x, ok := x.GetPayload().(*Event_CoreStartEvent); ok {
		return x.CoreStartEvent
	}
	return nil
}

type isEvent_Payload interface {
	isEvent_Payload()
}

type Event_EnvironmentEvent struct {
	EnvironmentEvent *Ev_EnvironmentEvent `protobuf:"bytes,11,opt,name=environmentEvent,proto3,oneof"`
}

type Event_TaskEvent struct {
	TaskEvent *Ev_TaskEvent `protobuf:"bytes,12,opt,name=taskEvent,proto3,oneof"`
}

type Event_RoleEvent struct {
	RoleEvent *Ev_RoleEvent `protobuf:"bytes,13,opt,name=roleEvent,proto3,oneof"`
}

type Event_CallEvent struct {
	CallEvent *Ev_CallEvent `protobuf:"bytes,14,opt,name=callEvent,proto3,oneof"`
}

type Event_IntegratedServiceEvent struct {
	IntegratedServiceEvent *Ev_IntegratedServiceEvent `protobuf:"bytes,15,opt,name=integratedServiceEvent,proto3,oneof"`
}

type Event_RunEvent struct {
	RunEvent *Ev_RunEvent `protobuf:"bytes,16,opt,name=runEvent,proto3,oneof"`
}

type Event_FrameworkEvent struct {
	FrameworkEvent *Ev_MetaEvent_FrameworkEvent `protobuf:"bytes,101,opt,name=frameworkEvent,proto3,oneof"`
}

type Event_MesosHeartbeatEvent struct {
	MesosHeartbeatEvent *Ev_MetaEvent_MesosHeartbeat `protobuf:"bytes,102,opt,name=mesosHeartbeatEvent,proto3,oneof"`
}

type Event_CoreStartEvent struct {
	CoreStartEvent *Ev_MetaEvent_CoreStart `protobuf:"bytes,103,opt,name=coreStartEvent,proto3,oneof"`
}

func (*Event_EnvironmentEvent) isEvent_Payload() {}

func (*Event_TaskEvent) isEvent_Payload() {}

func (*Event_RoleEvent) isEvent_Payload() {}

func (*Event_CallEvent) isEvent_Payload() {}

func (*Event_IntegratedServiceEvent) isEvent_Payload() {}

func (*Event_RunEvent) isEvent_Payload() {}

func (*Event_FrameworkEvent) isEvent_Payload() {}

func (*Event_MesosHeartbeatEvent) isEvent_Payload() {}

func (*Event_CoreStartEvent) isEvent_Payload() {}

var File_protos_events_proto protoreflect.FileDescriptor

var file_protos_events_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x13, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x1d, 0x0a, 0x1b, 0x45, 0x76, 0x5f, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x4d, 0x65, 0x73, 0x6f, 0x73, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x22, 0x3a, 0x0a, 0x16, 0x45, 0x76, 0x5f, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x22, 0x59, 0x0a,
	0x1b, 0x45, 0x76, 0x5f, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd1, 0x03, 0x0a, 0x13, 0x45, 0x76, 0x5f,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x75, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x72, 0x75, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x65, 0x70, 0x12, 0x3c, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x39, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x5f, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x61, 0x72, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x0f, 0x6c,
	0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x1a, 0x37, 0x0a, 0x09, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6e, 0x0a, 0x06,
	0x54, 0x72, 0x61, 0x69, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x77, 0x61, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x77, 0x61, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x22, 0x84, 0x02, 0x0a,
	0x0c, 0x45, 0x76, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x74,
	0x73, 0x52, 0x06, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x22, 0xfc, 0x01, 0x0a, 0x0c, 0x45, 0x76, 0x5f, 0x43, 0x61, 0x6c, 0x6c, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a,
	0x63, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x69,
	0x74, 0x73, 0x52, 0x06, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x22, 0x92, 0x01, 0x0a, 0x0c, 0x45, 0x76, 0x5f, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xd1, 0x02, 0x0a, 0x19, 0x45, 0x76, 0x5f, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x65, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x12, 0x42, 0x0a, 0x13, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4f, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x13, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x65, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xff, 0x02, 0x0a, 0x0b,
	0x45, 0x76, 0x5f, 0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x75, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x10, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4f,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x76, 0x61, 0x72,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x45, 0x76, 0x5f, 0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x61, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x0f,
	0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x1a, 0x37, 0x0a, 0x09, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xab, 0x05,
	0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x49, 0x0a, 0x10, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x5f, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x10,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x34, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x5f,
	0x54, 0x61, 0x73, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x74, 0x61, 0x73,
	0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x45, 0x76, 0x5f, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x09,
	0x63, 0x61, 0x6c, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x5f, 0x43, 0x61, 0x6c, 0x6c,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x5b, 0x0a, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x5f, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x31, 0x0a, 0x08, 0x72, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x5f, 0x52, 0x75,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x08, 0x72, 0x75, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x0e, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x5f, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x0e, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x57, 0x0a, 0x13, 0x6d, 0x65, 0x73, 0x6f, 0x73, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x5f, 0x4d, 0x65, 0x74, 0x61, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x4d, 0x65, 0x73, 0x6f, 0x73, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x48, 0x00, 0x52, 0x13, 0x6d, 0x65, 0x73, 0x6f, 0x73, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x0e, 0x63, 0x6f,
	0x72, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x67, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x5f, 0x4d,
	0x65, 0x74, 0x61, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4a,
	0x04, 0x08, 0x02, 0x10, 0x0b, 0x4a, 0x04, 0x08, 0x11, 0x10, 0x65, 0x2a, 0x5d, 0x0a, 0x08, 0x4f,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x4f, 0x4e, 0x47, 0x4f, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x44,
	0x4f, 0x4e, 0x45, 0x5f, 0x4f, 0x4b, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x4f, 0x4e, 0x45,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x4f, 0x4e, 0x45,
	0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x05, 0x42, 0x53, 0x0a, 0x1f, 0x63, 0x68,
	0x2e, 0x63, 0x65, 0x72, 0x6e, 0x2e, 0x61, 0x6c, 0x69, 0x63, 0x65, 0x2e, 0x6f, 0x32, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5a, 0x30, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x6c, 0x69, 0x63, 0x65, 0x4f,
	0x32, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x3b, 0x70, 0x62, 0x50,
	0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_events_proto_rawDescOnce sync.Once
	file_protos_events_proto_rawDescData = file_protos_events_proto_rawDesc
)

func file_protos_events_proto_rawDescGZIP() []byte {
	file_protos_events_proto_rawDescOnce.Do(func() {
		file_protos_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_events_proto_rawDescData)
	})
	return file_protos_events_proto_rawDescData
}

var file_protos_events_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_events_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_protos_events_proto_goTypes = []interface{}{
	(OpStatus)(0),                       // 0: events.OpStatus
	(*Ev_MetaEvent_MesosHeartbeat)(nil), // 1: events.Ev_MetaEvent_MesosHeartbeat
	(*Ev_MetaEvent_CoreStart)(nil),      // 2: events.Ev_MetaEvent_CoreStart
	(*Ev_MetaEvent_FrameworkEvent)(nil), // 3: events.Ev_MetaEvent_FrameworkEvent
	(*Ev_EnvironmentEvent)(nil),         // 4: events.Ev_EnvironmentEvent
	(*Traits)(nil),                      // 5: events.Traits
	(*Ev_TaskEvent)(nil),                // 6: events.Ev_TaskEvent
	(*Ev_CallEvent)(nil),                // 7: events.Ev_CallEvent
	(*Ev_RoleEvent)(nil),                // 8: events.Ev_RoleEvent
	(*Ev_IntegratedServiceEvent)(nil),   // 9: events.Ev_IntegratedServiceEvent
	(*Ev_RunEvent)(nil),                 // 10: events.Ev_RunEvent
	(*Event)(nil),                       // 11: events.Event
	nil,                                 // 12: events.Ev_EnvironmentEvent.VarsEntry
	nil,                                 // 13: events.Ev_RunEvent.VarsEntry
	(*User)(nil),                        // 14: common.User
}
var file_protos_events_proto_depIdxs = []int32{
	0,  // 0: events.Ev_EnvironmentEvent.transitionStatus:type_name -> events.OpStatus
	12, // 1: events.Ev_EnvironmentEvent.vars:type_name -> events.Ev_EnvironmentEvent.VarsEntry
	14, // 2: events.Ev_EnvironmentEvent.lastRequestUser:type_name -> common.User
	5,  // 3: events.Ev_TaskEvent.traits:type_name -> events.Traits
	0,  // 4: events.Ev_CallEvent.callStatus:type_name -> events.OpStatus
	5,  // 5: events.Ev_CallEvent.traits:type_name -> events.Traits
	0,  // 6: events.Ev_IntegratedServiceEvent.operationStatus:type_name -> events.OpStatus
	0,  // 7: events.Ev_IntegratedServiceEvent.operationStepStatus:type_name -> events.OpStatus
	0,  // 8: events.Ev_RunEvent.transitionStatus:type_name -> events.OpStatus
	13, // 9: events.Ev_RunEvent.vars:type_name -> events.Ev_RunEvent.VarsEntry
	14, // 10: events.Ev_RunEvent.lastRequestUser:type_name -> common.User
	4,  // 11: events.Event.environmentEvent:type_name -> events.Ev_EnvironmentEvent
	6,  // 12: events.Event.taskEvent:type_name -> events.Ev_TaskEvent
	8,  // 13: events.Event.roleEvent:type_name -> events.Ev_RoleEvent
	7,  // 14: events.Event.callEvent:type_name -> events.Ev_CallEvent
	9,  // 15: events.Event.integratedServiceEvent:type_name -> events.Ev_IntegratedServiceEvent
	10, // 16: events.Event.runEvent:type_name -> events.Ev_RunEvent
	3,  // 17: events.Event.frameworkEvent:type_name -> events.Ev_MetaEvent_FrameworkEvent
	1,  // 18: events.Event.mesosHeartbeatEvent:type_name -> events.Ev_MetaEvent_MesosHeartbeat
	2,  // 19: events.Event.coreStartEvent:type_name -> events.Ev_MetaEvent_CoreStart
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_protos_events_proto_init() }
func file_protos_events_proto_init() {
	if File_protos_events_proto != nil {
		return
	}
	file_protos_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protos_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ev_MetaEvent_MesosHeartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ev_MetaEvent_CoreStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ev_MetaEvent_FrameworkEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ev_EnvironmentEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Traits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ev_TaskEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ev_CallEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_events_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ev_RoleEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_events_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ev_IntegratedServiceEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_events_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ev_RunEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_events_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_events_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*Event_EnvironmentEvent)(nil),
		(*Event_TaskEvent)(nil),
		(*Event_RoleEvent)(nil),
		(*Event_CallEvent)(nil),
		(*Event_IntegratedServiceEvent)(nil),
		(*Event_RunEvent)(nil),
		(*Event_FrameworkEvent)(nil),
		(*Event_MesosHeartbeatEvent)(nil),
		(*Event_CoreStartEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_events_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_events_proto_goTypes,
		DependencyIndexes: file_protos_events_proto_depIdxs,
		EnumInfos:         file_protos_events_proto_enumTypes,
		MessageInfos:      file_protos_events_proto_msgTypes,
	}.Build()
	File_protos_events_proto = out.File
	file_protos_events_proto_rawDesc = nil
	file_protos_events_proto_goTypes = nil
	file_protos_events_proto_depIdxs = nil
}
