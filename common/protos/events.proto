/*
 * === This file is part of ALICE O² ===
 *
 * Copyright 2024 CERN and copyright holders of ALICE O².
 * Author: Teo Mrnjavac <teo.mrnjavac@cern.ch>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * In applying this license CERN does not waive the privileges and
 * immunities granted to it by virtue of its status as an
 * Intergovernmental Organization or submit itself to any jurisdiction.
 */

syntax = "proto3";

package events;
option java_package = "ch.cern.alice.o2.control.events";
option go_package = "github.com/AliceO2Group/Control/common/protos;pb";

//////////////// Common event messages ///////////////

enum OpStatus {
  NULL = 0;
  STARTED = 1;
  ONGOING = 2;
  DONE_OK = 3;
  DONE_ERROR = 4;
  DONE_TIMEOUT = 5;
}

message Ev_MetaEvent_MesosHeartbeat {
}

message Ev_MetaEvent_CoreStart {
  string frameworkId = 1;
}

message Ev_MetaEvent_FrameworkEvent {
  string frameworkId = 1;
  string message = 2;
}

message Ev_EnvironmentEvent {
  string environmentId = 1;
  string state = 2;
  uint32 currentRunNumber = 3;
  string error = 4;
  string message = 5;
  string transition = 6;
  string transitionStep = 7;
  OpStatus transitionStatus = 8;
  map<string, string> vars = 9;
}

message Traits {
  string trigger = 1;
  string await = 2;
  string timeout = 3;
  bool critical = 4;
}

message Ev_TaskEvent {
  string name = 1;
  string taskid = 2;
  string state = 3;
  string status = 4;
  string hostname = 5;
  string className = 6;
  Traits traits = 7;
  string environmentId = 8;
  string path = 9;
}

message Ev_CallEvent {
  string func = 1;
  OpStatus callStatus = 2;
  string return = 3;
  Traits traits = 4;
  string output = 5;
  string error = 6;
  string path = 7;
}

message Ev_RoleEvent {
  string name = 1;
  string status = 2;
  string state = 3;
  string rolePath = 4;
  string environmentId = 5;
}

message Ev_IntegratedServiceEvent {
  string name = 1;
  string error = 2;
  string operationName = 3;
  OpStatus operationStatus = 4;
  string operationStep = 5;
  OpStatus operationStepStatus = 6;
  string environmentId = 7;
  string payload = 8;
}

message Event {
  int64 timestamp = 1;
  reserved 2 to 10;
  reserved 16 to 100;

  oneof Payload {
    Ev_EnvironmentEvent environmentEvent                 = 11;
    Ev_TaskEvent taskEvent                               = 12;
    Ev_RoleEvent roleEvent                               = 13;
    Ev_CallEvent callEvent                               = 14;
    Ev_IntegratedServiceEvent integratedServiceEvent     = 15;

    Ev_MetaEvent_FrameworkEvent frameworkEvent           = 101;
    Ev_MetaEvent_MesosHeartbeat mesosHeartbeatEvent      = 102;
    Ev_MetaEvent_CoreStart coreStartEvent                = 103;
  }
}
