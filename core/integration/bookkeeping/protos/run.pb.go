// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: protos/run.proto

package bkpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RunCreationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentId       string     `protobuf:"bytes,1,opt,name=environmentId,proto3" json:"environmentId,omitempty"`
	NDetectors          int32      `protobuf:"varint,2,opt,name=nDetectors,proto3" json:"nDetectors,omitempty"`
	NEpns               int32      `protobuf:"varint,3,opt,name=nEpns,proto3" json:"nEpns,omitempty"`
	NFlps               int32      `protobuf:"varint,4,opt,name=nFlps,proto3" json:"nFlps,omitempty"`
	RunNumber           int32      `protobuf:"varint,5,opt,name=runNumber,proto3" json:"runNumber,omitempty"`
	RunType             RunType    `protobuf:"varint,6,opt,name=runType,proto3,enum=o2.bookkeeping.RunType" json:"runType,omitempty"`
	DdFlp               bool       `protobuf:"varint,7,opt,name=dd_flp,json=ddFlp,proto3" json:"dd_flp,omitempty"`
	Dcs                 bool       `protobuf:"varint,8,opt,name=dcs,proto3" json:"dcs,omitempty"`
	Epn                 bool       `protobuf:"varint,9,opt,name=epn,proto3" json:"epn,omitempty"`
	EpnTopology         string     `protobuf:"bytes,10,opt,name=epnTopology,proto3" json:"epnTopology,omitempty"`
	OdcTopologyFullName *string    `protobuf:"bytes,11,opt,name=odcTopologyFullName,proto3,oneof" json:"odcTopologyFullName,omitempty"`
	Detectors           []Detector `protobuf:"varint,12,rep,packed,name=detectors,proto3,enum=o2.bookkeeping.Detector" json:"detectors,omitempty"`
}

func (x *RunCreationRequest) Reset() {
	*x = RunCreationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_run_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunCreationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunCreationRequest) ProtoMessage() {}

func (x *RunCreationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_run_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunCreationRequest.ProtoReflect.Descriptor instead.
func (*RunCreationRequest) Descriptor() ([]byte, []int) {
	return file_protos_run_proto_rawDescGZIP(), []int{0}
}

func (x *RunCreationRequest) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *RunCreationRequest) GetNDetectors() int32 {
	if x != nil {
		return x.NDetectors
	}
	return 0
}

func (x *RunCreationRequest) GetNEpns() int32 {
	if x != nil {
		return x.NEpns
	}
	return 0
}

func (x *RunCreationRequest) GetNFlps() int32 {
	if x != nil {
		return x.NFlps
	}
	return 0
}

func (x *RunCreationRequest) GetRunNumber() int32 {
	if x != nil {
		return x.RunNumber
	}
	return 0
}

func (x *RunCreationRequest) GetRunType() RunType {
	if x != nil {
		return x.RunType
	}
	return RunType_RUN_TYPE_NULL
}

func (x *RunCreationRequest) GetDdFlp() bool {
	if x != nil {
		return x.DdFlp
	}
	return false
}

func (x *RunCreationRequest) GetDcs() bool {
	if x != nil {
		return x.Dcs
	}
	return false
}

func (x *RunCreationRequest) GetEpn() bool {
	if x != nil {
		return x.Epn
	}
	return false
}

func (x *RunCreationRequest) GetEpnTopology() string {
	if x != nil {
		return x.EpnTopology
	}
	return ""
}

func (x *RunCreationRequest) GetOdcTopologyFullName() string {
	if x != nil && x.OdcTopologyFullName != nil {
		return *x.OdcTopologyFullName
	}
	return ""
}

func (x *RunCreationRequest) GetDetectors() []Detector {
	if x != nil {
		return x.Detectors
	}
	return nil
}

type RunUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunNumber                         int32   `protobuf:"varint,1,opt,name=runNumber,proto3" json:"runNumber,omitempty"`
	TimeO2Start                       *int64  `protobuf:"varint,3,opt,name=timeO2Start,proto3,oneof" json:"timeO2Start,omitempty"`
	TimeO2End                         *int64  `protobuf:"varint,4,opt,name=timeO2End,proto3,oneof" json:"timeO2End,omitempty"`
	TimeTrgStart                      *int64  `protobuf:"varint,5,opt,name=timeTrgStart,proto3,oneof" json:"timeTrgStart,omitempty"`
	TimeTrgEnd                        *int64  `protobuf:"varint,6,opt,name=timeTrgEnd,proto3,oneof" json:"timeTrgEnd,omitempty"`
	TriggerValue                      *string `protobuf:"bytes,7,opt,name=triggerValue,proto3,oneof" json:"triggerValue,omitempty"`
	PdpConfigOption                   *string `protobuf:"bytes,8,opt,name=pdpConfigOption,proto3,oneof" json:"pdpConfigOption,omitempty"`
	PdpTopologyDescriptionLibraryFile *string `protobuf:"bytes,9,opt,name=pdpTopologyDescriptionLibraryFile,proto3,oneof" json:"pdpTopologyDescriptionLibraryFile,omitempty"`
	TfbDdMode                         *string `protobuf:"bytes,10,opt,name=tfbDdMode,proto3,oneof" json:"tfbDdMode,omitempty"`
	LhcPeriod                         *string `protobuf:"bytes,11,opt,name=lhcPeriod,proto3,oneof" json:"lhcPeriod,omitempty"`
	OdcTopologyFullName               *string `protobuf:"bytes,12,opt,name=odcTopologyFullName,proto3,oneof" json:"odcTopologyFullName,omitempty"`
	PdpWorkflowParameters             *string `protobuf:"bytes,13,opt,name=pdpWorkflowParameters,proto3,oneof" json:"pdpWorkflowParameters,omitempty"`
	PdpBeamType                       *string `protobuf:"bytes,14,opt,name=pdpBeamType,proto3,oneof" json:"pdpBeamType,omitempty"`
	ReadoutCfgUri                     *string `protobuf:"bytes,15,opt,name=readoutCfgUri,proto3,oneof" json:"readoutCfgUri,omitempty"`
}

func (x *RunUpdateRequest) Reset() {
	*x = RunUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_run_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunUpdateRequest) ProtoMessage() {}

func (x *RunUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_run_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunUpdateRequest.ProtoReflect.Descriptor instead.
func (*RunUpdateRequest) Descriptor() ([]byte, []int) {
	return file_protos_run_proto_rawDescGZIP(), []int{1}
}

func (x *RunUpdateRequest) GetRunNumber() int32 {
	if x != nil {
		return x.RunNumber
	}
	return 0
}

func (x *RunUpdateRequest) GetTimeO2Start() int64 {
	if x != nil && x.TimeO2Start != nil {
		return *x.TimeO2Start
	}
	return 0
}

func (x *RunUpdateRequest) GetTimeO2End() int64 {
	if x != nil && x.TimeO2End != nil {
		return *x.TimeO2End
	}
	return 0
}

func (x *RunUpdateRequest) GetTimeTrgStart() int64 {
	if x != nil && x.TimeTrgStart != nil {
		return *x.TimeTrgStart
	}
	return 0
}

func (x *RunUpdateRequest) GetTimeTrgEnd() int64 {
	if x != nil && x.TimeTrgEnd != nil {
		return *x.TimeTrgEnd
	}
	return 0
}

func (x *RunUpdateRequest) GetTriggerValue() string {
	if x != nil && x.TriggerValue != nil {
		return *x.TriggerValue
	}
	return ""
}

func (x *RunUpdateRequest) GetPdpConfigOption() string {
	if x != nil && x.PdpConfigOption != nil {
		return *x.PdpConfigOption
	}
	return ""
}

func (x *RunUpdateRequest) GetPdpTopologyDescriptionLibraryFile() string {
	if x != nil && x.PdpTopologyDescriptionLibraryFile != nil {
		return *x.PdpTopologyDescriptionLibraryFile
	}
	return ""
}

func (x *RunUpdateRequest) GetTfbDdMode() string {
	if x != nil && x.TfbDdMode != nil {
		return *x.TfbDdMode
	}
	return ""
}

func (x *RunUpdateRequest) GetLhcPeriod() string {
	if x != nil && x.LhcPeriod != nil {
		return *x.LhcPeriod
	}
	return ""
}

func (x *RunUpdateRequest) GetOdcTopologyFullName() string {
	if x != nil && x.OdcTopologyFullName != nil {
		return *x.OdcTopologyFullName
	}
	return ""
}

func (x *RunUpdateRequest) GetPdpWorkflowParameters() string {
	if x != nil && x.PdpWorkflowParameters != nil {
		return *x.PdpWorkflowParameters
	}
	return ""
}

func (x *RunUpdateRequest) GetPdpBeamType() string {
	if x != nil && x.PdpBeamType != nil {
		return *x.PdpBeamType
	}
	return ""
}

func (x *RunUpdateRequest) GetReadoutCfgUri() string {
	if x != nil && x.ReadoutCfgUri != nil {
		return *x.ReadoutCfgUri
	}
	return ""
}

var File_protos_run_proto protoreflect.FileDescriptor

var file_protos_run_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x72, 0x75, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x6f, 0x32, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x6b, 0x65, 0x65, 0x70, 0x69,
	0x6e, 0x67, 0x1a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbb, 0x03, 0x0a, 0x12, 0x52, 0x75, 0x6e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x45, 0x70, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6e, 0x45, 0x70, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x46,
	0x6c, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6e, 0x46, 0x6c, 0x70, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x75, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x31,
	0x0a, 0x07, 0x72, 0x75, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x6f, 0x32, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x6b, 0x65, 0x65, 0x70, 0x69, 0x6e, 0x67,
	0x2e, 0x52, 0x75, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x64, 0x5f, 0x66, 0x6c, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x64, 0x64, 0x46, 0x6c, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x63, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x64, 0x63, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x70,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x65, 0x70, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x65, 0x70, 0x6e, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x70, 0x6e, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x12, 0x35,
	0x0a, 0x13, 0x6f, 0x64, 0x63, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x46, 0x75, 0x6c,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x13, 0x6f,
	0x64, 0x63, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x09, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6f, 0x32, 0x2e, 0x62, 0x6f,
	0x6f, 0x6b, 0x6b, 0x65, 0x65, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x09, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x42, 0x16, 0x0a,
	0x14, 0x5f, 0x6f, 0x64, 0x63, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x46, 0x75, 0x6c,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xf6, 0x06, 0x0a, 0x10, 0x52, 0x75, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x75,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72,
	0x75, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65,
	0x4f, 0x32, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x0b, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x32, 0x53, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x21, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x32, 0x45, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x01, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x32, 0x45, 0x6e, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x72, 0x67, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65,
	0x54, 0x72, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x54, 0x72, 0x67, 0x45, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x03, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x72, 0x67, 0x45, 0x6e, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x27, 0x0a, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x70, 0x64, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x0f, 0x70, 0x64, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x51, 0x0a, 0x21, 0x70, 0x64, 0x70, 0x54,
	0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x21, 0x70, 0x64, 0x70, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x74,
	0x66, 0x62, 0x44, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07,
	0x52, 0x09, 0x74, 0x66, 0x62, 0x44, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x09, 0x6c, 0x68, 0x63, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x08, 0x52, 0x09, 0x6c, 0x68, 0x63, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x35, 0x0a, 0x13, 0x6f, 0x64, 0x63, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
	0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09,
	0x52, 0x13, 0x6f, 0x64, 0x63, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x46, 0x75, 0x6c,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x15, 0x70, 0x64, 0x70, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x15, 0x70, 0x64, 0x70, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x70, 0x64, 0x70, 0x42, 0x65, 0x61, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x0b, 0x70, 0x64, 0x70, 0x42,
	0x65, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x72, 0x65,
	0x61, 0x64, 0x6f, 0x75, 0x74, 0x43, 0x66, 0x67, 0x55, 0x72, 0x69, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0c, 0x52, 0x0d, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x43, 0x66, 0x67, 0x55,
	0x72, 0x69, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x32,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x32,
	0x45, 0x6e, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x72, 0x67, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x72, 0x67,
	0x45, 0x6e, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x70, 0x64, 0x70, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x24, 0x0a, 0x22, 0x5f, 0x70, 0x64, 0x70,
	0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x74, 0x66, 0x62, 0x44, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x6c, 0x68, 0x63, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x6f,
	0x64, 0x63, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x70, 0x64, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x70, 0x64, 0x70, 0x42, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x43, 0x66, 0x67, 0x55, 0x72, 0x69, 0x32, 0x90,
	0x01, 0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x6f, 0x32, 0x2e, 0x62, 0x6f, 0x6f,
	0x6b, 0x6b, 0x65, 0x65, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6f, 0x32,
	0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x6b, 0x65, 0x65, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x75, 0x6e,
	0x12, 0x3f, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x6f, 0x32, 0x2e,
	0x62, 0x6f, 0x6f, 0x6b, 0x6b, 0x65, 0x65, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6f,
	0x32, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x6b, 0x65, 0x65, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x75,
	0x6e, 0x42, 0x4a, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x41, 0x6c, 0x69, 0x63, 0x65, 0x4f, 0x32, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x6b, 0x65, 0x65, 0x70, 0x69, 0x6e,
	0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x3b, 0x62, 0x6b, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_run_proto_rawDescOnce sync.Once
	file_protos_run_proto_rawDescData = file_protos_run_proto_rawDesc
)

func file_protos_run_proto_rawDescGZIP() []byte {
	file_protos_run_proto_rawDescOnce.Do(func() {
		file_protos_run_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_run_proto_rawDescData)
	})
	return file_protos_run_proto_rawDescData
}

var file_protos_run_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_protos_run_proto_goTypes = []interface{}{
	(*RunCreationRequest)(nil), // 0: o2.bookkeeping.RunCreationRequest
	(*RunUpdateRequest)(nil),   // 1: o2.bookkeeping.RunUpdateRequest
	(RunType)(0),               // 2: o2.bookkeeping.RunType
	(Detector)(0),              // 3: o2.bookkeeping.Detector
	(*Run)(nil),                // 4: o2.bookkeeping.Run
}
var file_protos_run_proto_depIdxs = []int32{
	2, // 0: o2.bookkeeping.RunCreationRequest.runType:type_name -> o2.bookkeeping.RunType
	3, // 1: o2.bookkeeping.RunCreationRequest.detectors:type_name -> o2.bookkeeping.Detector
	0, // 2: o2.bookkeeping.RunService.Create:input_type -> o2.bookkeeping.RunCreationRequest
	1, // 3: o2.bookkeeping.RunService.Update:input_type -> o2.bookkeeping.RunUpdateRequest
	4, // 4: o2.bookkeeping.RunService.Create:output_type -> o2.bookkeeping.Run
	4, // 5: o2.bookkeeping.RunService.Update:output_type -> o2.bookkeeping.Run
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_protos_run_proto_init() }
func file_protos_run_proto_init() {
	if File_protos_run_proto != nil {
		return
	}
	file_protos_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protos_run_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunCreationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_run_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_run_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_protos_run_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_run_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_run_proto_goTypes,
		DependencyIndexes: file_protos_run_proto_depIdxs,
		MessageInfos:      file_protos_run_proto_msgTypes,
	}.Build()
	File_protos_run_proto = out.File
	file_protos_run_proto_rawDesc = nil
	file_protos_run_proto_goTypes = nil
	file_protos_run_proto_depIdxs = nil
}
