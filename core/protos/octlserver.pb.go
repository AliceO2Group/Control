// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: protos/octlserver.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusUpdate_Level int32

const (
	StatusUpdate_DEBUG   StatusUpdate_Level = 0
	StatusUpdate_INFO    StatusUpdate_Level = 1
	StatusUpdate_WARNING StatusUpdate_Level = 2
	StatusUpdate_ERROR   StatusUpdate_Level = 3
)

var StatusUpdate_Level_name = map[int32]string{
	0: "DEBUG",
	1: "INFO",
	2: "WARNING",
	3: "ERROR",
}
var StatusUpdate_Level_value = map[string]int32{
	"DEBUG":   0,
	"INFO":    1,
	"WARNING": 2,
	"ERROR":   3,
}

func (x StatusUpdate_Level) String() string {
	return proto.EnumName(StatusUpdate_Level_name, int32(x))
}
func (StatusUpdate_Level) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{3, 0}
}

type ControlEnvironmentRequest_Optype int32

const (
	ControlEnvironmentRequest_NOOP           ControlEnvironmentRequest_Optype = 0
	ControlEnvironmentRequest_START_ACTIVITY ControlEnvironmentRequest_Optype = 1
	ControlEnvironmentRequest_STOP_ACTIVITY  ControlEnvironmentRequest_Optype = 2
	ControlEnvironmentRequest_CONFIGURE      ControlEnvironmentRequest_Optype = 3
	ControlEnvironmentRequest_EXIT           ControlEnvironmentRequest_Optype = 4
	ControlEnvironmentRequest_GO_ERROR       ControlEnvironmentRequest_Optype = 5
)

var ControlEnvironmentRequest_Optype_name = map[int32]string{
	0: "NOOP",
	1: "START_ACTIVITY",
	2: "STOP_ACTIVITY",
	3: "CONFIGURE",
	4: "EXIT",
	5: "GO_ERROR",
}
var ControlEnvironmentRequest_Optype_value = map[string]int32{
	"NOOP":           0,
	"START_ACTIVITY": 1,
	"STOP_ACTIVITY":  2,
	"CONFIGURE":      3,
	"EXIT":           4,
	"GO_ERROR":       5,
}

func (x ControlEnvironmentRequest_Optype) String() string {
	return proto.EnumName(ControlEnvironmentRequest_Optype_name, int32(x))
}
func (ControlEnvironmentRequest_Optype) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{15, 0}
}

type EnvironmentOperation_Optype int32

const (
	EnvironmentOperation_NOOP        EnvironmentOperation_Optype = 0
	EnvironmentOperation_REMOVE_ROLE EnvironmentOperation_Optype = 3
	EnvironmentOperation_ADD_ROLE    EnvironmentOperation_Optype = 4
)

var EnvironmentOperation_Optype_name = map[int32]string{
	0: "NOOP",
	3: "REMOVE_ROLE",
	4: "ADD_ROLE",
}
var EnvironmentOperation_Optype_value = map[string]int32{
	"NOOP":        0,
	"REMOVE_ROLE": 3,
	"ADD_ROLE":    4,
}

func (x EnvironmentOperation_Optype) String() string {
	return proto.EnumName(EnvironmentOperation_Optype_name, int32(x))
}
func (EnvironmentOperation_Optype) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{18, 0}
}

type Event_MesosHeartbeat struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event_MesosHeartbeat) Reset()         { *m = Event_MesosHeartbeat{} }
func (m *Event_MesosHeartbeat) String() string { return proto.CompactTextString(m) }
func (*Event_MesosHeartbeat) ProtoMessage()    {}
func (*Event_MesosHeartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{0}
}
func (m *Event_MesosHeartbeat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Event_MesosHeartbeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Event_MesosHeartbeat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Event_MesosHeartbeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event_MesosHeartbeat.Merge(dst, src)
}
func (m *Event_MesosHeartbeat) XXX_Size() int {
	return m.Size()
}
func (m *Event_MesosHeartbeat) XXX_DiscardUnknown() {
	xxx_messageInfo_Event_MesosHeartbeat.DiscardUnknown(m)
}

var xxx_messageInfo_Event_MesosHeartbeat proto.InternalMessageInfo

type StatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusRequest) Reset()         { *m = StatusRequest{} }
func (m *StatusRequest) String() string { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()    {}
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{1}
}
func (m *StatusRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatusRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *StatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusRequest.Merge(dst, src)
}
func (m *StatusRequest) XXX_Size() int {
	return m.Size()
}
func (m *StatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusRequest proto.InternalMessageInfo

type StatusReply struct {
	State                string          `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	StatusUpdates        []*StatusUpdate `protobuf:"bytes,2,rep,name=statusUpdates" json:"statusUpdates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StatusReply) Reset()         { *m = StatusReply{} }
func (m *StatusReply) String() string { return proto.CompactTextString(m) }
func (*StatusReply) ProtoMessage()    {}
func (*StatusReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{2}
}
func (m *StatusReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatusReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatusReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *StatusReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusReply.Merge(dst, src)
}
func (m *StatusReply) XXX_Size() int {
	return m.Size()
}
func (m *StatusReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusReply.DiscardUnknown(m)
}

var xxx_messageInfo_StatusReply proto.InternalMessageInfo

func (m *StatusReply) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *StatusReply) GetStatusUpdates() []*StatusUpdate {
	if m != nil {
		return m.StatusUpdates
	}
	return nil
}

type StatusUpdate struct {
	Level StatusUpdate_Level `protobuf:"varint,1,opt,name=level,proto3,enum=octl.StatusUpdate_Level" json:"level,omitempty"`
	// Types that are valid to be assigned to Event:
	//	*StatusUpdate_MesosHeartbeat
	Event                isStatusUpdate_Event `protobuf_oneof:"Event"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StatusUpdate) Reset()         { *m = StatusUpdate{} }
func (m *StatusUpdate) String() string { return proto.CompactTextString(m) }
func (*StatusUpdate) ProtoMessage()    {}
func (*StatusUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{3}
}
func (m *StatusUpdate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatusUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatusUpdate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *StatusUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusUpdate.Merge(dst, src)
}
func (m *StatusUpdate) XXX_Size() int {
	return m.Size()
}
func (m *StatusUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_StatusUpdate proto.InternalMessageInfo

type isStatusUpdate_Event interface {
	isStatusUpdate_Event()
	MarshalTo([]byte) (int, error)
	Size() int
}

type StatusUpdate_MesosHeartbeat struct {
	MesosHeartbeat *Event_MesosHeartbeat `protobuf:"bytes,2,opt,name=mesosHeartbeat,oneof"`
}

func (*StatusUpdate_MesosHeartbeat) isStatusUpdate_Event() {}

func (m *StatusUpdate) GetEvent() isStatusUpdate_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *StatusUpdate) GetLevel() StatusUpdate_Level {
	if m != nil {
		return m.Level
	}
	return StatusUpdate_DEBUG
}

func (m *StatusUpdate) GetMesosHeartbeat() *Event_MesosHeartbeat {
	if x, ok := m.GetEvent().(*StatusUpdate_MesosHeartbeat); ok {
		return x.MesosHeartbeat
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*StatusUpdate) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _StatusUpdate_OneofMarshaler, _StatusUpdate_OneofUnmarshaler, _StatusUpdate_OneofSizer, []interface{}{
		(*StatusUpdate_MesosHeartbeat)(nil),
	}
}

func _StatusUpdate_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*StatusUpdate)
	// Event
	switch x := m.Event.(type) {
	case *StatusUpdate_MesosHeartbeat:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MesosHeartbeat); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("StatusUpdate.Event has unexpected type %T", x)
	}
	return nil
}

func _StatusUpdate_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*StatusUpdate)
	switch tag {
	case 2: // Event.mesosHeartbeat
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_MesosHeartbeat)
		err := b.DecodeMessage(msg)
		m.Event = &StatusUpdate_MesosHeartbeat{msg}
		return true, err
	default:
		return false, nil
	}
}

func _StatusUpdate_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*StatusUpdate)
	// Event
	switch x := m.Event.(type) {
	case *StatusUpdate_MesosHeartbeat:
		s := proto.Size(x.MesosHeartbeat)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GetFrameworkInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFrameworkInfoRequest) Reset()         { *m = GetFrameworkInfoRequest{} }
func (m *GetFrameworkInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetFrameworkInfoRequest) ProtoMessage()    {}
func (*GetFrameworkInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{4}
}
func (m *GetFrameworkInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetFrameworkInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetFrameworkInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetFrameworkInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFrameworkInfoRequest.Merge(dst, src)
}
func (m *GetFrameworkInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetFrameworkInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFrameworkInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFrameworkInfoRequest proto.InternalMessageInfo

type GetFrameworkInfoReply struct {
	FrameworkId          string   `protobuf:"bytes,1,opt,name=frameworkId,proto3" json:"frameworkId,omitempty"`
	EnvironmentsCount    int32    `protobuf:"varint,2,opt,name=environmentsCount,proto3" json:"environmentsCount,omitempty"`
	TasksCount           int32    `protobuf:"varint,3,opt,name=tasksCount,proto3" json:"tasksCount,omitempty"`
	State                string   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFrameworkInfoReply) Reset()         { *m = GetFrameworkInfoReply{} }
func (m *GetFrameworkInfoReply) String() string { return proto.CompactTextString(m) }
func (*GetFrameworkInfoReply) ProtoMessage()    {}
func (*GetFrameworkInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{5}
}
func (m *GetFrameworkInfoReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetFrameworkInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetFrameworkInfoReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetFrameworkInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFrameworkInfoReply.Merge(dst, src)
}
func (m *GetFrameworkInfoReply) XXX_Size() int {
	return m.Size()
}
func (m *GetFrameworkInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFrameworkInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetFrameworkInfoReply proto.InternalMessageInfo

func (m *GetFrameworkInfoReply) GetFrameworkId() string {
	if m != nil {
		return m.FrameworkId
	}
	return ""
}

func (m *GetFrameworkInfoReply) GetEnvironmentsCount() int32 {
	if m != nil {
		return m.EnvironmentsCount
	}
	return 0
}

func (m *GetFrameworkInfoReply) GetTasksCount() int32 {
	if m != nil {
		return m.TasksCount
	}
	return 0
}

func (m *GetFrameworkInfoReply) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type TeardownRequest struct {
	Reason               string   `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeardownRequest) Reset()         { *m = TeardownRequest{} }
func (m *TeardownRequest) String() string { return proto.CompactTextString(m) }
func (*TeardownRequest) ProtoMessage()    {}
func (*TeardownRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{6}
}
func (m *TeardownRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TeardownRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TeardownRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TeardownRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeardownRequest.Merge(dst, src)
}
func (m *TeardownRequest) XXX_Size() int {
	return m.Size()
}
func (m *TeardownRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TeardownRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TeardownRequest proto.InternalMessageInfo

func (m *TeardownRequest) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type TeardownReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeardownReply) Reset()         { *m = TeardownReply{} }
func (m *TeardownReply) String() string { return proto.CompactTextString(m) }
func (*TeardownReply) ProtoMessage()    {}
func (*TeardownReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{7}
}
func (m *TeardownReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TeardownReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TeardownReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TeardownReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeardownReply.Merge(dst, src)
}
func (m *TeardownReply) XXX_Size() int {
	return m.Size()
}
func (m *TeardownReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TeardownReply.DiscardUnknown(m)
}

var xxx_messageInfo_TeardownReply proto.InternalMessageInfo

type GetEnvironmentsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEnvironmentsRequest) Reset()         { *m = GetEnvironmentsRequest{} }
func (m *GetEnvironmentsRequest) String() string { return proto.CompactTextString(m) }
func (*GetEnvironmentsRequest) ProtoMessage()    {}
func (*GetEnvironmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{8}
}
func (m *GetEnvironmentsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetEnvironmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetEnvironmentsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetEnvironmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEnvironmentsRequest.Merge(dst, src)
}
func (m *GetEnvironmentsRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetEnvironmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEnvironmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEnvironmentsRequest proto.InternalMessageInfo

type GetEnvironmentsReply struct {
	FrameworkId          string             `protobuf:"bytes,1,opt,name=frameworkId,proto3" json:"frameworkId,omitempty"`
	Environments         []*EnvironmentInfo `protobuf:"bytes,2,rep,name=environments" json:"environments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetEnvironmentsReply) Reset()         { *m = GetEnvironmentsReply{} }
func (m *GetEnvironmentsReply) String() string { return proto.CompactTextString(m) }
func (*GetEnvironmentsReply) ProtoMessage()    {}
func (*GetEnvironmentsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{9}
}
func (m *GetEnvironmentsReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetEnvironmentsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetEnvironmentsReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetEnvironmentsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEnvironmentsReply.Merge(dst, src)
}
func (m *GetEnvironmentsReply) XXX_Size() int {
	return m.Size()
}
func (m *GetEnvironmentsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEnvironmentsReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetEnvironmentsReply proto.InternalMessageInfo

func (m *GetEnvironmentsReply) GetFrameworkId() string {
	if m != nil {
		return m.FrameworkId
	}
	return ""
}

func (m *GetEnvironmentsReply) GetEnvironments() []*EnvironmentInfo {
	if m != nil {
		return m.Environments
	}
	return nil
}

type EnvironmentInfo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedWhen          string   `protobuf:"bytes,2,opt,name=createdWhen,proto3" json:"createdWhen,omitempty"`
	State                string   `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Tasks                []string `protobuf:"bytes,4,rep,name=tasks" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnvironmentInfo) Reset()         { *m = EnvironmentInfo{} }
func (m *EnvironmentInfo) String() string { return proto.CompactTextString(m) }
func (*EnvironmentInfo) ProtoMessage()    {}
func (*EnvironmentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{10}
}
func (m *EnvironmentInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EnvironmentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EnvironmentInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *EnvironmentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvironmentInfo.Merge(dst, src)
}
func (m *EnvironmentInfo) XXX_Size() int {
	return m.Size()
}
func (m *EnvironmentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvironmentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EnvironmentInfo proto.InternalMessageInfo

func (m *EnvironmentInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EnvironmentInfo) GetCreatedWhen() string {
	if m != nil {
		return m.CreatedWhen
	}
	return ""
}

func (m *EnvironmentInfo) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *EnvironmentInfo) GetTasks() []string {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type NewEnvironmentRequest struct {
	Workflow             string   `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewEnvironmentRequest) Reset()         { *m = NewEnvironmentRequest{} }
func (m *NewEnvironmentRequest) String() string { return proto.CompactTextString(m) }
func (*NewEnvironmentRequest) ProtoMessage()    {}
func (*NewEnvironmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{11}
}
func (m *NewEnvironmentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NewEnvironmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NewEnvironmentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *NewEnvironmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewEnvironmentRequest.Merge(dst, src)
}
func (m *NewEnvironmentRequest) XXX_Size() int {
	return m.Size()
}
func (m *NewEnvironmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewEnvironmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewEnvironmentRequest proto.InternalMessageInfo

func (m *NewEnvironmentRequest) GetWorkflow() string {
	if m != nil {
		return m.Workflow
	}
	return ""
}

type NewEnvironmentReply struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State                string   `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewEnvironmentReply) Reset()         { *m = NewEnvironmentReply{} }
func (m *NewEnvironmentReply) String() string { return proto.CompactTextString(m) }
func (*NewEnvironmentReply) ProtoMessage()    {}
func (*NewEnvironmentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{12}
}
func (m *NewEnvironmentReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NewEnvironmentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NewEnvironmentReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *NewEnvironmentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewEnvironmentReply.Merge(dst, src)
}
func (m *NewEnvironmentReply) XXX_Size() int {
	return m.Size()
}
func (m *NewEnvironmentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NewEnvironmentReply.DiscardUnknown(m)
}

var xxx_messageInfo_NewEnvironmentReply proto.InternalMessageInfo

func (m *NewEnvironmentReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NewEnvironmentReply) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type GetEnvironmentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEnvironmentRequest) Reset()         { *m = GetEnvironmentRequest{} }
func (m *GetEnvironmentRequest) String() string { return proto.CompactTextString(m) }
func (*GetEnvironmentRequest) ProtoMessage()    {}
func (*GetEnvironmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{13}
}
func (m *GetEnvironmentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetEnvironmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetEnvironmentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetEnvironmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEnvironmentRequest.Merge(dst, src)
}
func (m *GetEnvironmentRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetEnvironmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEnvironmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEnvironmentRequest proto.InternalMessageInfo

func (m *GetEnvironmentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetEnvironmentReply struct {
	Environment          *EnvironmentInfo `protobuf:"bytes,1,opt,name=environment" json:"environment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetEnvironmentReply) Reset()         { *m = GetEnvironmentReply{} }
func (m *GetEnvironmentReply) String() string { return proto.CompactTextString(m) }
func (*GetEnvironmentReply) ProtoMessage()    {}
func (*GetEnvironmentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{14}
}
func (m *GetEnvironmentReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetEnvironmentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetEnvironmentReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetEnvironmentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEnvironmentReply.Merge(dst, src)
}
func (m *GetEnvironmentReply) XXX_Size() int {
	return m.Size()
}
func (m *GetEnvironmentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEnvironmentReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetEnvironmentReply proto.InternalMessageInfo

func (m *GetEnvironmentReply) GetEnvironment() *EnvironmentInfo {
	if m != nil {
		return m.Environment
	}
	return nil
}

type ControlEnvironmentRequest struct {
	Id                   string                           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 ControlEnvironmentRequest_Optype `protobuf:"varint,2,opt,name=type,proto3,enum=octl.ControlEnvironmentRequest_Optype" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ControlEnvironmentRequest) Reset()         { *m = ControlEnvironmentRequest{} }
func (m *ControlEnvironmentRequest) String() string { return proto.CompactTextString(m) }
func (*ControlEnvironmentRequest) ProtoMessage()    {}
func (*ControlEnvironmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{15}
}
func (m *ControlEnvironmentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControlEnvironmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ControlEnvironmentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ControlEnvironmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlEnvironmentRequest.Merge(dst, src)
}
func (m *ControlEnvironmentRequest) XXX_Size() int {
	return m.Size()
}
func (m *ControlEnvironmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlEnvironmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ControlEnvironmentRequest proto.InternalMessageInfo

func (m *ControlEnvironmentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ControlEnvironmentRequest) GetType() ControlEnvironmentRequest_Optype {
	if m != nil {
		return m.Type
	}
	return ControlEnvironmentRequest_NOOP
}

type ControlEnvironmentReply struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State                string   `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlEnvironmentReply) Reset()         { *m = ControlEnvironmentReply{} }
func (m *ControlEnvironmentReply) String() string { return proto.CompactTextString(m) }
func (*ControlEnvironmentReply) ProtoMessage()    {}
func (*ControlEnvironmentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{16}
}
func (m *ControlEnvironmentReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControlEnvironmentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ControlEnvironmentReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ControlEnvironmentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlEnvironmentReply.Merge(dst, src)
}
func (m *ControlEnvironmentReply) XXX_Size() int {
	return m.Size()
}
func (m *ControlEnvironmentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlEnvironmentReply.DiscardUnknown(m)
}

var xxx_messageInfo_ControlEnvironmentReply proto.InternalMessageInfo

func (m *ControlEnvironmentReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ControlEnvironmentReply) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type ModifyEnvironmentRequest struct {
	Id                   string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Operations           []*EnvironmentOperation `protobuf:"bytes,2,rep,name=operations" json:"operations,omitempty"`
	ReconfigureAll       bool                    `protobuf:"varint,3,opt,name=reconfigureAll,proto3" json:"reconfigureAll,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ModifyEnvironmentRequest) Reset()         { *m = ModifyEnvironmentRequest{} }
func (m *ModifyEnvironmentRequest) String() string { return proto.CompactTextString(m) }
func (*ModifyEnvironmentRequest) ProtoMessage()    {}
func (*ModifyEnvironmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{17}
}
func (m *ModifyEnvironmentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModifyEnvironmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModifyEnvironmentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ModifyEnvironmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModifyEnvironmentRequest.Merge(dst, src)
}
func (m *ModifyEnvironmentRequest) XXX_Size() int {
	return m.Size()
}
func (m *ModifyEnvironmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModifyEnvironmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModifyEnvironmentRequest proto.InternalMessageInfo

func (m *ModifyEnvironmentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ModifyEnvironmentRequest) GetOperations() []*EnvironmentOperation {
	if m != nil {
		return m.Operations
	}
	return nil
}

func (m *ModifyEnvironmentRequest) GetReconfigureAll() bool {
	if m != nil {
		return m.ReconfigureAll
	}
	return false
}

type EnvironmentOperation struct {
	Type                 EnvironmentOperation_Optype `protobuf:"varint,1,opt,name=type,proto3,enum=octl.EnvironmentOperation_Optype" json:"type,omitempty"`
	RoleName             string                      `protobuf:"bytes,2,opt,name=roleName,proto3" json:"roleName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *EnvironmentOperation) Reset()         { *m = EnvironmentOperation{} }
func (m *EnvironmentOperation) String() string { return proto.CompactTextString(m) }
func (*EnvironmentOperation) ProtoMessage()    {}
func (*EnvironmentOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{18}
}
func (m *EnvironmentOperation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EnvironmentOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EnvironmentOperation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *EnvironmentOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvironmentOperation.Merge(dst, src)
}
func (m *EnvironmentOperation) XXX_Size() int {
	return m.Size()
}
func (m *EnvironmentOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvironmentOperation.DiscardUnknown(m)
}

var xxx_messageInfo_EnvironmentOperation proto.InternalMessageInfo

func (m *EnvironmentOperation) GetType() EnvironmentOperation_Optype {
	if m != nil {
		return m.Type
	}
	return EnvironmentOperation_NOOP
}

func (m *EnvironmentOperation) GetRoleName() string {
	if m != nil {
		return m.RoleName
	}
	return ""
}

type ModifyEnvironmentReply struct {
	FailedOperations     []*EnvironmentOperation `protobuf:"bytes,1,rep,name=failedOperations" json:"failedOperations,omitempty"`
	Id                   string                  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	State                string                  `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ModifyEnvironmentReply) Reset()         { *m = ModifyEnvironmentReply{} }
func (m *ModifyEnvironmentReply) String() string { return proto.CompactTextString(m) }
func (*ModifyEnvironmentReply) ProtoMessage()    {}
func (*ModifyEnvironmentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{19}
}
func (m *ModifyEnvironmentReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModifyEnvironmentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModifyEnvironmentReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ModifyEnvironmentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModifyEnvironmentReply.Merge(dst, src)
}
func (m *ModifyEnvironmentReply) XXX_Size() int {
	return m.Size()
}
func (m *ModifyEnvironmentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ModifyEnvironmentReply.DiscardUnknown(m)
}

var xxx_messageInfo_ModifyEnvironmentReply proto.InternalMessageInfo

func (m *ModifyEnvironmentReply) GetFailedOperations() []*EnvironmentOperation {
	if m != nil {
		return m.FailedOperations
	}
	return nil
}

func (m *ModifyEnvironmentReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ModifyEnvironmentReply) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type DestroyEnvironmentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DestroyEnvironmentRequest) Reset()         { *m = DestroyEnvironmentRequest{} }
func (m *DestroyEnvironmentRequest) String() string { return proto.CompactTextString(m) }
func (*DestroyEnvironmentRequest) ProtoMessage()    {}
func (*DestroyEnvironmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{20}
}
func (m *DestroyEnvironmentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DestroyEnvironmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DestroyEnvironmentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DestroyEnvironmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DestroyEnvironmentRequest.Merge(dst, src)
}
func (m *DestroyEnvironmentRequest) XXX_Size() int {
	return m.Size()
}
func (m *DestroyEnvironmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DestroyEnvironmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DestroyEnvironmentRequest proto.InternalMessageInfo

func (m *DestroyEnvironmentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DestroyEnvironmentReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DestroyEnvironmentReply) Reset()         { *m = DestroyEnvironmentReply{} }
func (m *DestroyEnvironmentReply) String() string { return proto.CompactTextString(m) }
func (*DestroyEnvironmentReply) ProtoMessage()    {}
func (*DestroyEnvironmentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{21}
}
func (m *DestroyEnvironmentReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DestroyEnvironmentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DestroyEnvironmentReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DestroyEnvironmentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DestroyEnvironmentReply.Merge(dst, src)
}
func (m *DestroyEnvironmentReply) XXX_Size() int {
	return m.Size()
}
func (m *DestroyEnvironmentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DestroyEnvironmentReply.DiscardUnknown(m)
}

var xxx_messageInfo_DestroyEnvironmentReply proto.InternalMessageInfo

type GetTasksRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTasksRequest) Reset()         { *m = GetTasksRequest{} }
func (m *GetTasksRequest) String() string { return proto.CompactTextString(m) }
func (*GetTasksRequest) ProtoMessage()    {}
func (*GetTasksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{22}
}
func (m *GetTasksRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTasksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetTasksRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetTasksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTasksRequest.Merge(dst, src)
}
func (m *GetTasksRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetTasksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTasksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTasksRequest proto.InternalMessageInfo

type GetTasksReply struct {
	Tasks                []*TaskInfo `protobuf:"bytes,1,rep,name=tasks" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetTasksReply) Reset()         { *m = GetTasksReply{} }
func (m *GetTasksReply) String() string { return proto.CompactTextString(m) }
func (*GetTasksReply) ProtoMessage()    {}
func (*GetTasksReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{23}
}
func (m *GetTasksReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTasksReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetTasksReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetTasksReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTasksReply.Merge(dst, src)
}
func (m *GetTasksReply) XXX_Size() int {
	return m.Size()
}
func (m *GetTasksReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTasksReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetTasksReply proto.InternalMessageInfo

func (m *GetTasksReply) GetTasks() []*TaskInfo {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type TaskInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Locked               bool     `protobuf:"varint,2,opt,name=locked,proto3" json:"locked,omitempty"`
	Hostname             string   `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskInfo) Reset()         { *m = TaskInfo{} }
func (m *TaskInfo) String() string { return proto.CompactTextString(m) }
func (*TaskInfo) ProtoMessage()    {}
func (*TaskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_octlserver_c952064239d7931c, []int{24}
}
func (m *TaskInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TaskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TaskInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TaskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskInfo.Merge(dst, src)
}
func (m *TaskInfo) XXX_Size() int {
	return m.Size()
}
func (m *TaskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TaskInfo proto.InternalMessageInfo

func (m *TaskInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TaskInfo) GetLocked() bool {
	if m != nil {
		return m.Locked
	}
	return false
}

func (m *TaskInfo) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func init() {
	proto.RegisterType((*Event_MesosHeartbeat)(nil), "octl.Event_MesosHeartbeat")
	proto.RegisterType((*StatusRequest)(nil), "octl.StatusRequest")
	proto.RegisterType((*StatusReply)(nil), "octl.StatusReply")
	proto.RegisterType((*StatusUpdate)(nil), "octl.StatusUpdate")
	proto.RegisterType((*GetFrameworkInfoRequest)(nil), "octl.GetFrameworkInfoRequest")
	proto.RegisterType((*GetFrameworkInfoReply)(nil), "octl.GetFrameworkInfoReply")
	proto.RegisterType((*TeardownRequest)(nil), "octl.TeardownRequest")
	proto.RegisterType((*TeardownReply)(nil), "octl.TeardownReply")
	proto.RegisterType((*GetEnvironmentsRequest)(nil), "octl.GetEnvironmentsRequest")
	proto.RegisterType((*GetEnvironmentsReply)(nil), "octl.GetEnvironmentsReply")
	proto.RegisterType((*EnvironmentInfo)(nil), "octl.EnvironmentInfo")
	proto.RegisterType((*NewEnvironmentRequest)(nil), "octl.NewEnvironmentRequest")
	proto.RegisterType((*NewEnvironmentReply)(nil), "octl.NewEnvironmentReply")
	proto.RegisterType((*GetEnvironmentRequest)(nil), "octl.GetEnvironmentRequest")
	proto.RegisterType((*GetEnvironmentReply)(nil), "octl.GetEnvironmentReply")
	proto.RegisterType((*ControlEnvironmentRequest)(nil), "octl.ControlEnvironmentRequest")
	proto.RegisterType((*ControlEnvironmentReply)(nil), "octl.ControlEnvironmentReply")
	proto.RegisterType((*ModifyEnvironmentRequest)(nil), "octl.ModifyEnvironmentRequest")
	proto.RegisterType((*EnvironmentOperation)(nil), "octl.EnvironmentOperation")
	proto.RegisterType((*ModifyEnvironmentReply)(nil), "octl.ModifyEnvironmentReply")
	proto.RegisterType((*DestroyEnvironmentRequest)(nil), "octl.DestroyEnvironmentRequest")
	proto.RegisterType((*DestroyEnvironmentReply)(nil), "octl.DestroyEnvironmentReply")
	proto.RegisterType((*GetTasksRequest)(nil), "octl.GetTasksRequest")
	proto.RegisterType((*GetTasksReply)(nil), "octl.GetTasksReply")
	proto.RegisterType((*TaskInfo)(nil), "octl.TaskInfo")
	proto.RegisterEnum("octl.StatusUpdate_Level", StatusUpdate_Level_name, StatusUpdate_Level_value)
	proto.RegisterEnum("octl.ControlEnvironmentRequest_Optype", ControlEnvironmentRequest_Optype_name, ControlEnvironmentRequest_Optype_value)
	proto.RegisterEnum("octl.EnvironmentOperation_Optype", EnvironmentOperation_Optype_name, EnvironmentOperation_Optype_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Octl service

type OctlClient interface {
	TrackStatus(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (Octl_TrackStatusClient, error)
	GetFrameworkInfo(ctx context.Context, in *GetFrameworkInfoRequest, opts ...grpc.CallOption) (*GetFrameworkInfoReply, error)
	Teardown(ctx context.Context, in *TeardownRequest, opts ...grpc.CallOption) (*TeardownReply, error)
	GetEnvironments(ctx context.Context, in *GetEnvironmentsRequest, opts ...grpc.CallOption) (*GetEnvironmentsReply, error)
	NewEnvironment(ctx context.Context, in *NewEnvironmentRequest, opts ...grpc.CallOption) (*NewEnvironmentReply, error)
	GetEnvironment(ctx context.Context, in *GetEnvironmentRequest, opts ...grpc.CallOption) (*GetEnvironmentReply, error)
	ControlEnvironment(ctx context.Context, in *ControlEnvironmentRequest, opts ...grpc.CallOption) (*ControlEnvironmentReply, error)
	ModifyEnvironment(ctx context.Context, in *ModifyEnvironmentRequest, opts ...grpc.CallOption) (*ModifyEnvironmentReply, error)
	DestroyEnvironment(ctx context.Context, in *DestroyEnvironmentRequest, opts ...grpc.CallOption) (*DestroyEnvironmentReply, error)
	GetTasks(ctx context.Context, in *GetTasksRequest, opts ...grpc.CallOption) (*GetTasksReply, error)
}

type octlClient struct {
	cc *grpc.ClientConn
}

func NewOctlClient(cc *grpc.ClientConn) OctlClient {
	return &octlClient{cc}
}

func (c *octlClient) TrackStatus(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (Octl_TrackStatusClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Octl_serviceDesc.Streams[0], "/octl.Octl/TrackStatus", opts...)
	if err != nil {
		return nil, err
	}
	x := &octlTrackStatusClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Octl_TrackStatusClient interface {
	Recv() (*StatusReply, error)
	grpc.ClientStream
}

type octlTrackStatusClient struct {
	grpc.ClientStream
}

func (x *octlTrackStatusClient) Recv() (*StatusReply, error) {
	m := new(StatusReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *octlClient) GetFrameworkInfo(ctx context.Context, in *GetFrameworkInfoRequest, opts ...grpc.CallOption) (*GetFrameworkInfoReply, error) {
	out := new(GetFrameworkInfoReply)
	err := c.cc.Invoke(ctx, "/octl.Octl/GetFrameworkInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *octlClient) Teardown(ctx context.Context, in *TeardownRequest, opts ...grpc.CallOption) (*TeardownReply, error) {
	out := new(TeardownReply)
	err := c.cc.Invoke(ctx, "/octl.Octl/Teardown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *octlClient) GetEnvironments(ctx context.Context, in *GetEnvironmentsRequest, opts ...grpc.CallOption) (*GetEnvironmentsReply, error) {
	out := new(GetEnvironmentsReply)
	err := c.cc.Invoke(ctx, "/octl.Octl/GetEnvironments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *octlClient) NewEnvironment(ctx context.Context, in *NewEnvironmentRequest, opts ...grpc.CallOption) (*NewEnvironmentReply, error) {
	out := new(NewEnvironmentReply)
	err := c.cc.Invoke(ctx, "/octl.Octl/NewEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *octlClient) GetEnvironment(ctx context.Context, in *GetEnvironmentRequest, opts ...grpc.CallOption) (*GetEnvironmentReply, error) {
	out := new(GetEnvironmentReply)
	err := c.cc.Invoke(ctx, "/octl.Octl/GetEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *octlClient) ControlEnvironment(ctx context.Context, in *ControlEnvironmentRequest, opts ...grpc.CallOption) (*ControlEnvironmentReply, error) {
	out := new(ControlEnvironmentReply)
	err := c.cc.Invoke(ctx, "/octl.Octl/ControlEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *octlClient) ModifyEnvironment(ctx context.Context, in *ModifyEnvironmentRequest, opts ...grpc.CallOption) (*ModifyEnvironmentReply, error) {
	out := new(ModifyEnvironmentReply)
	err := c.cc.Invoke(ctx, "/octl.Octl/ModifyEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *octlClient) DestroyEnvironment(ctx context.Context, in *DestroyEnvironmentRequest, opts ...grpc.CallOption) (*DestroyEnvironmentReply, error) {
	out := new(DestroyEnvironmentReply)
	err := c.cc.Invoke(ctx, "/octl.Octl/DestroyEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *octlClient) GetTasks(ctx context.Context, in *GetTasksRequest, opts ...grpc.CallOption) (*GetTasksReply, error) {
	out := new(GetTasksReply)
	err := c.cc.Invoke(ctx, "/octl.Octl/GetTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Octl service

type OctlServer interface {
	TrackStatus(*StatusRequest, Octl_TrackStatusServer) error
	GetFrameworkInfo(context.Context, *GetFrameworkInfoRequest) (*GetFrameworkInfoReply, error)
	Teardown(context.Context, *TeardownRequest) (*TeardownReply, error)
	GetEnvironments(context.Context, *GetEnvironmentsRequest) (*GetEnvironmentsReply, error)
	NewEnvironment(context.Context, *NewEnvironmentRequest) (*NewEnvironmentReply, error)
	GetEnvironment(context.Context, *GetEnvironmentRequest) (*GetEnvironmentReply, error)
	ControlEnvironment(context.Context, *ControlEnvironmentRequest) (*ControlEnvironmentReply, error)
	ModifyEnvironment(context.Context, *ModifyEnvironmentRequest) (*ModifyEnvironmentReply, error)
	DestroyEnvironment(context.Context, *DestroyEnvironmentRequest) (*DestroyEnvironmentReply, error)
	GetTasks(context.Context, *GetTasksRequest) (*GetTasksReply, error)
}

func RegisterOctlServer(s *grpc.Server, srv OctlServer) {
	s.RegisterService(&_Octl_serviceDesc, srv)
}

func _Octl_TrackStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StatusRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(OctlServer).TrackStatus(m, &octlTrackStatusServer{stream})
}

type Octl_TrackStatusServer interface {
	Send(*StatusReply) error
	grpc.ServerStream
}

type octlTrackStatusServer struct {
	grpc.ServerStream
}

func (x *octlTrackStatusServer) Send(m *StatusReply) error {
	return x.ServerStream.SendMsg(m)
}

func _Octl_GetFrameworkInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFrameworkInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OctlServer).GetFrameworkInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/octl.Octl/GetFrameworkInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OctlServer).GetFrameworkInfo(ctx, req.(*GetFrameworkInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Octl_Teardown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeardownRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OctlServer).Teardown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/octl.Octl/Teardown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OctlServer).Teardown(ctx, req.(*TeardownRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Octl_GetEnvironments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEnvironmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OctlServer).GetEnvironments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/octl.Octl/GetEnvironments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OctlServer).GetEnvironments(ctx, req.(*GetEnvironmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Octl_NewEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OctlServer).NewEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/octl.Octl/NewEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OctlServer).NewEnvironment(ctx, req.(*NewEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Octl_GetEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OctlServer).GetEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/octl.Octl/GetEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OctlServer).GetEnvironment(ctx, req.(*GetEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Octl_ControlEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ControlEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OctlServer).ControlEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/octl.Octl/ControlEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OctlServer).ControlEnvironment(ctx, req.(*ControlEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Octl_ModifyEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OctlServer).ModifyEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/octl.Octl/ModifyEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OctlServer).ModifyEnvironment(ctx, req.(*ModifyEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Octl_DestroyEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OctlServer).DestroyEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/octl.Octl/DestroyEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OctlServer).DestroyEnvironment(ctx, req.(*DestroyEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Octl_GetTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OctlServer).GetTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/octl.Octl/GetTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OctlServer).GetTasks(ctx, req.(*GetTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Octl_serviceDesc = grpc.ServiceDesc{
	ServiceName: "octl.Octl",
	HandlerType: (*OctlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFrameworkInfo",
			Handler:    _Octl_GetFrameworkInfo_Handler,
		},
		{
			MethodName: "Teardown",
			Handler:    _Octl_Teardown_Handler,
		},
		{
			MethodName: "GetEnvironments",
			Handler:    _Octl_GetEnvironments_Handler,
		},
		{
			MethodName: "NewEnvironment",
			Handler:    _Octl_NewEnvironment_Handler,
		},
		{
			MethodName: "GetEnvironment",
			Handler:    _Octl_GetEnvironment_Handler,
		},
		{
			MethodName: "ControlEnvironment",
			Handler:    _Octl_ControlEnvironment_Handler,
		},
		{
			MethodName: "ModifyEnvironment",
			Handler:    _Octl_ModifyEnvironment_Handler,
		},
		{
			MethodName: "DestroyEnvironment",
			Handler:    _Octl_DestroyEnvironment_Handler,
		},
		{
			MethodName: "GetTasks",
			Handler:    _Octl_GetTasks_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "TrackStatus",
			Handler:       _Octl_TrackStatus_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protos/octlserver.proto",
}

func (m *Event_MesosHeartbeat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Event_MesosHeartbeat) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *StatusRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatusRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *StatusReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatusReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.State) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.State)))
		i += copy(dAtA[i:], m.State)
	}
	if len(m.StatusUpdates) > 0 {
		for _, msg := range m.StatusUpdates {
			dAtA[i] = 0x12
			i++
			i = encodeVarintOctlserver(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *StatusUpdate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatusUpdate) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Level != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(m.Level))
	}
	if m.Event != nil {
		nn1, err := m.Event.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn1
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *StatusUpdate_MesosHeartbeat) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.MesosHeartbeat != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(m.MesosHeartbeat.Size()))
		n2, err := m.MesosHeartbeat.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	return i, nil
}
func (m *GetFrameworkInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetFrameworkInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetFrameworkInfoReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetFrameworkInfoReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.FrameworkId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.FrameworkId)))
		i += copy(dAtA[i:], m.FrameworkId)
	}
	if m.EnvironmentsCount != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(m.EnvironmentsCount))
	}
	if m.TasksCount != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(m.TasksCount))
	}
	if len(m.State) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.State)))
		i += copy(dAtA[i:], m.State)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TeardownRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TeardownRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Reason) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.Reason)))
		i += copy(dAtA[i:], m.Reason)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TeardownReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TeardownReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetEnvironmentsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetEnvironmentsRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetEnvironmentsReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetEnvironmentsReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.FrameworkId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.FrameworkId)))
		i += copy(dAtA[i:], m.FrameworkId)
	}
	if len(m.Environments) > 0 {
		for _, msg := range m.Environments {
			dAtA[i] = 0x12
			i++
			i = encodeVarintOctlserver(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *EnvironmentInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EnvironmentInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.CreatedWhen) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.CreatedWhen)))
		i += copy(dAtA[i:], m.CreatedWhen)
	}
	if len(m.State) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.State)))
		i += copy(dAtA[i:], m.State)
	}
	if len(m.Tasks) > 0 {
		for _, s := range m.Tasks {
			dAtA[i] = 0x22
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *NewEnvironmentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NewEnvironmentRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Workflow) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.Workflow)))
		i += copy(dAtA[i:], m.Workflow)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *NewEnvironmentReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NewEnvironmentReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.State) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.State)))
		i += copy(dAtA[i:], m.State)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetEnvironmentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetEnvironmentRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetEnvironmentReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetEnvironmentReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Environment != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(m.Environment.Size()))
		n3, err := m.Environment.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ControlEnvironmentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControlEnvironmentRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if m.Type != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ControlEnvironmentReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControlEnvironmentReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.State) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.State)))
		i += copy(dAtA[i:], m.State)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ModifyEnvironmentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModifyEnvironmentRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.Operations) > 0 {
		for _, msg := range m.Operations {
			dAtA[i] = 0x12
			i++
			i = encodeVarintOctlserver(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.ReconfigureAll {
		dAtA[i] = 0x18
		i++
		if m.ReconfigureAll {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *EnvironmentOperation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EnvironmentOperation) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Type != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(m.Type))
	}
	if len(m.RoleName) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.RoleName)))
		i += copy(dAtA[i:], m.RoleName)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ModifyEnvironmentReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModifyEnvironmentReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.FailedOperations) > 0 {
		for _, msg := range m.FailedOperations {
			dAtA[i] = 0xa
			i++
			i = encodeVarintOctlserver(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Id) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.State) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.State)))
		i += copy(dAtA[i:], m.State)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DestroyEnvironmentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DestroyEnvironmentRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DestroyEnvironmentReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DestroyEnvironmentReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetTasksRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTasksRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetTasksReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTasksReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Tasks) > 0 {
		for _, msg := range m.Tasks {
			dAtA[i] = 0xa
			i++
			i = encodeVarintOctlserver(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TaskInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TaskInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.Locked {
		dAtA[i] = 0x10
		i++
		if m.Locked {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Hostname) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintOctlserver(dAtA, i, uint64(len(m.Hostname)))
		i += copy(dAtA[i:], m.Hostname)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintOctlserver(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Event_MesosHeartbeat) Size() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StatusRequest) Size() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StatusReply) Size() (n int) {
	var l int
	_ = l
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	if len(m.StatusUpdates) > 0 {
		for _, e := range m.StatusUpdates {
			l = e.Size()
			n += 1 + l + sovOctlserver(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StatusUpdate) Size() (n int) {
	var l int
	_ = l
	if m.Level != 0 {
		n += 1 + sovOctlserver(uint64(m.Level))
	}
	if m.Event != nil {
		n += m.Event.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StatusUpdate_MesosHeartbeat) Size() (n int) {
	var l int
	_ = l
	if m.MesosHeartbeat != nil {
		l = m.MesosHeartbeat.Size()
		n += 1 + l + sovOctlserver(uint64(l))
	}
	return n
}
func (m *GetFrameworkInfoRequest) Size() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetFrameworkInfoReply) Size() (n int) {
	var l int
	_ = l
	l = len(m.FrameworkId)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	if m.EnvironmentsCount != 0 {
		n += 1 + sovOctlserver(uint64(m.EnvironmentsCount))
	}
	if m.TasksCount != 0 {
		n += 1 + sovOctlserver(uint64(m.TasksCount))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TeardownRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TeardownReply) Size() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetEnvironmentsRequest) Size() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetEnvironmentsReply) Size() (n int) {
	var l int
	_ = l
	l = len(m.FrameworkId)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	if len(m.Environments) > 0 {
		for _, e := range m.Environments {
			l = e.Size()
			n += 1 + l + sovOctlserver(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EnvironmentInfo) Size() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	l = len(m.CreatedWhen)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	if len(m.Tasks) > 0 {
		for _, s := range m.Tasks {
			l = len(s)
			n += 1 + l + sovOctlserver(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NewEnvironmentRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.Workflow)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NewEnvironmentReply) Size() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetEnvironmentRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetEnvironmentReply) Size() (n int) {
	var l int
	_ = l
	if m.Environment != nil {
		l = m.Environment.Size()
		n += 1 + l + sovOctlserver(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ControlEnvironmentRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovOctlserver(uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ControlEnvironmentReply) Size() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModifyEnvironmentRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	if len(m.Operations) > 0 {
		for _, e := range m.Operations {
			l = e.Size()
			n += 1 + l + sovOctlserver(uint64(l))
		}
	}
	if m.ReconfigureAll {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EnvironmentOperation) Size() (n int) {
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovOctlserver(uint64(m.Type))
	}
	l = len(m.RoleName)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModifyEnvironmentReply) Size() (n int) {
	var l int
	_ = l
	if len(m.FailedOperations) > 0 {
		for _, e := range m.FailedOperations {
			l = e.Size()
			n += 1 + l + sovOctlserver(uint64(l))
		}
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DestroyEnvironmentRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DestroyEnvironmentReply) Size() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTasksRequest) Size() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTasksReply) Size() (n int) {
	var l int
	_ = l
	if len(m.Tasks) > 0 {
		for _, e := range m.Tasks {
			l = e.Size()
			n += 1 + l + sovOctlserver(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TaskInfo) Size() (n int) {
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	if m.Locked {
		n += 2
	}
	l = len(m.Hostname)
	if l > 0 {
		n += 1 + l + sovOctlserver(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovOctlserver(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozOctlserver(x uint64) (n int) {
	return sovOctlserver(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Event_MesosHeartbeat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Event_MesosHeartbeat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Event_MesosHeartbeat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatusRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatusRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatusRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatusReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatusReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatusReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusUpdates", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StatusUpdates = append(m.StatusUpdates, &StatusUpdate{})
			if err := m.StatusUpdates[len(m.StatusUpdates)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatusUpdate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatusUpdate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatusUpdate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			m.Level = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Level |= (StatusUpdate_Level(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MesosHeartbeat", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Event_MesosHeartbeat{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Event = &StatusUpdate_MesosHeartbeat{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetFrameworkInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetFrameworkInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetFrameworkInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetFrameworkInfoReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetFrameworkInfoReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetFrameworkInfoReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FrameworkId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FrameworkId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnvironmentsCount", wireType)
			}
			m.EnvironmentsCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EnvironmentsCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TasksCount", wireType)
			}
			m.TasksCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TasksCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TeardownRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TeardownRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TeardownRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TeardownReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TeardownReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TeardownReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetEnvironmentsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetEnvironmentsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetEnvironmentsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetEnvironmentsReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetEnvironmentsReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetEnvironmentsReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FrameworkId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FrameworkId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Environments", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Environments = append(m.Environments, &EnvironmentInfo{})
			if err := m.Environments[len(m.Environments)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EnvironmentInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EnvironmentInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EnvironmentInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedWhen", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedWhen = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tasks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tasks = append(m.Tasks, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NewEnvironmentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NewEnvironmentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NewEnvironmentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Workflow", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Workflow = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NewEnvironmentReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NewEnvironmentReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NewEnvironmentReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetEnvironmentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetEnvironmentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetEnvironmentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetEnvironmentReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetEnvironmentReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetEnvironmentReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Environment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Environment == nil {
				m.Environment = &EnvironmentInfo{}
			}
			if err := m.Environment.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControlEnvironmentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ControlEnvironmentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ControlEnvironmentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= (ControlEnvironmentRequest_Optype(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControlEnvironmentReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ControlEnvironmentReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ControlEnvironmentReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModifyEnvironmentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModifyEnvironmentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModifyEnvironmentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Operations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Operations = append(m.Operations, &EnvironmentOperation{})
			if err := m.Operations[len(m.Operations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReconfigureAll", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReconfigureAll = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EnvironmentOperation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EnvironmentOperation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EnvironmentOperation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= (EnvironmentOperation_Optype(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModifyEnvironmentReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModifyEnvironmentReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModifyEnvironmentReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FailedOperations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FailedOperations = append(m.FailedOperations, &EnvironmentOperation{})
			if err := m.FailedOperations[len(m.FailedOperations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DestroyEnvironmentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DestroyEnvironmentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DestroyEnvironmentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DestroyEnvironmentReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DestroyEnvironmentReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DestroyEnvironmentReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTasksRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTasksRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTasksRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTasksReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTasksReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTasksReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tasks", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tasks = append(m.Tasks, &TaskInfo{})
			if err := m.Tasks[len(m.Tasks)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TaskInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TaskInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TaskInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Locked", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Locked = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hostname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOctlserver
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hostname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOctlserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOctlserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipOctlserver(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowOctlserver
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOctlserver
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthOctlserver
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowOctlserver
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipOctlserver(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthOctlserver = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowOctlserver   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("protos/octlserver.proto", fileDescriptor_octlserver_c952064239d7931c) }

var fileDescriptor_octlserver_c952064239d7931c = []byte{
	// 1075 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x8e, 0xf3, 0xb3, 0x9b, 0x9e, 0xb4, 0xa9, 0x3b, 0xfd, 0x4b, 0xbd, 0xdd, 0x50, 0x46, 0x68,
	0x29, 0x02, 0x05, 0xc8, 0xb2, 0x62, 0x17, 0x2e, 0x50, 0x7f, 0xd2, 0x6c, 0xd0, 0x36, 0xae, 0x26,
	0x69, 0x17, 0x90, 0x50, 0x71, 0x9d, 0x09, 0x8d, 0xea, 0x7a, 0x82, 0x3d, 0x6d, 0xd5, 0x17, 0xe0,
	0x92, 0x6b, 0x2e, 0xe0, 0x69, 0xb8, 0x81, 0x3b, 0x1e, 0x01, 0x95, 0x47, 0xe0, 0x05, 0xd0, 0xcc,
	0xd8, 0x89, 0xe3, 0x1f, 0xb5, 0x77, 0x9e, 0x73, 0xbe, 0x33, 0xe7, 0x9c, 0xef, 0xfc, 0x8c, 0x61,
	0x7d, 0xec, 0x31, 0xce, 0xfc, 0x8f, 0x99, 0xcd, 0x1d, 0x9f, 0x7a, 0xd7, 0xd4, 0x6b, 0x48, 0x09,
	0x2a, 0x0a, 0x09, 0x5e, 0x83, 0x95, 0xd6, 0x35, 0x75, 0xf9, 0xe9, 0x21, 0xf5, 0x99, 0xff, 0x9a,
	0x5a, 0x1e, 0x3f, 0xa3, 0x16, 0xc7, 0x8b, 0xb0, 0xd0, 0xe3, 0x16, 0xbf, 0xf2, 0x09, 0xfd, 0xe9,
	0x8a, 0xfa, 0x1c, 0x7f, 0x0f, 0x95, 0x50, 0x30, 0x76, 0x6e, 0xd1, 0x0a, 0x94, 0x7c, 0x6e, 0x71,
	0x5a, 0xd3, 0xb6, 0xb4, 0xed, 0x39, 0xa2, 0x0e, 0xe8, 0x25, 0x2c, 0xf8, 0x12, 0x74, 0x3c, 0x1e,
	0x58, 0x9c, 0xfa, 0xb5, 0xfc, 0x56, 0x61, 0xbb, 0xd2, 0x44, 0x0d, 0xe1, 0xab, 0xd1, 0x8b, 0xa8,
	0xc8, 0x2c, 0x10, 0xff, 0xa1, 0xc1, 0x7c, 0x54, 0x8f, 0x1a, 0x50, 0x72, 0xe8, 0x35, 0x75, 0xa4,
	0x83, 0x6a, 0xb3, 0x96, 0xbc, 0xa2, 0xf1, 0x46, 0xe8, 0x89, 0x82, 0xa1, 0x7d, 0xa8, 0x5e, 0xce,
	0xa4, 0x50, 0xcb, 0x6f, 0x69, 0xdb, 0x95, 0xa6, 0xa1, 0x0c, 0xd3, 0x92, 0x7c, 0x9d, 0x23, 0x31,
	0x1b, 0xfc, 0x19, 0x94, 0xe4, 0xad, 0x68, 0x0e, 0x4a, 0xfb, 0xad, 0xdd, 0xe3, 0xb6, 0x9e, 0x43,
	0x65, 0x28, 0x76, 0xba, 0x07, 0xa6, 0xae, 0xa1, 0x0a, 0x3c, 0x7e, 0xbb, 0x43, 0xba, 0x9d, 0x6e,
	0x5b, 0xcf, 0x0b, 0x44, 0x8b, 0x10, 0x93, 0xe8, 0x85, 0xdd, 0xc7, 0x50, 0x92, 0xf7, 0xe3, 0x0d,
	0x58, 0x6f, 0x53, 0x7e, 0xe0, 0x59, 0x97, 0xf4, 0x86, 0x79, 0x17, 0x1d, 0x77, 0xc8, 0x42, 0xfe,
	0x7e, 0xd7, 0x60, 0x35, 0xa9, 0x13, 0x54, 0x6e, 0x41, 0x65, 0x38, 0x91, 0x0e, 0x02, 0x42, 0xa3,
	0x22, 0xf4, 0x11, 0x2c, 0x51, 0xf7, 0x7a, 0xe4, 0x31, 0xf7, 0x92, 0xba, 0xdc, 0xdf, 0x63, 0x57,
	0xae, 0x4a, 0xaf, 0x44, 0x92, 0x0a, 0x54, 0x07, 0xe0, 0x96, 0x7f, 0x11, 0xc0, 0x0a, 0x12, 0x16,
	0x91, 0x4c, 0x4b, 0x57, 0x8c, 0x94, 0x0e, 0x7f, 0x00, 0x8b, 0x7d, 0x6a, 0x79, 0x03, 0x76, 0xe3,
	0x06, 0x21, 0xa3, 0x35, 0x78, 0xe4, 0x51, 0xcb, 0x67, 0x6e, 0x10, 0x53, 0x70, 0x12, 0xbd, 0x31,
	0x85, 0x8e, 0x9d, 0x5b, 0x5c, 0x83, 0xb5, 0x36, 0xe5, 0xad, 0x48, 0x24, 0x61, 0xd6, 0x3e, 0xac,
	0x24, 0x34, 0x0f, 0xcb, 0xf9, 0x15, 0xcc, 0x47, 0x53, 0x0b, 0x3a, 0x69, 0x35, 0xa8, 0xe6, 0x54,
	0x23, 0x79, 0x9c, 0x81, 0x62, 0x06, 0x8b, 0x31, 0x00, 0xaa, 0x42, 0x7e, 0x14, 0xba, 0xc9, 0x8f,
	0x06, 0xc2, 0xbf, 0xed, 0x51, 0x8b, 0xd3, 0xc1, 0xdb, 0x73, 0xea, 0x4a, 0x2e, 0xe7, 0x48, 0x54,
	0x34, 0x65, 0xa9, 0x10, 0x6d, 0xf0, 0x15, 0x28, 0x49, 0x26, 0x6b, 0xc5, 0xad, 0x82, 0x90, 0xca,
	0x03, 0x7e, 0x0e, 0xab, 0x5d, 0x7a, 0x13, 0xf1, 0x19, 0x32, 0x68, 0x40, 0x59, 0xa4, 0x33, 0x74,
	0xd8, 0x4d, 0xe0, 0x7c, 0x72, 0xc6, 0x5f, 0xc2, 0x72, 0xdc, 0x48, 0x30, 0x13, 0x8f, 0x74, 0x12,
	0x47, 0x3e, 0x5a, 0xad, 0xf7, 0x65, 0x33, 0xa5, 0x78, 0x8c, 0x99, 0xe3, 0x2e, 0x2c, 0xc7, 0x81,
	0xc2, 0xcb, 0xe7, 0x50, 0x89, 0x50, 0x26, 0xf1, 0x99, 0xe4, 0x46, 0x91, 0xf8, 0x2f, 0x0d, 0x36,
	0xf6, 0x98, 0xcb, 0x3d, 0xe6, 0xdc, 0xef, 0x1d, 0x7d, 0x01, 0x45, 0x7e, 0x3b, 0x56, 0xb1, 0x57,
	0x9b, 0xcf, 0xd4, 0xfd, 0x99, 0xe6, 0x0d, 0x73, 0x2c, 0xd0, 0x44, 0xda, 0xe0, 0x1f, 0xe0, 0x91,
	0x3a, 0x8b, 0x01, 0xec, 0x9a, 0xe6, 0x91, 0x9e, 0x43, 0x08, 0xaa, 0xbd, 0xfe, 0x0e, 0xe9, 0x9f,
	0xee, 0xec, 0xf5, 0x3b, 0x27, 0x9d, 0xfe, 0xb7, 0xba, 0x86, 0x96, 0x60, 0xa1, 0xd7, 0x37, 0x8f,
	0xa6, 0xa2, 0x3c, 0x5a, 0x80, 0xb9, 0x3d, 0xb3, 0x7b, 0xd0, 0x69, 0x1f, 0x93, 0x96, 0x5e, 0x10,
	0xf6, 0xad, 0x6f, 0x3a, 0x7d, 0xbd, 0x88, 0xe6, 0xa1, 0xdc, 0x36, 0x4f, 0xd5, 0xd8, 0x96, 0xf0,
	0x57, 0xb0, 0x9e, 0x16, 0xcb, 0xc3, 0xab, 0xf0, 0x8b, 0x06, 0xb5, 0x43, 0x36, 0x18, 0x0d, 0x6f,
	0x1f, 0xc4, 0x05, 0xb0, 0x31, 0xf5, 0x2c, 0x3e, 0x62, 0x6e, 0xd8, 0xce, 0x46, 0x82, 0x71, 0x33,
	0x84, 0x90, 0x08, 0x1a, 0x3d, 0x83, 0xaa, 0x47, 0x6d, 0xe6, 0x0e, 0x47, 0x3f, 0x5e, 0x79, 0x74,
	0xc7, 0x71, 0x64, 0x57, 0x96, 0x49, 0x4c, 0x8a, 0x7f, 0xd3, 0x60, 0x25, 0xed, 0x32, 0xf4, 0x22,
	0x28, 0x84, 0x5a, 0xa6, 0xef, 0x66, 0xbb, 0x9d, 0xa9, 0x81, 0xe8, 0x5f, 0x8f, 0x39, 0xb4, 0x6b,
	0x5d, 0x86, 0x99, 0x4f, 0xce, 0xf8, 0xd3, 0x94, 0xfa, 0x2c, 0x42, 0x85, 0xb4, 0x0e, 0xcd, 0x93,
	0xd6, 0x29, 0x31, 0xdf, 0x08, 0xea, 0xe7, 0xa1, 0xbc, 0xb3, 0xbf, 0xaf, 0x4e, 0x45, 0xfc, 0xb3,
	0x06, 0x6b, 0x29, 0x7c, 0x09, 0xc2, 0x0f, 0x40, 0x1f, 0x5a, 0x23, 0x87, 0x0e, 0xcc, 0x29, 0x47,
	0xda, 0xbd, 0x1c, 0x25, 0x6c, 0x02, 0xd6, 0xf3, 0xc9, 0xc2, 0x45, 0xc7, 0x18, 0x7f, 0x08, 0x1b,
	0xfb, 0xd4, 0xe7, 0x1e, 0x7b, 0x40, 0xe1, 0xc4, 0x52, 0x4f, 0x03, 0x8b, 0xc5, 0xb7, 0x04, 0x8b,
	0x6d, 0xca, 0xfb, 0x62, 0x09, 0x84, 0x1b, 0xef, 0x05, 0x2c, 0x4c, 0x45, 0x22, 0xb3, 0xf7, 0xc2,
	0x95, 0xa1, 0xd2, 0xa9, 0xaa, 0x74, 0x04, 0x40, 0x4e, 0x57, 0xb0, 0x42, 0x08, 0x94, 0x43, 0x11,
	0x42, 0x50, 0x74, 0x05, 0xe3, 0x2a, 0x04, 0xf9, 0x2d, 0x76, 0xb1, 0xc3, 0xec, 0x0b, 0xaa, 0x72,
	0x2b, 0x93, 0xe0, 0x24, 0x2a, 0x74, 0xce, 0x7c, 0x2e, 0xf1, 0x2a, 0xc5, 0xc9, 0xb9, 0xf9, 0x5f,
	0x09, 0x8a, 0xa6, 0xcd, 0x1d, 0xf4, 0x0a, 0x2a, 0x7d, 0xcf, 0xb2, 0x2f, 0xd4, 0xeb, 0x89, 0x96,
	0xa3, 0x6f, 0x69, 0x10, 0xb7, 0xb1, 0x34, 0x2b, 0x14, 0xd9, 0xe5, 0x3e, 0xd1, 0xd0, 0x11, 0xe8,
	0xf1, 0x57, 0x0b, 0x3d, 0x55, 0xd0, 0x8c, 0x97, 0xce, 0x78, 0x92, 0xa5, 0x96, 0x77, 0xa2, 0x97,
	0x50, 0x0e, 0x5f, 0x0f, 0x14, 0x6c, 0x9c, 0xd8, 0xc3, 0x63, 0x2c, 0xc7, 0xc5, 0xca, 0xf2, 0x50,
	0xb2, 0x1d, 0x7d, 0x4c, 0xd0, 0xe6, 0xc4, 0x57, 0xca, 0xeb, 0x63, 0x18, 0x19, 0x5a, 0x75, 0xdd,
	0xd7, 0x50, 0x9d, 0x5d, 0xc0, 0x28, 0x88, 0x3c, 0x75, 0x97, 0x1b, 0x1b, 0xe9, 0xca, 0xc9, 0x5d,
	0xb3, 0x5e, 0xd0, 0x93, 0x34, 0xdf, 0xb1, 0xbb, 0x52, 0x36, 0x33, 0xce, 0xa1, 0x13, 0x40, 0xc9,
	0xb5, 0x84, 0xde, 0xb9, 0x67, 0x79, 0x1a, 0x4f, 0xb3, 0x01, 0xea, 0xde, 0x1e, 0x2c, 0x25, 0x86,
	0x0f, 0xd5, 0x95, 0x55, 0xd6, 0x16, 0x33, 0x36, 0x33, 0xf5, 0x93, 0x60, 0x93, 0xc3, 0x11, 0x06,
	0x9b, 0x39, 0x63, 0x61, 0xb0, 0x59, 0x73, 0x25, 0xbb, 0x24, 0x1c, 0xa3, 0xb0, 0x4b, 0x62, 0x93,
	0x16, 0x76, 0xc9, 0xcc, 0xb4, 0xe1, 0xdc, 0x6e, 0xf3, 0xcf, 0xbb, 0xba, 0xf6, 0xf7, 0x5d, 0x5d,
	0xfb, 0xe7, 0xae, 0xae, 0xfd, 0xfa, 0x6f, 0x3d, 0x07, 0x9b, 0xf6, 0x79, 0xc3, 0xa6, 0x9e, 0xdb,
	0xb0, 0x9c, 0x91, 0x4d, 0x95, 0x95, 0x37, 0xb6, 0xd5, 0xdf, 0xf0, 0x77, 0xf9, 0xf1, 0xd9, 0xd9,
	0x23, 0xf9, 0x4b, 0xfc, 0xfc, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x85, 0x4c, 0xba, 0x50, 0x2d,
	0x0b, 0x00, 0x00,
}
